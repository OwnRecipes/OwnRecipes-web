{"version":3,"file":"static/js/437.8e9452ca.chunk.js","mappings":"oNAQA,MAAMA,GAAWC,EAAAA,EAAAA,IAAe,CAC9BC,UAAW,CACTC,GAAI,YACJC,YAAa,iBACbC,eAAgB,aAElBC,OAAQ,CACNH,GAAI,aACJC,YAAa,aACbC,eAAgB,kBAElBE,QAAS,CACPJ,GAAI,cACJC,YAAa,cACbC,eAAgB,iDAgBpB,EAZ+BG,KAC7B,MAAM,cAAEC,IAAkBC,EAAAA,EAAAA,KAE1B,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAACC,MAAOJ,EAAcT,EAASE,WAAWY,SAAA,EACpDC,EAAAA,EAAAA,KAAA,MAAAD,SAAKL,EAAcT,EAASM,WAC5BS,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAiBC,KAAKC,EAAAA,EAAAA,IAAgB,mBAAoBC,IAAI,SAC7EJ,EAAAA,EAAAA,KAACK,EAAAA,EAAC,CAAAN,SAAEL,EAAcT,EAASO,aACf,C,8HCAlB,SAASc,EAAoBC,GAAuB,IAADC,EAAAC,EACjD,MAAMC,EAAkBH,EAAKI,WAA+B,QAArBH,GAACI,EAAAA,EAAAA,IAAO,qBAAa,IAAAJ,EAAAA,EAAI,IAAMD,EAAKM,WAA+B,QAArBJ,GAACG,EAAAA,EAAAA,IAAO,qBAAa,IAAAH,EAAAA,EAAI,IAAIK,QAAUP,EACtHQ,EAAkBL,EAAWC,WAAW,KACxCK,EAAkBN,EAAWO,SAAS,KAG5C,OAFwBP,EAAWG,UAAUE,EAAkB,EAAI,EAAGC,EAAgBN,EAAWI,OAAS,OAAII,EAGhH,CAKC,MA6BD,EA7BkDC,IAAmE,IAAlE,MAAErB,EAAK,GAAEV,EAAE,MAAEgC,EAAK,UAAEnB,EAAS,SAAEF,GAA6BoB,EAC7G,MAAME,GAAMC,EAAAA,EAAAA,MACNC,GAAWC,EAAAA,EAAAA,MACXC,EAAa,OAALL,QAAK,IAALA,OAAK,EAALA,EAAOM,KAAKD,MAEpBE,GAAuBC,EAAAA,EAAAA,YAAWC,EAAAA,GAexC,OAbAC,EAAAA,EAAAA,YAAU,KAERC,SAASjC,OAAqB,MAATA,GAAiBA,EAAMgB,OAAS,EAAI,GAAGhB,OAAa,IAAvD,YAAsE,GACvF,CAACA,KAEJgC,EAAAA,EAAAA,YAAU,KACR,GAAIL,GAAe,MAANrC,EAAY,CACvB,MAAM4C,GAAIC,EAAAA,EAAAA,IAAa,aAEvBZ,EAAIW,EACN,IACC,CAAC5C,EAAIqC,KAGNzB,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CAAC9C,GAAG,iBAAiB+C,GAAG,OAAOlC,UAAWmC,IAAW9B,EAAoBiB,EAASc,UAAWpC,GAAYqC,MAAO,CAAEC,UAAW,GAAGZ,EAAqBa,mBAAoBzC,UACjLC,EAAAA,EAAAA,KAACyC,EAAAA,EAAa,CAACC,SAAO,EAACC,YAAU,EAAA5C,SAC9BA,KAEO,C","sources":["app/components/NotFoundPage.tsx","common/components/PageWrapper.tsx"],"sourcesContent":["import { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/404.css';\n\nimport P from '../../common/components/P';\nimport PageWrapper from '../../common/components/PageWrapper';\nimport { getResourcePath } from '../../common/utility';\n\nconst messages = defineMessages({\n  not_found: {\n    id: '404.title',\n    description: '404 site title',\n    defaultMessage: 'Not Found',\n  },\n  header: {\n    id: '404.header',\n    description: '404 Header',\n    defaultMessage: 'Site not found',\n  },\n  message: {\n    id: '404.message',\n    description: '404 Message',\n    defaultMessage: 'The page you\\'re looking for does not exist.',\n  },\n});\n\nconst NotFoundPage: React.FC = () => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <PageWrapper title={formatMessage(messages.not_found)}>\n      <h1>{formatMessage(messages.header)}</h1>\n      <img className='img-responsive' src={getResourcePath('/images/404.png')} alt='404' />\n      <P>{formatMessage(messages.message)}</P>\n    </PageWrapper>\n  );\n};\n\nexport default NotFoundPage;\n","import { useContext, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useLocation, useNavigate } from 'react-router';\nimport classNames from 'classnames';\n\nimport { AnyComponent } from '../../types/Types';\nimport DynamicHeightContext from '../context/DynamicHeightContext';\nimport ArrayReducerType from '../store/ArrayReducerType';\nimport ItemReducerType from '../store/ItemReducerType';\nimport { getEnv, getRoutePath } from '../utility';\nimport ErrorBoundary from './ErrorBoundary';\n\n/** {@link PageTitleFixer} Props. */\ninterface IPageWrapperProps {\n  /** Page title. */\n  title?:   string;\n  id?:      string;\n  state?:   ItemReducerType<unknown> | ArrayReducerType<unknown>;\n  className?: string;\n  /** Page component to render. */\n  children: AnyComponent;\n}\n\n/**\n * Strips slashes etc. of the path.\n *\n * Example:\n * location.pathname = /browse/\n * toCleanLocationPath = browse\n *\n * @param path - location.pathname\n *\n * @return Nice path without gibberish.\n */\nfunction toCleanLocationPath(path: string): string {\n  const pathNoHost      = path.startsWith(getEnv('PUBLIC_URL') ?? '') ? path.substring((getEnv('PUBLIC_URL') ?? '').length) : path;\n  const startsWithSlash = pathNoHost.startsWith('/');\n  const endsWithSlash   = pathNoHost.endsWith('/');\n  const pathNoSlashes   = pathNoHost.substring(startsWithSlash ? 1 : 0, endsWithSlash ? pathNoHost.length - 1 : undefined);\n\n  return pathNoSlashes;\n}\n\n/**\n * HOC to properly set the browser title to assure accessibilty.\n */\n const PageWrapper: React.FC<IPageWrapperProps> = ({ title, id, state, className, children }: IPageWrapperProps) => {\n  const nav = useNavigate();\n  const location = useLocation();\n  const error = state?.meta.error;\n\n  const dynamicHeightContext = useContext(DynamicHeightContext);\n\n  useEffect(() => {\n    // ARIA: Titles should contain the application name and page title.\n    document.title = (`${title != null && title.length > 0 ? `${title} | ` : ''}OwnRecipes`);\n  }, [title]);\n\n  useEffect(() => {\n    if (error && id == null) {\n      const p = getRoutePath('/NotFound');\n      // console.log(`[PageWrapper] nav to \"${p}\"`);\n      nav(p);\n    }\n  }, [id, error]);\n\n  return (\n    <Container id='main-container' as='main' className={classNames(toCleanLocationPath(location.pathname), className)} style={{ marginTop: `${dynamicHeightContext.toolbarHeight}px` }}>\n      <ErrorBoundary verbose printStack>\n        {children}\n      </ErrorBoundary>\n    </Container>\n  );\n};\n\nexport default PageWrapper;\n"],"names":["messages","defineMessages","not_found","id","description","defaultMessage","header","message","NotFoundPage","formatMessage","useIntl","_jsxs","PageWrapper","title","children","_jsx","className","src","getResourcePath","alt","P","toCleanLocationPath","path","_getEnv","_getEnv2","pathNoHost","startsWith","getEnv","substring","length","startsWithSlash","endsWithSlash","endsWith","undefined","_ref","state","nav","useNavigate","location","useLocation","error","meta","dynamicHeightContext","useContext","DynamicHeightContext","useEffect","document","p","getRoutePath","Container","as","classNames","pathname","style","marginTop","toolbarHeight","ErrorBoundary","verbose","printStack"],"sourceRoot":""}