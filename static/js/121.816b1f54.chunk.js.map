{"version":3,"file":"static/js/121.816b1f54.chunk.js","mappings":"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","sources":["browse/store/MiniBrowseActions.ts","browse/containers/MiniBrowse.tsx","common/components/HeaderLink.tsx","common/components/Image.tsx","common/components/ReInput/ReSelect.tsx","common/components/WidthHeightRatio.tsx","groceryList/store/GroceryListActions.ts","recipe/components/Directions.tsx","recipe/components/IngredientGroups.tsx","recipe/components/Ingredients.tsx","recipe/components/SubRecipes.tsx","rating/components/RatingView.tsx","rating/components/RatingForm.tsx","rating/components/RatingComment.tsx","rating/components/RatingComments.tsx","rating/components/RatingsHeader.tsx","rating/components/RatingsWrapper.tsx","rating/containers/Ratings.tsx","rating/store/actions.ts","recipe/components/RecipeFooter.tsx","recipe/components/IngredientsHeader.tsx","recipe/components/AddToGroceryListModal.tsx","recipe/components/IngredientsFooter.tsx","recipe/components/IngredientsPanel.tsx","recipe/containers/IngredientsPanelContainer.tsx","common/components/ImageViewer.tsx","recipe/context/CookingModeContext.ts","common/hooks/useWakeLock.ts","recipe/components/CookingModeButton.tsx","recipe/components/RecipeHeader.tsx","recipe/components/DirectionsPanel.tsx","recipe/components/RecipeScheme.tsx","recipe/context/CookingModeContextProvider.tsx","recipe/components/CookingModeHandler.tsx","recipe/containers/RecipeContainer.tsx","recipe/containers/RecipePage.tsx","recipe_form/store/actions.ts","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import request from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { toBasicAction } from '../../common/store/redux';\nimport { handleError } from '../../common/requestUtils';\nimport { toRecipeList } from '../../recipe/store/RecipeTypes';\nimport { MiniBrowseDispatch, MINI_BROWSE_STORE } from './MiniBrowseTypes';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const loadMiniBrowse = (filter: string) => (dispatch: MiniBrowseDispatch) => {\n  dispatch({ ...toBasicAction(MINI_BROWSE_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.mini_browse}${filter ? `&${filter}` : ''}`)\n    .then(res => {\n        dispatch({\n          ...toBasicAction(\n            MINI_BROWSE_STORE,\n            ACTION.GET_SUCCESS\n          ),\n          payload: res.body.results?.map(toRecipeList),\n        });\n    })\n    .catch(err => dispatch(handleError(err, MINI_BROWSE_STORE)));\n};\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useLocation, useParams } from 'react-router';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/browse.css';\n\nimport { RootState } from '../../app/Store';\nimport Icon from '../../common/components/Icon';\nimport Button from '../../common/components/Button';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport { Recipe, RecipeList } from '../../recipe/store/RecipeTypes';\nimport * as RecipeActions from '../../recipe/store/RecipeActions';\nimport ListRecipes from '../components/ListRecipes';\nimport * as MiniBrowseActions from '../store/MiniBrowseActions';\n\nconst messages = defineMessages({\n  shuffleSuggestionsButton: {\n    id: 'browse.shuffle_suggestions_button_title',\n    description: 'Title/tooltip of the icon button to shuffle the suggestions.',\n    defaultMessage: 'Shuffle suggestions',\n  },\n});\n\ninterface IMiniBrowseProps {\n  heading: string;\n  count: number;\n  filters?: Record<string, string>;\n}\n\nfunction buildUrlFilter(count: number, filters: Record<string, string> | undefined): string {\n  const searchParams = new URLSearchParams(filters);\n  searchParams.append('limit', count.toString());\n  return searchParams.toString();\n}\n\nconst MiniBrowse: React.FC<IMiniBrowseProps> = ({ heading, count, filters }: IMiniBrowseProps) => {\n  const { formatMessage }  = useIntl();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const params = useParams();\n\n  const slug = params.recipe;\n\n  const miniBrowseItems = useSelector((state: RootState) => state.browse.browserMini.items);\n  const differentMiniBrowseItems = useMemo(() => miniBrowseItems?.filter(itm => itm.slug !== slug), [slug, miniBrowseItems]);\n  const recipeSlug = params.recipe ?? '';\n\n  useEffect(() => {\n    dispatch(MiniBrowseActions.loadMiniBrowse(buildUrlFilter(count, filters)));\n  }, [location]);\n\n  const handleShuffleClick = useCallback(() => {\n    dispatch(MiniBrowseActions.loadMiniBrowse(buildUrlFilter(count, filters)));\n  }, [buildUrlFilter, count, filters]);\n\n  const handleOpenRecipe = useCallback((rec: RecipeList) => {\n    if (recipeSlug !== rec.slug) {\n      dispatch(RecipeActions.preload(rec as Recipe));\n    }\n  }, [recipeSlug]);\n\n  if (differentMiniBrowseItems != null && differentMiniBrowseItems.length === 0) return null;\n\n  return (\n    <>\n      <h2 id='suggestions-heading'>{heading}</h2>\n      <Button id='shuffle-suggestions-button' variant='outline-primary' onClick={handleShuffleClick} className='print-hidden' tooltip={formatMessage(messages.shuffleSuggestionsButton)}>\n        <Icon icon='arrow-repeat' variant='light' />\n      </Button>\n      <ListRecipes data={differentMiniBrowseItems} onOpenRecipe={handleOpenRecipe} />\n    </>\n  );\n};\n\nexport default MiniBrowse;\n","import { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/header_link.css';\n\nimport { CommonProps } from '../types/OverridableComponent';\nimport PageScroller from './PageScroller';\n\nconst messages = defineMessages({\n  permalink_tooltip: {\n    id: 'permalink.tooltip',\n    description: 'Tooltip when hovering a permalink.',\n    defaultMessage: 'Permalink to this headline',\n  },\n});\n\nexport interface IHeaderLinkProps extends CommonProps {\n  linkFor: string;\n}\n\nconst HeaderLink = forwardRef<HTMLAnchorElement, IHeaderLinkProps>(({ linkFor, className, ...rest }: IHeaderLinkProps, ref) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <>\n      <Link\n          className = {classNames('headerlink', className)}\n          to = {`#${linkFor}`}\n          title = {formatMessage(messages.permalink_tooltip)}\n          {...rest}\n          ref = {ref}>\n        ¶\n      </Link>\n      <PageScroller uriFragmentId={linkFor} />\n    </>\n  );\n});\n\nexport default HeaderLink;\n","import { forwardRef, useCallback, useEffect, useState } from 'react';\n\nimport { CommonProps } from '../types/OverridableComponent';\n\nexport interface IImageProps extends CommonProps {\n  src: string;\n  placeholder?: string;\n  alt?: string;\n\n  onError?: () => void;\n}\n\nconst Image = forwardRef<HTMLImageElement, IImageProps>(({\n    src, placeholder, alt, onError, ...rest }: IImageProps, ref) => {\n  const [hasError, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    setError(false);\n  }, [src]);\n\n  const handleError = useCallback(() => {\n    setError(true);\n    onError?.();\n  }, [onError]);\n\n  return (\n    <img\n        src = {hasError ? placeholder : src}\n        alt = {alt}\n        onError = {handleError}\n\n        {...rest}\n        ref = {ref} />\n  );\n});\n\nexport default Image;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { forwardRef, useCallback } from 'react';\nimport { Field } from 'react-final-form';\nimport { useIntl } from 'react-intl';\n\nimport { formatValidation, requiredValidator } from '../../store/Validation';\nimport { ISelectProps, Select, SelectBase } from '../Input/Select';\n\nexport interface IReSelectProps extends ISelectProps {\n  format?: (value: any, name: string) => string;\n  parse?:  (value: any, name: string) => any;\n\n  parser?: (newValue: any | null) => any | undefined;\n  formatter?: (newValue: Array<any> | any) => any;\n  isMulti?: boolean;\n}\n\nconst ReSelect = forwardRef<SelectBase, IReSelectProps>(({\n    name, required, format, parse,\n    formatter, parser, isMulti,\n    onChange, onFocus, onBlur, ...rest }: IReSelectProps, ref) => {\n  const intl = useIntl();\n\n  const formatValue = useCallback((value: Array<any> | any | undefined) => {\n    if (value == null) {\n      return isMulti ? [] : undefined;\n    } else {\n      return formatter?.(value);\n    }\n  }, [formatter, isMulti]);\n\n  return (\n    <Field name={name} validate={required ? requiredValidator : undefined} validateFields={[]} format={format} parse={parse}>\n      {fprops => (\n        <Select\n            {...rest}\n            required = {required}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            isMulti  = {isMulti}\n\n            name     = {fprops.input.name}\n            value    = {formatValue(fprops.input.value)}\n            errors   = {formatValidation(intl, fprops.meta.error || (!fprops.meta.dirtySinceLastSubmit ? fprops.meta.submitError : undefined))}\n            meta     = {fprops.meta}\n            onChange = {(namee: string, value: string | undefined) => { fprops.input.onChange(parser?.(value)); onChange?.(namee, parser?.(value)); }}\n            onFocus  = {(event: React.FocusEvent<HTMLElement, Element>) => { fprops.input.onFocus(event); onFocus?.(event); }}\n            onBlur   = {(event: React.FocusEvent<HTMLElement, Element>) => { fprops.input.onBlur(event);  onBlur?.(event); }}\n            ref = {ref} />\n      )}\n    </Field>\n  );\n});\n\nexport default ReSelect;\n","import { forwardRef } from 'react';\nimport classNames from 'classnames';\n\nimport '../css/width_height_ratio.css';\nimport { CommonProps } from '../types/OverridableComponent';\n\nexport interface IWidthHeightRatioProps extends CommonProps {\n  height: number;\n  width:  number;\n  children: React.ReactNode;\n}\n\nconst WidthHeightRatio = forwardRef<HTMLDivElement, IWidthHeightRatioProps>(({\n  height, width, children,\n  className, style, ...rest }: IWidthHeightRatioProps, ref) => (\n    <div\n        style = {{\n          paddingTop: `${height}%`,\n          width:      `${width}%`,\n          position:   'relative',\n          ...style,\n        }}\n        className={classNames('width-height-ratio', className)}\n        {...rest}\n        ref = {ref}>\n      {children}\n    </div>\n));\n\nexport default WidthHeightRatio;\n","import request from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { Ingredient, SubRecipe } from '../../recipe/store/RecipeTypes';\nimport { AnyDispatch, toBasicAction } from '../../common/store/redux';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { handleError, handleFormError } from '../../common/requestUtils';\nimport { GroceryList, GroceryListAction, GroceryListActionTypes, GroceryListBulkAdd, GroceryListCreate, GroceryListDispatch, GroceryListDto, GroceryListUpdate, GROCERY_LIST_STORE, toGroceryList } from './GroceryListTypes';\nimport { GroceryListItemDto, toGroceryListItem } from './GroceryListItemTypes';\n\nexport const getGroceryListSuccess = (groceryList: GroceryList): GroceryListAction => (\n  { ...toBasicAction(GROCERY_LIST_STORE, ACTION.GET_SUCCESS), payload: groceryList }\n);\n\nexport const load = (listId: string) => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.list}${listId}/`)\n    .then(res => {\n      dispatch(getGroceryListSuccess(toGroceryList(res.body as GroceryListDto)));\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_STORE)));\n};\n\nexport const create = async (dispatch: AnyDispatch, item: GroceryListCreate) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.CREATE_START) });\n\n  return request()\n    .post(serverURLs.list)\n    .send(item)\n    .then(res => {\n      const groceryList = toGroceryList(res.body);\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_STORE,\n          ACTION.CREATE_SUCCESS\n        ),\n        payload: groceryList,\n      });\n    })\n    .catch(err => handleFormError(dispatch, err, GROCERY_LIST_STORE));\n};\n\nexport const update = async (dispatch: AnyDispatch, slug: string, item: Partial<GroceryListUpdate>) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.UPDATE_START) });\n\n  return request()\n    .patch(`${serverURLs.list}${slug}/`)\n    .send(item)\n    .then(res => {\n      const groceryList = toGroceryList(res.body);\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_STORE,\n          ACTION.UPDATE_SUCCESS\n        ),\n        payload: groceryList,\n      });\n    })\n    .catch(err => handleFormError(dispatch, err, GROCERY_LIST_STORE));\n};\n\nexport const remove = (id: number, slug: string) => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.DELETE_START) });\n\n  request()\n    .delete(`${serverURLs.list}${slug}/`)\n    .then(() => {\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_STORE,\n          ACTION.DELETE_SUCCESS\n        ),\n        payload: { id: id },\n      });\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_STORE)));\n};\n\nfunction format(i: Ingredient | SubRecipe, formatter: FormatterFunc) {\n  const quantityS = i.quantity && i.quantity !== '0' ? i.quantity : undefined;\n  const formatted = formatter(i.measurement, i.quantity);\n  return [quantityS, formatted, i.title].filter(Boolean).join(' ');\n}\n\ntype FormatterFunc = (measurement: string | undefined, quantity: string | undefined) => string;\n\nexport const bulkAdd = async (dispatch: AnyDispatch, list: number, data: GroceryListBulkAdd, formatter: FormatterFunc) => {\n  const checkedIngredients = data.ingredientGroups.flatMap(ig => ig.ingredients.map(i => ({ list: list, title: format(i, formatter) })));\n  const checkedSubRecipe = data.subrecipes.map(sr => ({ list: list, title: format(sr, formatter) }));\n  const allItems = checkedIngredients.concat(checkedSubRecipe);\n\n  if (allItems.length > 0) {\n    dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.UPDATE_START) });\n    return request()\n      .post(serverURLs.bulk_list_item)\n      .send(allItems)\n      .then(res => {\n        dispatch({ ...toBasicAction(GROCERY_LIST_STORE, GroceryListActionTypes.BULK_ADD), payload: res.body.map((i: GroceryListItemDto) => toGroceryListItem(list, i)) });\n        dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.UPDATE_SUCCESS) });\n      })\n      .catch(err => dispatch(handleError(err, GROCERY_LIST_STORE)));\n  } else {\n    return null;\n  }\n};\n\nexport const preload = (list: Partial<GroceryList>) => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.PRELOAD), payload: list });\n};\n\nexport const reset = () => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.RESET) });\n};\n","import { useMemo } from 'react';\nimport classNames from 'classnames';\n\nimport '../css/directions.css';\n\nimport HeaderLink from '../../common/components/HeaderLink';\nimport { IngredientGroup } from '../store/RecipeTypes';\nimport IngredientGroups from './IngredientGroups';\nimport { slugify } from '../../common/utility';\n\nexport interface IDirectionsProps {\n  directions: string;\n  ingredients: Array<IngredientGroup>;\n}\n\ninterface DirectionWithIngredients {\n  heading?:     string;\n  directions:   Array<string>;\n  ingredients?: Array<IngredientGroup>;\n}\n\ntype DirectionsWithIngredients = Array<DirectionWithIngredients>;\n\nfunction getIngredientsForStep(heading: string, unassignedIngredients: Array<IngredientGroup>): IngredientGroup | undefined {\n  const igIndex = unassignedIngredients.findIndex(ig => ig.title === heading);\n  if (igIndex >= 0) {\n    const igs = unassignedIngredients.splice(igIndex, 1);\n    return igs[0];\n  }\n\n  return undefined;\n}\n\nfunction pushDirections(groups: DirectionsWithIngredients, heading: string, directions: Array<string>, unassignedIngredients: Array<IngredientGroup>) {\n  if (directions.length === 0) return;\n\n  const ig = getIngredientsForStep(heading, unassignedIngredients);\n\n  groups.push({\n    heading:     heading,\n    directions:  directions,\n    ingredients: ig ? [ig] : undefined,\n  });\n}\n\nfunction assignRemainingIngredients(groups: DirectionsWithIngredients, unassignedIngredients: Array<IngredientGroup>) {\n  if (unassignedIngredients.length === 0) return;\n\n  const untitledStep = groups.find(di => !di.heading);\n  if (untitledStep) {\n    if (untitledStep.ingredients) {\n      untitledStep.ingredients.push(...unassignedIngredients);\n    } else {\n      untitledStep.ingredients = [...unassignedIngredients];\n    }\n  } else {\n    groups.unshift({ directions: [], ingredients: [...unassignedIngredients] });\n  }\n\n  unassignedIngredients.splice(0, unassignedIngredients.length);\n}\n\nfunction parseDirections(directionsString: string, ingredients: Array<IngredientGroup>): DirectionsWithIngredients {\n  const unassignedIngredients = [...ingredients];\n  const isMultiStep = directionsString.includes('\\n');\n\n  const directionsGroups: DirectionsWithIngredients = [];\n  let directions: Array<string> = [];\n  let nextHeading = '';\n\n  if (isMultiStep) {\n    directionsString.split('\\n').filter(line => line.length > 0).map(line => line.trimEnd()).forEach(direction => {\n      if (direction.endsWith(':')) {\n        pushDirections(directionsGroups, nextHeading, directions, unassignedIngredients);\n        nextHeading = direction.substring(0, direction.length - 1);\n        directions = [];\n      } else {\n        directions.push(direction);\n      }\n    });\n\n    pushDirections(directionsGroups, nextHeading, directions, unassignedIngredients);\n  } else {\n    pushDirections(directionsGroups, '', [directionsString], unassignedIngredients);\n  }\n\n  assignRemainingIngredients(directionsGroups, unassignedIngredients);\n\n  return directionsGroups;\n}\n\nfunction formatDirections(directions: DirectionsWithIngredients) {\n  return directions\n    .filter(di => di.directions.length > 0 || (di.ingredients != null && di.ingredients.length > 0))\n    .map(di => {\n      let directionsJsx: React.ReactElement | undefined;\n      if (di.directions.length === 1) {\n        directionsJsx = (\n          <div className='direction'>\n            {di.directions[0]}\n          </div>\n        );\n      } else if (di.directions.length > 1) {\n        directionsJsx = (\n          <ol className='directions'>\n            {di.directions.map(direction => (\n              <li className='direction' key={direction}>\n                {direction}\n              </li>\n            ))}\n          </ol>\n        );\n      }\n\n      const isDefaultGroup = !di.heading;\n      const headingSlug = slugify(di.heading ?? '');\n\n      return (\n        <div key={headingSlug} className={classNames('subgroup', headingSlug)}>\n          {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\n          {di.heading && (\n            <h3 id={`direction-${headingSlug}`}>\n              {`${di.heading}:`}\n              <HeaderLink linkFor={`direction-${headingSlug}`} />\n            </h3>\n          )}\n          {di.ingredients && di.ingredients.length > 0 && (\n            <div className='ingredients'>\n              <IngredientGroups groups={di.ingredients} hasSubrecipes={isDefaultGroup && directions.length > 1} />\n            </div>\n          )}\n          {directionsJsx}\n        </div>\n      );\n    });\n}\n\nconst Directions: React.FC<IDirectionsProps> = ({ directions: directionsString, ingredients }: IDirectionsProps) => {\n  const directionGroups: DirectionsWithIngredients = useMemo(() => parseDirections(directionsString, ingredients), [directionsString, ingredients]);\n  const directionsGroupsJsx: Array<React.ReactNode> = useMemo(() => formatDirections(directionGroups), [directionGroups]);\n\n  return (\n    <>\n      {directionsGroupsJsx}\n    </>\n  );\n};\n\nexport default Directions;\n","import '../css/ingredients_panel.css';\n\nimport { IngredientGroup } from '../store/RecipeTypes';\n\nimport Ingredients from './Ingredients';\n\nexport interface IIngredientGroupsProps {\n  groups: Array<IngredientGroup> | undefined;\n  hasSubrecipes: boolean;\n  withHeaderLink?: boolean;\n  selectable?: boolean;\n}\n\nconst IngredientGroups: React.FC<IIngredientGroupsProps> = ({\n    groups, hasSubrecipes, withHeaderLink, selectable }: IIngredientGroupsProps) => {\n  const showCaptions = hasSubrecipes || (groups != null && groups.length > 1);\n  const ingredientGroups = groups?.filter(group => group.title || group.ingredients.length > 0).map(group => (\n    <div className='subgroup ingredient-group' key={group.slug || group.title}>\n      <Ingredients\n          showCaptions = {showCaptions}\n          group = {group}\n          withHeaderLink = {withHeaderLink}\n          data = {group.ingredients}\n          selectable = {selectable}\n          />\n    </div>\n  ));\n\n  return (\n    <>{ingredientGroups}</>\n  );\n};\n\nexport default IngredientGroups;\n","import { useContext } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { defineMessages, IntlShape, useIntl } from 'react-intl';\n\nimport '../css/ingredients.css';\n\nimport MeasurementContext, { IMeasurementContext } from '../../common/context/MeasurementContext';\nimport HeaderLink from '../../common/components/HeaderLink';\nimport { optionallyFormatMessage, slugify } from '../../common/utility';\nimport { Ingredient, IngredientGroup } from '../store/RecipeTypes';\nimport ReCheckbox from '../../common/components/ReInput/ReCheckbox';\n\nconst messages = defineMessages({\n  quantity: {\n    id: 'ingredients.table.quantity',\n    description: 'Ingredients table quantity header',\n    defaultMessage: 'Quantity',\n  },\n  ingredient: {\n    id: 'ingredients.table.ingredient',\n    description: 'Ingredients table ingredient header',\n    defaultMessage: 'Ingredient',\n  },\n});\n\nexport interface IIngredientsProps {\n  showCaptions: boolean;\n  group: IngredientGroup;\n  data: Array<Ingredient>;\n  withHeaderLink?: boolean;\n  selectable?: boolean;\n}\n\nexport function formatMeasurement(intl: IntlShape, measurementsContext: IMeasurementContext, measurement: string | undefined, quantity: string | undefined): string {\n  let measurementString: string;\n  if (measurement != null) {\n    const measurementParserId = measurementsContext.formatter[measurementsContext.parser[measurement]];\n    if (measurementParserId != null) {\n      measurementString = optionallyFormatMessage(intl, 'measurement.', measurementParserId, { itemCount: quantity });\n    } else {\n      measurementString = measurement;\n    }\n  } else {\n    measurementString = '';\n  }\n\n  return measurementString;\n}\n\nconst Ingredients: React.FC<IIngredientsProps> = ({\n    showCaptions, group, data, withHeaderLink, selectable }: IIngredientsProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const measurementsContext = useContext(MeasurementContext);\n  const caption = showCaptions && group.title ? group.title : undefined;\n  const captionSlug = slugify(caption ?? '');\n\n  const ingredients = data.map((ingredient, index) => {\n    const quantityS   = ingredient.quantity;\n    const msrmtString = formatMeasurement(intl, measurementsContext, ingredient.measurement, ingredient.quantity);\n    const titleString = ingredient.title;\n    const fullString  = [quantityS, msrmtString, titleString].join(' ');\n    const renderQuantity: boolean = Boolean(quantityS) || Boolean(msrmtString);\n\n    return (\n      <tr className='ingredient' key={(ingredient.id ?? index).toString()}>\n        {selectable && (\n          <td className='selection'>\n            <ReCheckbox\n                label = {fullString}\n                className = 'label-sr-only'\n                name  = {`ingredients.${group.slug}.cb-${ingredient.id}`} />\n          </td>\n        )}\n        <td className='quantity'>\n          {renderQuantity && (\n            <span>\n              {quantityS}\n              {quantityS != null && quantityS.length > 0 && msrmtString.length > 0 && ' '}\n              {msrmtString}\n            </span>\n          )}\n        </td>\n        <td className='ingredient'>\n          <span>\n            {titleString}\n          </span>\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <Table striped size='sm' className='table ingredients-table'>\n      {caption && (\n        <caption id={withHeaderLink ? `ingredients-${captionSlug}` : undefined} className='subheading h3'>\n          {`${caption}:`}\n          {withHeaderLink && <HeaderLink linkFor={`ingredients-${captionSlug}`} />}\n        </caption>\n      )}\n      <thead className='hideme'>\n        <tr>\n          {selectable && (\n            <th><span>Selection</span></th>\n          )}\n          <th><span>{formatMessage(messages.quantity)}</span></th>\n          <th><span>{formatMessage(messages.ingredient)}</span></th>\n        </tr>\n      </thead>\n      <tbody>\n        {ingredients}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default Ingredients;\n","import classNames from 'classnames';\nimport { Table } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\n\nimport HeaderLink from '../../common/components/HeaderLink';\nimport ReCheckbox from '../../common/components/ReInput/ReCheckbox';\nimport { getRoutePath, optionallyFormatMessage } from '../../common/utility';\nimport { SubRecipe } from '../store/RecipeTypes';\n\nconst messages = defineMessages({\n  subrecipes: {\n    id: 'subrecipes.subrecipes heading',\n    description: 'Subrecipes header',\n    defaultMessage: 'Subrecipes',\n  },\n  quantity: {\n    id: 'subrecipes.table.quantity',\n    description: 'Subrecipes table quantity header',\n    defaultMessage: 'Quantity',\n  },\n  subrecipe: {\n    id: 'subrecipes.table.subrecipe',\n    description: 'Subrecipes table ingredient header',\n    defaultMessage: 'Subrecipe',\n  },\n});\n\nexport interface ISubRecipesProps {\n  subRecipes: Array<SubRecipe> | undefined;\n  withHeaderLink?: boolean;\n  selectable?: boolean;\n}\n\nconst SubRecipes: React.FC<ISubRecipesProps> = ({\n    subRecipes, withHeaderLink, selectable }: ISubRecipesProps) => {\n  const intl = useIntl();\n\n  const showQuantityCol = subRecipes == null || subRecipes.filter(sr => (\n    (sr.quantity != null && sr.quantity.length > 0 && sr.quantity !== '0')\n      || (sr.measurement != null && sr.measurement.length > 0)\n  )).length > 0;\n\n  const subRecipesList = subRecipes?.map((subRecipe, index) => {\n    const quantityS   = subRecipe.quantity != null && subRecipe.quantity.length > 0 && subRecipe.quantity !== '0' ? subRecipe.quantity : '';\n    const msrmtString = subRecipe.measurement != null ? optionallyFormatMessage(intl, 'measurement.', subRecipe.measurement, { itemCount: subRecipe.quantity }) : '';\n    const titleString = subRecipe.title;\n    const fullString  = [quantityS, msrmtString, titleString].join(' ');\n\n    return (\n      <tr className='ingredient' key={(subRecipe.child_recipe_id ?? index).toString()}>\n        {selectable && (\n          <td className='selection'>\n            <ReCheckbox\n                label = {fullString}\n                className = 'label-sr-only'\n                name  = {`subrecipes.cb-${subRecipe.child_recipe_id}`} />\n          </td>\n        )}\n        {showQuantityCol && (\n          <td className='quantity first-col'>\n            <span>\n              {quantityS}\n              {quantityS != null && quantityS.length > 0 && msrmtString.length > 0 && ' '}\n              {msrmtString}\n            </span>\n          </td>\n        )}\n        <td className={classNames('ingredient last-col', { 'first-col': showQuantityCol })}>\n          <span>\n            <Link to={getRoutePath(`/recipe/${subRecipe.slug}`)} className='title'>{titleString}</Link>\n          </span>\n        </td>\n      </tr>\n    );\n  });\n\n  if (subRecipesList == null || subRecipesList.length === 0) return null;\n\n  return (\n    <div className='subgroup ingredient-group'>\n      <Table striped size='sm' className='table ingredients-table'>\n        <caption id={withHeaderLink ? 'subrecipes' : undefined} className='subheading h3'>\n          {`${intl.formatMessage(messages.subrecipes)}:`}\n          {withHeaderLink && <HeaderLink linkFor='subrecipes' />}\n        </caption>\n        <thead className='hideme'>\n          <tr>\n            {selectable && (\n              <th><span>Selection</span></th>\n            )}\n            {showQuantityCol && <th><span>{intl.formatMessage(messages.quantity)}</span></th>}\n            <th><span>{intl.formatMessage(messages.subrecipe)}</span></th>\n          </tr>\n        </thead>\n        <tbody>\n          {subRecipesList}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default SubRecipes;\n","import { useCallback, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport { Rating } from '../store/types';\nimport Icon from '../../common/components/Icon';\nimport P from '../../common/components/P';\nimport Button from '../../common/components/Button';\nimport Tooltip from '../../common/components/Tooltip';\nimport { CommonProps } from '../../common/types/OverridableComponent';\nimport Modal from '../../common/components/Modal';\nimport { Toolbar } from '../../common/components/Toolbar';\nimport Ratings from './Ratings';\n\nconst messages = defineMessages({\n  edited_by: {\n    id: 'rating.edited_by',\n    description: 'The rating was edited by ...',\n    defaultMessage: 'Edited by',\n  },\n  edit_button: {\n    id: 'rating_comments.edit_button',\n    description: 'Label of the edit comment icon button',\n    defaultMessage: 'Edit comment',\n  },\n  delete_button: {\n    id: 'rating_comments.delete_button',\n    description: 'Label of the delete comment icon button',\n    defaultMessage: 'Delete comment',\n  },\n  confirm_delete_message: {\n    id: 'rating_comments.confirm_delete',\n    description: 'Are you sure you want to delete this comment?',\n    defaultMessage: 'Are you sure you want to delete this comment?',\n  },\n});\n\ninterface IRatingFCProps {\n  rating: Rating;\n}\n\nexport const RatingEditor: React.FC<IRatingFCProps> = ({ rating }: IRatingFCProps) => {\n  const { formatMessage, locale } = useIntl();\n\n  if (rating.update_date && new Date(rating.update_date).getTime() > 0 && rating.update_username) {\n    const editorS = `${formatMessage(messages.edited_by)}: ${rating.update_username}`;\n    const editDateS = new Date(rating.update_date).toLocaleString(locale);\n    const tooltipJsx = (\n      <div className='d-flex-column'>\n        <div>{editorS}</div>\n        <div>{editDateS}</div>\n      </div>\n    );\n    return (\n      <Tooltip id={`${rating.id}-editor-tooltip`} tooltip={tooltipJsx}>\n        <Icon icon='pencil' className='subtitle2' size='1x' style={{ marginLeft: '5px' }} ariaLabel={`${formatMessage(messages.edited_by)}: ${rating.update_username}. ${editDateS}`} />\n      </Tooltip>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport const RatingTimestamp: React.FC<IRatingFCProps> = ({ rating }: IRatingFCProps) => {\n  const { locale } = useIntl();\n  if (rating.update_date && new Date(rating.update_date).getTime() > 0 && rating.update_username === rating.pub_username) {\n    return <Link className='subtitle2 rating-timestamp' to={`#rating-${rating.id}`}>{new Date(rating.update_date).toLocaleString(locale)}</Link>;\n  } else if (rating.pub_date && new Date(rating.pub_date).getTime() > 0) {\n    return <Link className='subtitle2 rating-timestamp' to={`#rating-${rating.id}`}>{new Date(rating.pub_date).toLocaleString(locale)}</Link>;\n  } else {\n    return null;\n  }\n};\n\nconst RatingCommentComment: React.FC<IRatingFCProps> = ({ rating }: IRatingFCProps) => {\n  const markup: Array<React.ReactNode> = [];\n\n  const pList = rating.comment.split('\\n').filter(Boolean);\n  pList.forEach((p, index) => {\n    markup.push(\n      // eslint-disable-next-line react/no-array-index-key\n      <P key={`${index}-p`}>\n        {p}\n      </P>\n    );\n  });\n\n  return (\n    <>\n      {markup}\n    </>\n  );\n};\n\nexport interface IRatingToolbarProps extends IRatingFCProps, CommonProps {\n  onEdit?: () => void;\n  onDelete?: () => void;\n}\n\nexport const RatingToolbar: React.FC<IRatingToolbarProps> = ({\n    rating, onEdit, onDelete,\n    className, ...rest }: IRatingToolbarProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState<boolean>(false);\n\n  const handleDeleteClick = useCallback(() => { setShowDeleteConfirm(true); }, []);\n  const handleDeleteClose  = useCallback(() => { setShowDeleteConfirm(false); }, []);\n  const handleDeleteAccept = useCallback(() => { onDelete?.(); }, []);\n\n  return (\n    <>\n      <Toolbar position='end' className={classNames('rating-toolbar', className)} {...rest}>\n        {onEdit && (\n          <Button id={`edit-${rating.id}`} variant='outline-primary' className='rating-edit-button' tooltip={formatMessage(messages.edit_button)} onClick={onEdit}>\n            <Icon icon='pencil' />\n          </Button>\n        )}\n        {onDelete && (\n          <Button id={`delete-${rating.id}`} variant='outline-danger' className='rating-delete-button' tooltip={formatMessage(messages.delete_button)} onClick={handleDeleteClick}>\n            <Icon icon='trash' />\n          </Button>\n        )}\n      </Toolbar>\n\n      <Modal\n          show = {showDeleteConfirm}\n          title = {intl.messages['recipe.confirm_delete_title'] as string}\n          acceptTitle = {intl.messages['recipe.confirm_delete_accept'] as string}\n          onAccept = {handleDeleteAccept}\n          onClose  = {handleDeleteClose}\n          acceptButtonProps = {{ variant: 'danger' }}>\n        {formatMessage(messages.confirm_delete_message)}\n      </Modal>\n    </>\n  );\n};\n\nconst RatingView: React.FC<IRatingFCProps> = ({ rating }: IRatingFCProps) => (\n  <>\n    <Row className='rating-header'>\n      <Col xs>\n        <Ratings stars={rating.rating || 0} />\n        <div className='rating-username'>{rating.pub_username}</div>\n      </Col>\n      <Col xs='auto'>\n        <RatingTimestamp rating={rating} />\n        <RatingEditor rating={rating} />\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={12}>\n        <RatingCommentComment rating={rating} />\n      </Col>\n    </Row>\n  </>\n);\n\nexport default RatingView;\n","import { useCallback, useState } from 'react';\nimport { Button, Col, Form, Row } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Field, Form as ReduxForm, FormSpy } from 'react-final-form';\n\nimport { Rating, RatingCreate, RatingUpdate } from '../store/types';\nimport InitialValuesResetter from '../../common/components/ReInput/ReInitialValuesResetter';\nimport ReInput from '../../common/components/ReInput/ReInput';\nimport { requiredValidator, ValidationResult } from '../../common/store/Validation';\nimport ReFormStatus from '../../common/components/ReInput/ReFormStatus';\nimport Ratings from './Ratings';\nimport { RatingEditor, RatingTimestamp } from './RatingView';\nimport classNames from 'classnames';\nimport { Toolbar } from '../../common/components/Toolbar';\n\nconst messages = defineMessages({\n  edit_rating_title: {\n    id: 'rating.form.edit.title',\n    description: 'Fieldset legend for editing a rating',\n    defaultMessage: 'Comment by {username}',\n  },\n  new_rating_title: {\n    id: 'rating.form.create.title',\n    description: 'Fieldset legend for creating a new rating',\n    defaultMessage: 'Your new rating',\n  },\n  rating_label: {\n    id: 'rating.form.rating_label',\n    description: 'Rating label',\n    defaultMessage: 'Rating',\n  },\n  rating_comment_label: {\n    id: 'rating.form.rating_comment_label',\n    description: 'Rating label',\n    defaultMessage: 'Comments',\n  },\n  rating_comment_placeholder: {\n    id: 'rating.form.rating_comment_placeholder',\n    description: 'Rating placeholder',\n    defaultMessage: 'Leave a comment.',\n  },\n  submit: {\n    id: 'rating.form.submit',\n    description: 'Submit recipe button',\n    defaultMessage: 'Comment',\n  },\n});\n\nexport interface IRatingFormProps {\n  rating?: Rating;\n\n  addRating?: (rating: RatingCreate) => Promise<ValidationResult>;\n  editRating?: (rating: RatingUpdate) => Promise<ValidationResult>;\n  onSubmitSuccess: () => void;\n  onCancel: () => void;\n}\n\nexport interface IFormDataProps {\n  rating:  number;\n  comment: string;\n}\n\nconst RatingForm: React.FC<IRatingFormProps> = ({ rating, addRating, editRating, onSubmitSuccess, onCancel }: IRatingFormProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const [initialValues] = useState<Partial<IFormDataProps>>(rating ?? { rating: 0, comment: '' });\n\n  const handleSubmit = useCallback(async (form: IFormDataProps) => {\n    if (rating) {\n      const res: RatingUpdate = {\n        ...form,\n        id: rating.id,\n      };\n      return editRating?.(res);\n    } else {\n      const res: RatingCreate = form;\n      return addRating?.(res);\n    }\n  }, [addRating, rating?.id]);\n\n  return (\n    <ReduxForm\n        initialValues = {initialValues}\n        onSubmit = {handleSubmit}\n        subscription = {{}}\n        render = {({ form, handleSubmit: renderSubmit }) => (\n          <Form onSubmit={renderSubmit} className={classNames('rating-form', { create: !rating, edit: rating })}>\n            <ReFormStatus onSubmitSuccess={onSubmitSuccess} />\n\n            <InitialValuesResetter form={form} initialValues={initialValues} />\n            {rating && (\n              <div className='d-flex' style={{ alignItems: 'center', justifyContent: 'end' }}>\n                <RatingTimestamp rating={rating} />\n                <RatingEditor rating={rating} />\n              </div>\n            )}\n            <fieldset>\n              <legend className='rating-form-heading'>\n                {!rating && (\n                  formatMessage(messages.new_rating_title)\n                )}\n                {rating && (\n                  formatMessage(messages.edit_rating_title, { username: rating.pub_username })\n                )}\n              </legend>\n              <Row>\n                <Col className='form-group required'>\n                  <div className='form-label'>{formatMessage(messages.rating_label)}</div>\n                  <Field name='rating' validate={requiredValidator} validateFields={[]}>\n                    {fprops => (\n                      <Ratings\n                          stars = {fprops.input.value}\n                          onChange = {(value: number) => { fprops.input.onChange(value); }} />\n                    )}\n                  </Field>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <ReInput\n                      name   = 'comment'\n                      rows   = {4}\n                      label  = {formatMessage(messages.rating_comment_label)}\n                      placeholder = {formatMessage(messages.rating_comment_placeholder)}\n                      maxLength = {1000}\n                      required />\n                </Col>\n              </Row>\n              <Row>\n                <Col xs={12}>\n                  <Toolbar>\n                    <FormSpy subscription={{ values: true, submitting: true }}>\n                      {({ values, submitting }) => (\n                        <Button type='submit' variant='primary' disabled={!values.rating || !values.comment || submitting}>\n                          {formatMessage(messages.submit)}\n                        </Button>\n                      )}\n                    </FormSpy>\n                    <Button variant='outline-primary' onClick={onCancel}>\n                      {intl.messages['modal.close'] as string}\n                    </Button>\n                  </Toolbar>\n                </Col>\n              </Row>\n            </fieldset>\n          </Form>\n        )} />\n  );\n};\n\nexport default RatingForm;\n","import { useCallback, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport classNames from 'classnames';\n\nimport { Rating, RatingUpdate } from '../store/types';\nimport PageScroller from '../../common/components/PageScroller';\nimport RatingForm from './RatingForm';\nimport { ValidationResult } from '../../common/store/Validation';\nimport RatingView, { RatingToolbar } from './RatingView';\nimport { isDemoMode } from '../../common/utility';\n\nexport interface IRatingCommentProps {\n  rating:     Rating;\n  onEdit?:    (upd: RatingUpdate) => Promise<ValidationResult>;\n  onDelete?:  (ratingId: number) => Promise<ValidationResult>;\n}\n\nconst RatingComment: React.FC<IRatingCommentProps> = ({\n    rating, onEdit, onDelete }: IRatingCommentProps) => {\n  const { hash } = useLocation();\n  const hashId = (hash ?? '').replace('#', '');\n\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const handleEditModeReset = useCallback(() => { setEditMode(false); }, []);\n\n  const handleEditClick    = useCallback(() => { setEditMode(true); }, []);\n  const handleDeleteClick  = useCallback(() => onDelete?.(rating.id), [rating.id]);\n\n  const ratingContainerId = `rating-${rating.id}`;\n\n  return (\n    <div id={ratingContainerId} className={classNames('rating-comment', { 'perma-link-active': ratingContainerId === hashId })}>\n      <PageScroller uriFragmentId={ratingContainerId} />\n      {!editMode && (\n        <RatingView\n            rating = {rating}\n            />\n      )}\n      {editMode && (\n        <RatingForm\n            rating = {rating}\n            editRating = {onEdit}\n            onSubmitSuccess = {handleEditModeReset}\n            onCancel = {handleEditModeReset}\n            />\n      )}\n      {!editMode && !isDemoMode() && (\n        <RatingToolbar\n            rating = {rating}\n            onEdit = {onEdit ? handleEditClick : undefined}\n            onDelete = {onDelete ? handleDeleteClick : undefined}\n            />\n      )}\n    </div>\n  );\n};\n\nexport default RatingComment;\n","import { useCallback } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Col, Row } from 'react-bootstrap';\n\nimport { Rating, RatingUpdate } from '../store/types';\nimport P from '../../common/components/P';\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport CircularProgress from '../../common/components/CircularProgress';\nimport { ValidationResult } from '../../common/store/Validation';\nimport UserRole from '../../common/types/UserRole';\nimport RatingComment from './RatingComment';\n\nconst messages = defineMessages({\n  no_comments: {\n    id: 'rating_comments.no_comments',\n    description: 'Placeholder for no comments',\n    defaultMessage: '(No comments yet. Be the first!)',\n  },\n});\n\nexport interface IRatingCommentsProps {\n  ratings:    Array<Rating> | undefined;\n  userId:     number | undefined;\n  userRole:   UserRole | undefined;\n  pending:    PendingState;\n\n  editRating:   (rating: RatingUpdate) => Promise<ValidationResult>;\n  removeRating: (rating: number) => Promise<ValidationResult>;\n}\n\nconst RatingComments: React.FC<IRatingCommentsProps> = ({\n    ratings, userId, userRole, pending, editRating, removeRating }: IRatingCommentsProps) => {\n  const { formatMessage } = useIntl();\n\n  const handleEdit         = useCallback((upd: RatingUpdate) => editRating(upd), [editRating]);\n  const handleDeleteAccept = useCallback((ratingId: number) => removeRating(ratingId), [removeRating]);\n\n  const isUserAdmin = userRole != null && [UserRole.STAFF, UserRole.ADMIN].includes(userRole);\n\n  const ratingsList = ratings?.map(rating => (\n    <RatingComment\n        key = {rating.id}\n        rating = {rating}\n        onEdit   = {(rating.author === userId || isUserAdmin) ? handleEdit : undefined}\n        onDelete = {(rating.author === userId || isUserAdmin) ? handleDeleteAccept : undefined} />\n  )) ?? [];\n\n  return (\n    <>\n      {pending === PendingState.LOADING && <CircularProgress variant='three-bounce' />}\n      {ratingsList.length === 0 && (\n        <Row key='be-the-first'><Col><P className='placeholder'>{formatMessage(messages.no_comments)}</P></Col></Row>\n      )}\n      {ratingsList}\n    </>\n  );\n};\n\nexport default RatingComments;\n","import { Button, Col, Row } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport HeaderLink from '../../common/components/HeaderLink';\nimport UserRole from '../../common/types/UserRole';\n\nconst messages = defineMessages({\n  title: {\n    id: 'recipe.comments.title',\n    description: 'Comments heading',\n    defaultMessage: '{count, plural, one {# Comment} other {# Comments}}',\n  },\n  new_rating_button: {\n    id: 'recipe.comments.new_rating',\n    description: 'Label for the new rating button',\n    defaultMessage: 'New rating',\n  },\n});\n\nexport interface IRatingsHeaderProps {\n  commentsCount: number;\n  userRole:  UserRole | undefined;\n  showNewRating: boolean;\n  onShowNewRating: () => void;\n}\n\nconst RatingsHeader: React.FC<IRatingsHeaderProps> = ({ commentsCount, userRole, showNewRating, onShowNewRating }: IRatingsHeaderProps) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <div className='ratings-heading'>\n      <Row>\n        <Col className='ratings-heading-col'>\n          <h2 id='ratings-heading'>\n            {formatMessage(messages.title, { count: commentsCount })}\n            <HeaderLink linkFor='ratings-heading' />\n          </h2>\n        </Col>\n        {userRole != null && [UserRole.USER, UserRole.STAFF, UserRole.ADMIN].includes(userRole) && (\n          <Col xs='auto' style={showNewRating ? { visibility : 'hidden' } : undefined}>\n            <Button variant='primary' onClick={onShowNewRating}>{formatMessage(messages.new_rating_button)}</Button>\n          </Col>\n        )}\n      </Row>\n    </div>\n  );\n};\n\nexport default RatingsHeader;\n","import { useCallback, useState } from 'react';\n\nimport '../css/recipe-rating-wrapper.css';\n\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport UserRole from '../../common/types/UserRole';\nimport { ValidationResult } from '../../common/store/Validation';\nimport { Rating, RatingCreate, RatingUpdate } from '../store/types';\nimport RatingComments from './RatingComments';\nimport RatingForm from './RatingForm';\nimport RatingsHeader from './RatingsHeader';\n\nexport interface IRatingsWrapperProps {\n  ratings:    Array<Rating> | undefined;\n  userId:     number | undefined;\n  userRole:   UserRole | undefined;\n  pending:    PendingState;\n\n  addRating:    (rating: RatingCreate) => Promise<ValidationResult>;\n  editRating:   (rating: RatingUpdate) => Promise<ValidationResult>;\n  removeRating: (ratingId: number) => Promise<ValidationResult>;\n}\n\nconst RatingsWrapper: React.FC<IRatingsWrapperProps> = ({ ratings, userId, userRole, pending, addRating, editRating, removeRating }: IRatingsWrapperProps) => {\n  const [showNewRating, setShowNewRating] = useState<boolean>(false);\n\n  const handleNewRatingUndisplay = useCallback(() => {\n    setShowNewRating(false);\n  }, []);\n\n  return (\n    <article className='rating-panel optiwidth'>\n      <RatingsHeader commentsCount={ratings?.length ?? 0} userRole={userRole} showNewRating={showNewRating} onShowNewRating={() => { setShowNewRating(true); }} />\n      <div className='ratings-body'>\n        {showNewRating && userRole != null && [UserRole.USER, UserRole.STAFF, UserRole.ADMIN].includes(userRole) && (\n          <RatingForm addRating={addRating} editRating={editRating} onSubmitSuccess={handleNewRatingUndisplay} onCancel={handleNewRatingUndisplay} />\n        )}\n        <RatingComments ratings={ratings} pending={pending} userId={userId} userRole={userRole} editRating={editRating} removeRating={removeRating} />\n      </div>\n    </article>\n  );\n};\n\nexport default RatingsWrapper;\n","import { useCallback, useEffect } from 'react';\n\nimport RatingsWrapper from '../components/RatingsWrapper';\nimport * as RatingsActions from '../store/actions';\nimport { RatingCreate, RatingUpdate } from '../store/types';\nimport { RootState } from '../../app/Store';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport ErrorBoundary from '../../common/components/ErrorBoundary';\n\nconst Ratings: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const account = useSelector((state: RootState) => state.account.item);\n  const recipe  = useSelector((state: RootState) => state.recipe.item);\n  const ratingsState = useSelector((state: RootState) => state.ratings);\n\n  const recipeSlug = recipe?.slug;\n  const recipeRating = recipe?.rating;\n\n  const addRating  = useCallback(async (rating: RatingCreate) => RatingsActions.add(dispatch, recipeSlug ?? '', rating), [recipeSlug]);\n  const editRating = useCallback(async (rating: RatingUpdate) => RatingsActions.update(dispatch, recipeSlug ?? '', rating), [recipeSlug]);\n  const removeRatingCallback = useCallback((ratingId: number) => dispatch(RatingsActions.remove(recipeSlug ?? '', ratingId)), [recipeSlug]);\n\n  useEffect(() => {\n    if (recipeSlug == null || recipeRating == null || recipeRating === 0) return;\n    dispatch(RatingsActions.load(recipeSlug));\n  }, [recipeSlug, recipeRating]);\n\n  if (recipeSlug == null) return null;\n  const ratings = recipeSlug != null && ratingsState.items != null ? ratingsState.items[recipeSlug] : undefined;\n\n  return (\n    <ErrorBoundary verbose printStack>\n      <hr />\n      <RatingsWrapper\n          userId     = {account?.id}\n          userRole   = {account?.role}\n          ratings    = {ratings}\n          pending    = {ratingsState.meta.pending}\n\n          addRating  = {addRating}\n          editRating = {editRating}\n          removeRating = {removeRatingCallback} />\n    </ErrorBoundary>\n  );\n};\n\nexport default Ratings;\n","import request from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport ReduxHelper, { ACTION } from '../../common/store/ReduxHelper';\nimport { AnyDispatch, toBasicAction } from '../../common/store/redux';\nimport { handleError, handleFormError } from '../../common/requestUtils';\nimport { RatingCreate, RatingDispatch, RatingsDispatch, RATINGS_STORE, RATING_STORE, toRating, RatingUpdate } from './types';\n\nexport const load = (recipeSlug: string) => (dispatch: RatingsDispatch) => {\n  dispatch({ ...toBasicAction(RATINGS_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.ratings}?recipe__slug=${recipeSlug}`)\n    .then(res => dispatch({\n      ...toBasicAction(\n        RATINGS_STORE,\n        ACTION.GET_SUCCESS\n      ),\n      id: recipeSlug,\n      payload: ReduxHelper.transformEntities(res.body.results, toRating),\n    }))\n    .catch(err => dispatch(handleError(err, RATINGS_STORE)));\n};\n\nexport const add = async (dispatch: AnyDispatch, recipeSlug: string, rating: RatingCreate) => {\n  dispatch({ ...toBasicAction(RATING_STORE, ACTION.CREATE_START) });\n  return request()\n    .post(serverURLs.ratings)\n    .send({\n      recipe:  recipeSlug,\n      rating:  rating.rating,\n      comment: rating.comment,\n    })\n    .then(res => {\n      dispatch({\n        ...toBasicAction(\n          RATING_STORE,\n          ACTION.CREATE_SUCCESS\n        ),\n        payload: {\n          recipe: recipeSlug,\n          rating:   toRating(res.body),\n        },\n      });\n      return null;\n    })\n    .catch(err => handleFormError(dispatch, err, RATINGS_STORE));\n};\n\nexport const update = async (dispatch: AnyDispatch, recipeSlug: string, rating: RatingUpdate) => {\n  dispatch({ ...toBasicAction(RATING_STORE, ACTION.UPDATE_START) });\n  return request()\n    .patch(`${serverURLs.ratings}${rating.id}/`)\n    .send({\n      rating:  rating.rating,\n      comment: rating.comment,\n    })\n    .then(res => {\n      dispatch({\n        ...toBasicAction(\n          RATING_STORE,\n          ACTION.UPDATE_SUCCESS\n        ),\n        payload: {\n          recipe: recipeSlug,\n          rating: toRating(res.body),\n        },\n      });\n      return null;\n    })\n    .catch(err => handleFormError(dispatch, err, RATINGS_STORE));\n};\n\nexport const remove = (recipeSlug: string, id: number) => (dispatch: RatingDispatch) => {\n  dispatch({ ...toBasicAction(RATING_STORE, ACTION.DELETE_START) });\n  request()\n    .delete(`${serverURLs.ratings}${id}/`)\n    .then(() => dispatch({\n      ...toBasicAction(\n        RATING_STORE,\n        ACTION.DELETE_SUCCESS\n      ),\n      payload: {\n        ratingId: id,\n        recipe:   recipeSlug,\n      },\n    }))\n    .catch(err => dispatch(handleError(err, RATINGS_STORE)));\n};\n","import { useIntl } from 'react-intl';\n\nimport { RootState } from '../../app/Store';\nimport { useSelector } from '../../common/store/redux';\nimport { Recipe } from '../store/RecipeTypes';\nimport MiniBrowse from '../../browse/containers/MiniBrowse';\nimport ErrorBoundary from '../../common/components/ErrorBoundary';\nimport { getEnvAsBoolean } from '../../common/utility';\n\nexport interface IRecipeFooterProps {\n  recipe?: Recipe;\n}\n\nfunction getFilters(recipe: Recipe): Record<string, string> | undefined {\n  const res: Record<string, string> = {};\n  if (recipe.course) {\n    res.course__slug = recipe.course.title;\n  }\n  if (recipe.cuisine) {\n    res.cuisine__slug = recipe.cuisine.title;\n  }\n  if (recipe.seasons.length > 0) {\n    res.season__slug = recipe.seasons.map(s => s.title).join(',');\n  }\n  return Object.keys(res).length > 0 ? res : undefined;\n}\n\nconst RecipeFooter: React.FC<IRecipeFooterProps> = ({ recipe }: IRecipeFooterProps) => {\n  const intl = useIntl();\n\n  const miniBrowseMeta = useSelector((state: RootState) => state.browse.browserMini.meta);\n  const disableRecipeDiscovery = useSelector((state: RootState) => state.settings.disableRecipeDiscovery) || getEnvAsBoolean('REACT_APP_DISABLE_RECIPE_DISCOVERY') || false;\n\n  if (!miniBrowseMeta.hasConnection || miniBrowseMeta.error || disableRecipeDiscovery\n      || !recipe?.author) return null;\n\n  return (\n    <ErrorBoundary verbose printStack>\n      <hr />\n      <article className='recipe-footer'>\n        <MiniBrowse\n            heading = {intl.messages['nav.home.recommended_recipes_title'] as string}\n            count = {4}\n            filters = {getFilters(recipe)} />\n      </article>\n    </ErrorBoundary>\n  );\n};\n\nexport default RecipeFooter;\n","import { useCallback, useMemo } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Button, Form } from 'react-bootstrap';\nimport { Form as ReduxForm } from 'react-final-form';\n\nimport { Recipe } from '../store/RecipeTypes';\nimport { PendingState, ReducerMeta } from '../../common/store/GenericReducerType';\nimport Icon from '../../common/components/Icon';\nimport InitialValuesResetter from '../../common/components/ReInput/ReInitialValuesResetter';\nimport ReInput from '../../common/components/ReInput/ReInput';\nimport HeaderLink from '../../common/components/HeaderLink';\nimport { ValidationResult } from '../../common/store/Validation';\n\nexport interface IIngredientsHeaderProps {\n  recipe:      Recipe | undefined;\n  recipeMeta:  ReducerMeta;\n\n  updateServings: (servings: number) => Promise<ValidationResult>;\n}\n\nconst messages = defineMessages({\n  ingredients: {\n    id: 'recipe.ingredients',\n    description: 'Ingredients',\n    defaultMessage: 'Ingredients',\n  },\n  ingredients_for_servings: {\n    id: 'recipe.ingredients_for_servings',\n    description: 'Ingredients for[ n servings]',\n    defaultMessage: 'Ingredients for',\n  },\n  servings: {\n    id: 'recipe.servings',\n    description: 'Servings',\n    defaultMessage: 'Servings',\n  },\n  servings_input_tooltip: {\n    id: 'recipe.servings_input_tooltip',\n    description: 'Accessible tooltip for the (change) servings input',\n    defaultMessage: 'Amount of servings',\n  },\n  servings_update_button: {\n    id: 'recipe.servings_update_button',\n    description: 'Label for the button to change the servings',\n    defaultMessage: 'Update servings',\n  },\n});\n\nexport interface IFormDataProps {\n  servings: number;\n}\n\nconst IngredientsHeader: React.FC<IIngredientsHeaderProps> = ({\n    recipe, recipeMeta, updateServings }: IIngredientsHeaderProps) => {\n  const { formatMessage } = useIntl();\n\n  const customServings = recipe?.customServings;\n\n  const handleSubmit = useCallback(async (form: IFormDataProps) => updateServings(form.servings), [updateServings]);\n\n  const initialValues: Partial<IFormDataProps> = useMemo(() => ({\n    servings: customServings,\n  }), [customServings]);\n\n  const pending  = recipeMeta.pending;\n  const servings = recipe?.customServings ?? 0;\n  const hasNoIngredients = pending === PendingState.COMPLETED\n      && recipe?.subrecipes != null && recipe.subrecipes.length === 0\n      && recipe?.ingredientGroups != null && recipe.ingredientGroups.length === 0;\n\n  return (\n    <>\n      {(hasNoIngredients || servings === 0) && (\n        <h2 id='ingredients-heading'>\n          {formatMessage(messages.ingredients)}\n          <HeaderLink linkFor='ingredients-heading' />\n        </h2>\n      )}\n      {!hasNoIngredients && servings > 0 && (\n        <div className='ingredients-for-servings-row'>\n          <h2 id='ingredients-heading'>\n            {formatMessage(messages.ingredients_for_servings)}\n            <HeaderLink linkFor='ingredients-heading' />\n            <span className='print-only'>{`: ${recipe?.customServings ?? ''} ${formatMessage(messages.servings)}`}</span>\n          </h2>\n          <div className='custom-servings print-hidden'>\n            <ReduxForm\n                initialValues = {initialValues}\n                onSubmit = {handleSubmit}\n                subscription = {{}}\n                render = {({ form, handleSubmit: renderSubmit }) => (\n                  <Form onSubmit={renderSubmit} className='custom-servings'>\n                    <InitialValuesResetter form={form} initialValues={initialValues} />\n                    <ReInput\n                        name  = 'servings'\n                        type  = 'number'\n                        aria-label = {formatMessage(messages.servings_input_tooltip)}\n                        min   = {0}\n                        max   = {1000}\n                        autoComplete = 'off' />\n                    <Button type='submit' variant='primary' aria-label={formatMessage(messages.servings_update_button)}>\n                      <Icon icon='arrow-repeat' variant='light' />\n                      {formatMessage(messages.servings)}\n                    </Button>\n                  </Form>\n                )} />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default IngredientsHeader;\n","import { forwardRef, RefObject, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Col, Form, Row } from 'react-bootstrap';\nimport { Form as ReduxForm } from 'react-final-form';\nimport { FormApi } from 'final-form';\n\nimport '../css/add_to_grocery_list_modal.css';\n\nimport { RootState } from '../../app/Store';\nimport Modal from '../../common/components/Modal';\nimport { ValidationResult } from '../../common/store/Validation';\nimport { Ingredient, IngredientGroup, SubRecipe } from '../store/RecipeTypes';\nimport ReFormStatus from '../../common/components/ReInput/ReFormStatus';\nimport InitialValuesResetter from '../../common/components/ReInput/ReInitialValuesResetter';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport Checkbox from '../../common/components/Input/Checkbox';\nimport useCrash from '../../common/hooks/useCrash';\nimport Icon from '../../common/components/Icon';\nimport Button from '../../common/components/Button';\nimport P from '../../common/components/P';\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport { GroceryList, GroceryListBulkAdd, GroceryListCreate } from '../../groceryList/store/GroceryListTypes';\nimport * as GroceryListsActions from '../../groceryList/store/GroceryListsActions';\nimport * as GroceryListActions from '../../groceryList/store/GroceryListActions';\nimport ReSelect from '../../common/components/ReInput/ReSelect';\nimport MeasurementContext from '../../common/context/MeasurementContext';\nimport IngredientGroups from './IngredientGroups';\nimport SubRecipes from './SubRecipes';\nimport { formatMeasurement } from './Ingredients';\nimport { isDemoMode } from '../../common/utility';\n\nexport interface IAddToGroceryListModalProps {\n  show: boolean;\n  subrecipes: Array<SubRecipe> | undefined;\n  ingredients: Array<IngredientGroup> | undefined;\n  onSaveSuccess: () => void;\n  onClose: () => void;\n}\n\ninterface AddToGroceryListData {\n  list: number;\n  ingredients: Array<{ slug: string, title: string, ingredients: Array<number> }>;\n  subrecipes: Array<number>;\n}\n\nconst AddToGroceryListModal: React.FC<IAddToGroceryListModalProps> = ({\n    show, subrecipes, ingredients, onSaveSuccess, onClose }: IAddToGroceryListModalProps) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  const measurementContext = useContext(MeasurementContext);\n  const formatMeasurementCb = useCallback((measurement: string | undefined, quantity: string | undefined) => formatMeasurement(intl, measurementContext, measurement, quantity), [measurementContext, intl]);\n\n  const bulkAdd = useCallback(async (list: number, data: GroceryListBulkAdd) => GroceryListActions.bulkAdd(dispatch, list, data, formatMeasurementCb), []);\n  const createList = useCallback(async (item: GroceryListCreate) => GroceryListActions.create(dispatch, item), []);\n\n  const groceryListsState = useSelector((state: RootState) => state.groceryLists);\n  const { items: lists } = groceryListsState;\n  useEffect(() => {\n    if (isDemoMode()) return;\n    dispatch(GroceryListsActions.load());\n  }, []);\n\n  const bulkAddPending = useSelector((state: RootState) => state.groceryList.meta.pending);\n\n  const submitRef = useRef<HTMLButtonElement>(null);\n\n  const handleEditSubmit = useCallback(() => {\n    submitRef.current?.click();\n  }, [submitRef.current]);\n  const handleSubmit = useCallback(async (form: AddToGroceryListData) => {\n    const allIngredients = ingredients?.flatMap(ig => ig.ingredients) ?? [];\n    const allSubrecipes  = subrecipes != null ? [...subrecipes] : [];\n\n    const addIngredientGroups: Array<IngredientGroup> = [];\n    form.ingredients.forEach(ig => {\n      const addIngredients: Array<Ingredient> = ig.ingredients.map(i => allIngredients.find(ii => ii.id === i)).filter(Boolean) as Array<Ingredient>;\n      if (ig.ingredients.length > 0) {\n        addIngredientGroups.push({ slug: ig.slug, title: ig.title, ingredients: addIngredients });\n      }\n    });\n\n    const addSubrecipes: Array<SubRecipe> = allSubrecipes.filter(s => form.subrecipes.includes(s.child_recipe_id));\n\n    const bulkAddData: GroceryListBulkAdd = {\n      ingredientGroups: addIngredientGroups,\n      subrecipes: addSubrecipes,\n    };\n\n    return bulkAdd(form.list, bulkAddData);\n  }, [ingredients, subrecipes, bulkAdd]);\n  const handleSubmitSuccess = useCallback(() => {\n    onSaveSuccess();\n    onClose();\n  }, [onSaveSuccess, onClose]);\n  const handleModalClose = useCallback((autoClose: boolean) => {\n    if (!autoClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  if (!show || lists == null || subrecipes == null || ingredients == null) return null;\n\n  return (\n    <Modal\n        show = {show}\n        title = {intl.messages['recipe.recipe_ingredient_button.add_groceries'] as string}\n        onAccept = {handleEditSubmit}\n        acceptButtonProps = {{ disabled: lists.length === 0 || bulkAddPending === PendingState.SAVING }}\n        onClose  = {handleModalClose}\n        className = 'add-to-grocery-list-modal'>\n      <AddToGroceryListForm\n          lists = {lists}\n          subrecipes = {subrecipes}\n          ingredients = {ingredients}\n          onSubmit = {handleSubmit}\n          onSubmitSuccess = {handleSubmitSuccess}\n          onAddList = {createList}\n          submitRef = {submitRef} />\n    </Modal>\n  );\n};\n\ninterface IAddToGroceryListProps {\n  lists:       Array<GroceryList>;\n  subrecipes:  Array<SubRecipe>;\n  ingredients: Array<IngredientGroup>;\n  onSubmit: (upd: AddToGroceryListData) => Promise<ValidationResult>;\n  onSubmitSuccess: () => void;\n  onAddList: (item: GroceryListCreate) => Promise<ValidationResult>;\n  submitRef: RefObject<HTMLButtonElement>;\n}\n\ninterface IAddToGroceryListFormDataProps {\n  list: string;\n  subrecipes:  Record<string, boolean>;\n  ingredients: Record<string, Record<string, boolean>>;\n}\n\nfunction initializeCheckboxes(cbs: Array<string>): Record<string, boolean> {\n  const res: Record<string, boolean> = {};\n  cbs.forEach(cb => {\n    res[cb] = true;\n  });\n  return res;\n}\n\nfunction initializeInredientGroupsCheckboxes(igs: Array<IngredientGroup>): Record<string, Record<string, boolean>> {\n  const res: Record<string, Record<string, boolean>> = {};\n  igs.forEach(ig => {\n    res[ig.slug] = { ...initializeCheckboxes(ig.ingredients.flatMap(i => `cb-${i.id}`)) };\n  });\n  return res;\n}\n\nfunction uniquify<T>(arr: Array<T>): Array<T> {\n  return Array.from(new Set(arr));\n}\n\nconst AddToGroceryListForm = forwardRef<HTMLFormElement, IAddToGroceryListProps>(({\n    lists, subrecipes, ingredients, onSubmit, onSubmitSuccess, onAddList, submitRef }: IAddToGroceryListProps, ref) => {\n  const crash = useCrash();\n\n  const [initialValues] = useState<Partial<IAddToGroceryListFormDataProps>>({\n    list: lists.length > 0 ? lists[lists.length - 1].id.toString() : undefined,\n    ingredients: initializeInredientGroupsCheckboxes(ingredients),\n    subrecipes: {\n      ...initializeCheckboxes(subrecipes.flatMap(sr => `cb-${sr.child_recipe_id}`)),\n    },\n  });\n  // console.log(`initialValues=${JSON.stringify(initialValues, undefined, 2)}`);\n\n  const handleSubmit = useCallback(async (form: IAddToGroceryListFormDataProps): Promise<ValidationResult> => {\n    /*\n      form is something like:\n\n      list: 2,\n      ingredients: {\n        default: {\n          cb-123: true,\n          cb-124: true,\n        },\n        dough: {\n          cb-223: true,\n          cb-625: true,\n        },\n      subrecipe-cb-451: true,\n    */\n\n    const addSubrecipes: Array<number> = [];\n    Object.keys(form.subrecipes).forEach(s => {\n      if (form.subrecipes[s]) {\n        addSubrecipes.push(parseInt(s.substring(s.indexOf('-') + 1)));\n      }\n    });\n    const addIngredientGroups: Array<{ slug: string, title: string, ingredients: Array<number> }> = [];\n    Object.keys(form.ingredients ?? {}).forEach(igSlug => {\n      const addIgIngredients: Set<number> = new Set();\n      const ig = ingredients.find(igg => igg.slug === igSlug);\n      if (!ig) { crash(`Invalid state: There is not IngredientGroup for slug \"${igSlug}\"`); return; }\n      const igIngredients = form.ingredients[igSlug];\n      Object.keys(igIngredients).forEach(i => {\n        if (igIngredients[i]) {\n          addIgIngredients.add(parseInt(i.substring(i.indexOf('-') + 1)));\n        }\n      });\n      if (Object.keys(igIngredients).length > 0) {\n        addIngredientGroups.push({ slug: ig.slug, title: ig.title, ingredients: Array.from(addIgIngredients) });\n      }\n    });\n\n    const upd: AddToGroceryListData = {\n      list:        parseInt(form.list),\n      ingredients: addIngredientGroups,\n      subrecipes:  uniquify(addSubrecipes),\n    };\n    return onSubmit(upd);\n  }, [ingredients, onSubmit]);\n\n  return (\n    <ReduxForm\n        initialValues = {initialValues}\n        onSubmit = {handleSubmit}\n        subscription = {{}}\n        render = {({ form, handleSubmit: renderSubmit }) => (\n          <Form onSubmit={renderSubmit} ref={ref}>\n            <ReFormStatus onSubmitSuccess={onSubmitSuccess} />\n            <InitialValuesResetter form={form} initialValues={initialValues} />\n\n            <ListRow\n                lists = {lists}\n                form = {form}\n                onAddList = {onAddList} />\n\n            {lists.length > 0 && (\n              <>\n                <Row className='additional-checkbox-row'>\n                  <Col>\n                    <ToggleAllCheckbox\n                        name = 'toggle-all'\n                        form = {form}\n                        />\n                  </Col>\n                </Row>\n\n                <Row className='ingredients-and-subrecipes'>\n                  <Col>\n                    <SubRecipes\n                        subRecipes = {subrecipes}\n                        selectable\n                        />\n                    <IngredientGroups\n                        groups = {ingredients}\n                        hasSubrecipes = {subrecipes != null && subrecipes.length > 0}\n                        selectable\n                        />\n                  </Col>\n                </Row>\n              </>\n            )}\n            <button type='submit' ref={submitRef} className='visibility-hidden'>Submit</button>\n          </Form>\n        )} />\n  );\n});\n\nconst messages = defineMessages({\n  list: {\n    id: 'grocery_list.form.list',\n    defaultMessage: 'List',\n  },\n  new_text: {\n    id: 'grocery_list.item.new_text',\n    defaultMessage: 'Create a new grocery list to get started.',\n  },\n  new_list_title: {\n    id: 'grocery_list.item.new_title',\n    defaultMessage: 'My grocery list',\n  },\n});\n\ninterface IListRowProps {\n  lists: Array<GroceryList>;\n  form: FormApi<IAddToGroceryListFormDataProps, Partial<IAddToGroceryListFormDataProps>>;\n  onAddList: (item: GroceryListCreate) => Promise<ValidationResult>;\n}\n\nconst ListRow: React.FC<IListRowProps> = ({\n    lists, form, onAddList }: IListRowProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const [addedNewList, setAddedNewList] = useState<boolean>(false);\n  const prevListIds = useRef<Array<number> | undefined>();\n\n  const handleAddListClick = useCallback(() => {\n    const newListTitle = `${formatMessage(messages.new_list_title)}`;\n    const suffixes = lists\n        .filter(l => l.title.startsWith(newListTitle))\n        .map(l => parseInt(l.title.substring(newListTitle.length)))\n        .filter(i => !Number.isNaN(i) || i < 0)\n        .sort((a, b) => a - b);\n    const suffix = suffixes.length > 0 ? (suffixes[suffixes.length - 1] + 1) : 1;\n\n    prevListIds.current = lists.map(l => l.id);\n    onAddList({ title: `${newListTitle} ${suffix}` })\n        .then(() => {\n          setAddedNewList(true);\n        });\n  }, [lists, onAddList, formatMessage]);\n\n  useEffect(() => {\n    if (prevListIds.current == null) return;\n    const newIds = lists.map(l => l.id);\n\n    const newList = newIds.find(i => !prevListIds.current?.includes(i));\n    if (!newList) return;\n    form.change('list', newList.toString());\n\n    prevListIds.current = [];\n  }, [lists]);\n\n  return (\n    <Row>\n      <Col className='input-with-button'>\n        {lists.length === 0 && (\n          <>\n            <P>{formatMessage(messages.new_text)}</P>\n            <Button id='add-list-button' type='button' onClick={handleAddListClick} variant='primary' className='add-list-button'>\n              {intl.messages['nav.grocery_list_create'] as string}\n            </Button>\n          </>\n        )}\n        {lists.length > 0 && (\n          <>\n            <ReSelect\n                name   = 'list'\n                label  = {formatMessage(messages.list)}\n                data   = {lists.map(l => ({ value: l.id.toString(), label: l.title }))}\n                readOnly = {lists.length === 0}\n                disabled = {lists.length === 0} />\n            {!addedNewList && (\n              <Button id='add-list-button' type='button' onClick={handleAddListClick} variant='transparent' className='add-list-button' tooltip={intl.messages['nav.grocery_list_create'] as string}>\n                <Icon icon='plus-lg' variant='light' size='2x' />\n              </Button>\n            )}\n          </>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\ninterface IToggleAllCheckboxProps {\n  name: string;\n  form: FormApi<IAddToGroceryListFormDataProps, Partial<IAddToGroceryListFormDataProps>>;\n}\n\nconst ToggleAllCheckbox: React.FC<IToggleAllCheckboxProps> = ({\n    name, form }: IToggleAllCheckboxProps) => {\n  const intl = useIntl();\n  const [value, setValue] = useState<boolean>(true);\n\n  const handleChange = useCallback((_name: string, newValue: boolean) => {\n    setValue(newValue);\n\n    const registeredFields = form.getRegisteredFields();\n\n    const ingredientGroupsCbs = registeredFields.filter(f => f.startsWith('ingredients.') && f.includes('cb-'));\n    const subrecipesCbs = registeredFields.filter(f => f.startsWith('subrecipes.') && f.includes('cb-'));\n\n    const allCbs = [...ingredientGroupsCbs, ...subrecipesCbs];\n    allCbs.forEach(cbKey => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      form.change(cbKey as any, newValue);\n    });\n  }, [form]);\n\n  return (\n    <Checkbox\n        name   = {name}\n        label  = {intl.messages['grocery_list.items.toggle_all'] as string}\n        value  = {value}\n        onChange = {handleChange} />\n  );\n};\n\nexport default AddToGroceryListModal;\n","import { useCallback, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\n\nimport '../css/ingredients_footer.css';\n\nimport { getRoutePath, isDemoMode } from '../../common/utility';\nimport Icon from '../../common/components/Icon';\nimport ConditionalWrapper from '../../common/components/ConditionalWrapper';\nimport { IngredientGroup, SubRecipe } from '../store/RecipeTypes';\nimport AddToGroceryListModal from './AddToGroceryListModal';\nimport Toast from '../../common/components/Toast';\n\nconst messages = defineMessages({\n  add_groceries: {\n    id: 'recipe.recipe_ingredient_button.add_groceries',\n    description: 'Add groceries to list',\n    defaultMessage: 'Add to grocery list',\n  },\n  add_groceries_success_toast: {\n    id: 'recipe.recipe_ingredient_button.success_toast',\n    description: 'Add groceries to list success toast',\n    defaultMessage: 'Groceries added to the list.',\n  },\n});\n\nexport interface IIngredientsFooterProps {\n  subrecipes: Array<SubRecipe> | undefined;\n  ingredients: Array<IngredientGroup> | undefined;\n  isAuthenticated: boolean;\n}\n\nconst IngredientsFooter: React.FC<IIngredientsFooterProps> = ({\n    isAuthenticated, subrecipes, ingredients }: IIngredientsFooterProps) => {\n  const { formatMessage } = useIntl();\n\n  const [showGroceriesModal, setShowGroceriesModal] = useState<boolean>(false);\n  const handleAddGroceries = useCallback(() => {\n    setShowGroceriesModal(true);\n  }, []);\n  const handleGroceriesModalClose = useCallback(() => {\n    setShowGroceriesModal(false);\n  }, []);\n\n  const [showGroceriesSuccessToast, setShowGroceriesSuccessToast] = useState<boolean>(false);\n  const handleAddToGroceryListSuccess = useCallback(() => {\n    setShowGroceriesSuccessToast(true);\n  }, []);\n  const handleCloseAddGroceryListToast = useCallback(() => {\n    setShowGroceriesSuccessToast(false);\n  }, []);\n\n  return (\n    <div className='ingredients-footer print-hidden'>\n      <ConditionalWrapper\n          condition = {!isAuthenticated}\n          render = {childr => <Link to={getRoutePath('/login')}>{childr}</Link>}>\n        <Button onClick={handleAddGroceries} variant='primary' disabled={isDemoMode()}>\n          <Icon icon='clipboard2-check' />\n          {formatMessage(messages.add_groceries)}\n        </Button>\n      </ConditionalWrapper>\n\n      <AddToGroceryListModal\n          show = {showGroceriesModal}\n          subrecipes = {subrecipes}\n          ingredients = {ingredients}\n          onClose = {handleGroceriesModalClose}\n          onSaveSuccess = {handleAddToGroceryListSuccess}\n          />\n\n      <Toast\n          show = {showGroceriesSuccessToast}\n          variant = 'success'\n          anchorOrigin = {{ horizontal: 'center', vertical: 'bottom' }}\n          onClose = {handleCloseAddGroceryListToast}>\n        {formatMessage(messages.add_groceries_success_toast)}\n      </Toast>\n    </div>\n  );\n};\n\nexport default IngredientsFooter;\n","import { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/ingredients_panel.css';\n\nimport { Recipe } from '../store/RecipeTypes';\nimport { PendingState, ReducerMeta } from '../../common/store/GenericReducerType';\nimport P from '../../common/components/P';\nimport Loading from '../../common/components/Loading';\nimport { ValidationResult } from '../../common/store/Validation';\nimport SubRecipes from './SubRecipes';\nimport IngredientGroups from './IngredientGroups';\nimport IngredientsHeader from './IngredientsHeader';\nimport IngredientFooter from './IngredientsFooter';\n\nconst messages = defineMessages({\n  no_ingredients: {\n    id: 'recipe.recipe_ingredient_button.no_ingredients',\n    description: 'No ingredients provided message',\n    defaultMessage: '(This recipe has no ingredients.)',\n  },\n});\n\nexport interface IIngredientsPanelProps {\n  recipe:      Recipe | undefined;\n  recipeMeta:  ReducerMeta;\n  userId:      number | undefined;\n\n  updateServings: (servings: number) => Promise<ValidationResult>;\n}\n\nconst IngredientsPanel: React.FC<IIngredientsPanelProps> = ({ recipe, recipeMeta, userId, updateServings }: IIngredientsPanelProps) => {\n  const { formatMessage } = useIntl();\n\n  const pending = recipeMeta.pending;\n  const hasNoIngredients = pending === PendingState.COMPLETED\n      && recipe?.subrecipes != null && recipe.subrecipes.length === 0\n      && recipe?.ingredientGroups != null && recipe.ingredientGroups.length === 0;\n\n  return (\n    <article className='ingredients-panel'>\n      <IngredientsHeader recipe={recipe} recipeMeta={recipeMeta} updateServings={updateServings} />\n      {pending === PendingState.LOADING && recipe?.ingredientGroups == null && <Loading />}\n      {hasNoIngredients && (\n        <P className='placeholder'>{formatMessage(messages.no_ingredients)}</P>\n      )}\n      {!hasNoIngredients && (\n        <>\n          <div className='ingredient-groups'>\n            <SubRecipes\n                withHeaderLink\n                subRecipes = {recipe?.subrecipes}\n                />\n            {recipe?.subrecipes && recipe?.subrecipes.length > 0 && <div className='grid-space-subrecipes' />}\n            <IngredientGroups\n                withHeaderLink\n                groups  = {recipe?.ingredientGroups}\n                hasSubrecipes = {recipe?.subrecipes != null && recipe?.subrecipes.length > 0}\n                />\n          </div>\n          <IngredientFooter\n              subrecipes = {recipe?.subrecipes}\n              ingredients = {recipe?.ingredientGroups}\n              isAuthenticated = {userId != null} />\n        </>\n      )}\n    </article>\n  );\n};\n\nexport default IngredientsPanel;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport '../css/ingredients_panel.css';\n\nimport { useDispatch } from '../../common/store/redux';\nimport { Recipe } from '../store/RecipeTypes';\nimport { updateServings } from '../store/RecipeActions';\nimport { ReducerMeta } from '../../common/store/GenericReducerType';\nimport IngredientsPanel from '../components/IngredientsPanel';\n\nexport interface IIngredientsPanelContainerProps {\n  recipe:      Recipe | undefined;\n  recipeMeta:  ReducerMeta;\n  userId:      number | undefined;\n}\n\nconst IngredientsPanelContainer: React.FC<IIngredientsPanelContainerProps> = ({ recipe, recipeMeta, userId }: IIngredientsPanelContainerProps) => {\n  const dispatch = useDispatch();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const recipeSlug = recipe?.slug ?? '';\n\n  const handleUpdateServings = useCallback((servings: number) => {\n    setSearchParams({ ...searchParams, servings: String(servings) });\n    return dispatch(updateServings(recipeSlug, servings));\n  }, [searchParams, recipeSlug]);\n\n  const locationServings = useMemo(() => {\n    const serv = searchParams.get('servings');\n    if (!serv) return undefined;\n    const servNumber = Number.parseFloat(serv);\n    if (Number.isNaN(servNumber)) return undefined;\n    return servNumber;\n  }, [searchParams]);\n\n  const customServings = recipe?.customServings;\n\n  useEffect(() => {\n    if (locationServings && locationServings !== customServings) {\n      handleUpdateServings(locationServings);\n    }\n  }, [handleUpdateServings, locationServings, customServings]);\n\n  return (\n    <IngredientsPanel\n        recipe     = {recipe}\n        recipeMeta = {recipeMeta}\n        userId     = {userId}\n        updateServings = {handleUpdateServings}\n        />\n  );\n};\n\nexport default IngredientsPanelContainer;\n","import { Children, forwardRef, isValidElement, useCallback, useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport '../css/image_viewer.css';\n\nimport { CommonProps } from '../types/OverridableComponent';\nimport { ModalHeaderCloseButton } from './Modal';\nimport { IImageProps } from './Image';\nimport Icon from './Icon';\nimport ErrorBoundary from './ErrorBoundary';\n\nexport interface IImageViewerProps extends CommonProps {\n  children: React.ReactElement<IImageProps>;\n}\n\nconst ImageViewer = forwardRef<HTMLButtonElement, IImageViewerProps>(({\n    className, children, ...rest }: IImageViewerProps, ref) => {\n  const [openModal, setOpenModal] = useState<boolean>(false);\n\n  const handleOpenModal  = useCallback(() => { setOpenModal(true); }, []);\n  const handleCloseModal = useCallback(() => { setOpenModal(false); }, []);\n\n  return (\n    <ErrorBoundary verbose={false} printStack={false}>\n      <Button\n          type = 'button'\n          className = {classNames('image-viewer', className)}\n          onClick = {handleOpenModal}\n          variant = 'transparent'\n          {...rest}\n          ref = {ref}\n          >\n        {children}\n      </Button>\n\n      <Modal\n          show = {openModal}\n          fullscreen\n          onHide = {handleCloseModal}\n          className = 'image-viewer-dialog'\n          >\n        <ErrorBoundary verbose printStack>\n          <ImageViewerContent\n              onClose = {handleCloseModal}>\n            {children}\n          </ImageViewerContent>\n        </ErrorBoundary>\n      </Modal>\n    </ErrorBoundary>\n  );\n});\n\ninterface IImageViewerContentProps extends CommonProps {\n  onClose: () => void;\n\n  children: React.ReactElement<IImageProps>;\n}\n\nconst ImageViewerContent = forwardRef<HTMLDivElement, IImageViewerContentProps>(({\n    onClose, children, ...rest }: IImageViewerContentProps, ref) => {\n  let nextSrc = '';\n  Children.forEach(children, element => {\n    if (!isValidElement(element)) return;\n\n    const { src } = element.props;\n    nextSrc = src;\n  });\n  const nextTitle = nextSrc.includes('/') ? nextSrc.substring(nextSrc.lastIndexOf('/') + 1) : nextSrc;\n\n  return (\n    <>\n      <Modal.Header {...rest} ref={ref}>\n        <Modal.Title>{nextTitle}</Modal.Title>\n        <a title={nextTitle} download={nextTitle} href={nextSrc} className='btn btn-transparent close-button download-button' aria-label='Download'>\n          <Icon icon='download' variant='light' size='2x' />\n        </a>\n        <ModalHeaderCloseButton onClose={onClose} />\n      </Modal.Header>\n      <Modal.Body>\n        {children}\n      </Modal.Body>\n    </>\n  );\n});\n\nexport default ImageViewer;\n","import { createContext } from 'react';\n\nexport interface ICookingModeContext {\n  cookingMode: boolean;\n  setCookingMode: (active: boolean) => void;\n}\n\nconst CookingModeContext = createContext<ICookingModeContext | null>(null);\n\nexport default CookingModeContext;\n","// Coded by Joris (https://github.com/jorisre/react-screen-wake-lock)\n\nimport { useCallback, useRef, useState } from 'react';\n\nexport interface IWakeLockOptions {\n  onError?: (error: Error) => void;\n  onRequest?: () => void;\n  onRelease?: EventListener;\n}\n\ntype WakeLockType = 'screen';\n\nexport const useWakeLock = ({\n  onError,\n  onRequest,\n  onRelease,\n}: IWakeLockOptions | undefined = {}) => {\n  const [released, setReleased] = useState<boolean | undefined>();\n  const wakeLock = useRef<WakeLockSentinel | null>(null);\n\n  // https://caniuse.com/mdn-api_wakelock\n  const isSupported = typeof window !== 'undefined' && 'wakeLock' in navigator;\n\n  const request = useCallback(\n    async (type: WakeLockType = 'screen') => {\n      const isWakeLockAlreadyDefined = wakeLock.current != null;\n      if (!isSupported) {\n        // eslint-disable-next-line no-console\n        console.warn('Calling the \"request\" function has no effect, Wake Lock Screen API isn\\'t supported.');\n        return;\n      }\n      if (isWakeLockAlreadyDefined) {\n        // eslint-disable-next-line no-console\n        console.warn('Calling \"request\" multiple times without \"release\" has no effect.');\n        return;\n      }\n\n      try {\n        wakeLock.current = await navigator.wakeLock.request(type);\n\n        wakeLock.current.onrelease = (e: Event) => {\n          // Default to `true` - `released` API is experimental: https://caniuse.com/mdn-api_wakelocksentinel_released\n          setReleased((wakeLock.current && wakeLock.current.released) ?? true);\n          if (onRelease) {\n            onRelease(e);\n          }\n          wakeLock.current = null;\n        };\n\n        onRequest?.();\n        setReleased((wakeLock.current && wakeLock.current.released) ?? false);\n      } catch (error) {\n        if (onError) {\n          onError(error as Error);\n        } else {\n          // eslint-disable-next-line no-console\n          console.error((error as Error)?.message);\n        }\n      }\n    },\n    [isSupported, onRequest, onError, onRelease]\n  );\n\n  const release = useCallback(async () => {\n    const isWakeLockUndefined = wakeLock.current == null;\n    if (!isSupported) {\n      // eslint-disable-next-line no-console\n      console.warn('Calling the \"release\" function has no effect, Wake Lock Screen API isn\\'t supported.');\n      return;\n    }\n    if (isWakeLockUndefined) {\n      // eslint-disable-next-line no-console\n      console.warn('Calling `release` before `request` has no effect.');\n      return;\n    }\n\n    if (wakeLock.current) {\n      await wakeLock.current.release();\n    }\n  }, [isSupported]);\n\n  return {\n    isSupported: isSupported,\n    request:     request,\n    released:    released,\n    release:     release,\n    type:        (wakeLock.current && wakeLock.current.type) || undefined,\n  };\n};\n","import { useCallback, useContext } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport Icon from '../../common/components/Icon';\nimport CookingModeContext from '../context/CookingModeContext';\nimport { useWakeLock } from '../../common/hooks/useWakeLock';\nimport Button from '../../common/components/Button';\n\nconst messages = defineMessages({\n  activate_cooking_mode_tooltip: {\n    id: 'recipe.activate_cooking_mode_tooltip',\n    description: 'Tooltip displayed when hovering the activate cooking mode button',\n    defaultMessage: 'Keep display awake',\n  },\n  deactivate_cooking_mode_tooltip: {\n    id: 'recipe.deactivate_cooking_mode_tooltip',\n    description: 'Tooltip displayed when hovering the deactivate cooking mode button',\n    defaultMessage: 'Release the display wake lock',\n  },\n});\n\nconst CookingModeButton: React.FC = () => {\n  const { formatMessage } = useIntl();\n\n  const { isSupported } = useWakeLock();\n  const cookingModeContext = useContext(CookingModeContext);\n  const isCookingMode = cookingModeContext?.cookingMode ?? false;\n\n  const handleClick = useCallback(() => {\n    cookingModeContext?.setCookingMode(!isCookingMode);\n  }, [cookingModeContext?.setCookingMode, isCookingMode]);\n\n  if (!isSupported) return null;\n\n  return (\n    <Button id='cooking-mode-toggle' variant={isCookingMode ? 'primary' : 'outline-primary'} onClick={handleClick} tooltip={formatMessage(isCookingMode ? messages.deactivate_cooking_mode_tooltip : messages.activate_cooking_mode_tooltip)}>\n      <Icon icon={isCookingMode ? 'brightness-alt-high-fill' : 'brightness-alt-high'} variant='light' size='2x' />\n    </Button>\n  );\n};\n\nexport default CookingModeButton;\n","import { useCallback, useMemo, useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\nimport classNames from 'classnames';\n\nimport '../css/recipe_header.css';\n\nimport { Recipe } from '../store/RecipeTypes';\nimport { getRoutePath, isDemoMode, optionallyFormatMessage } from '../../common/utility';\nimport Icon from '../../common/components/Icon';\nimport Chip from '../../common/components/Chip';\nimport Ratings from '../../rating/components/Ratings';\nimport P from '../../common/components/P';\nimport Modal from '../../common/components/Modal';\nimport WidthHeightRatio from '../../common/components/WidthHeightRatio';\nimport Image from '../../common/components/Image';\nimport ImageViewer from '../../common/components/ImageViewer';\nimport Button from '../../common/components/Button';\nimport NavButton from '../../common/components/NavButton';\nimport { Toolbar } from '../../common/components/Toolbar';\nimport CookingModeButton from './CookingModeButton';\nimport Tooltip from '../../common/components/Tooltip';\n\nconst editorMessages = defineMessages({\n  edited_by: {\n    id: 'recipe.edited_by',\n    description: 'The recipe was edited by ...',\n    defaultMessage: 'Edited by',\n  },\n});\n\ninterface IRecipeEditorProps {\n  recipe: Recipe;\n}\n\nexport const RecipeEditor: React.FC<IRecipeEditorProps> = ({ recipe }: IRecipeEditorProps) => {\n  const { formatMessage, locale } = useIntl();\n\n  if (recipe.update_date && new Date(recipe.update_date).getTime() > 0 && recipe.update_username) {\n    const editorS = `${formatMessage(editorMessages.edited_by)}: ${recipe.update_username}`;\n    const editDateS = new Date(recipe.update_date).toLocaleString(locale);\n    const tooltipJsx = (\n      <div className='d-flex-column'>\n        <div>{editorS}</div>\n        <div>{editDateS}</div>\n      </div>\n    );\n    return (\n      <Tooltip id={`${recipe.id}-editor-tooltip`} tooltip={tooltipJsx}>\n        <Icon icon='pencil' size='1x' style={{ marginLeft: '5px', marginRight: 0 }} ariaLabel={`${formatMessage(editorMessages.edited_by)}: ${recipe.update_username}. ${editDateS}`} />\n      </Tooltip>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport const RecipeTimestamp: React.FC<IRecipeEditorProps> = ({ recipe }: IRecipeEditorProps) => {\n  const { locale } = useIntl();\n  if (recipe.update_date && new Date(recipe.update_date).getTime() > 0 && recipe.update_username === recipe.pub_username) {\n    return (\n      <>\n        <Icon icon='calendar' />\n        {new Date(recipe.update_date).toLocaleDateString(locale)}\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Icon icon='calendar' />\n        {new Date(recipe.pub_date).toLocaleDateString(locale)}\n      </>\n    );\n  }\n};\n\nconst messages = defineMessages({\n  edit_tooltip: {\n    id: 'recipe.edit_tooltip',\n    description: 'Tooltip displayed when hovering the edit recipe icon button',\n    defaultMessage: 'Edit this recipe',\n  },\n  delete_tooltip: {\n    id: 'recipe.delete_tooltip',\n    description: 'Tooltip displayed when hovering the delete recipe icon button',\n    defaultMessage: 'Delete this recipe',\n  },\n  print_tooltip: {\n    id: 'recipe.print_tooltip',\n    description: 'Tooltip displayed when hovering the print icon button',\n    defaultMessage: 'Print this recipe',\n  },\n  add_to_menu_tooltip: {\n    id: 'recipe.add_to_menu_tooltip',\n    description: 'Tooltip displayed when hovering the add-recipe-to-menu button',\n    defaultMessage: 'Add recipe to menu',\n  },\n  recipe_comments: {\n    id: 'recipe.comments',\n    description: 'Button to comments',\n    defaultMessage: 'Comments',\n  },\n  prep_time: {\n    id: 'recipe.prep_time',\n    description: 'Preparation time',\n    defaultMessage: 'Prep time',\n  },\n  cooking_time: {\n    id: 'recipe.cooking_time',\n    description: 'Cooking time',\n    defaultMessage: 'Cooking time',\n  },\n  minutes: {\n    id: 'recipe.minutes',\n    description: 'minutes',\n    defaultMessage: '{count, plural, one {# minute} other {# minutes}}',\n  },\n  source: {\n    id: 'recipe.source',\n    description: 'Source of the recipe',\n    defaultMessage: 'Source',\n  },\n  created_by: {\n    id: 'recipe.created_by',\n    description: 'Created by',\n    defaultMessage: 'Created by',\n  },\n  last_updated: {\n    id: 'recipe.last_updated',\n    description: 'Last Updated',\n    defaultMessage: 'Last Updated',\n  },\n  confirm_delete_title: {\n    id: 'recipe.confirm_delete_title',\n    description: 'Confirm deletion - dialog title',\n    defaultMessage: 'Confirm deletion',\n  },\n  confirm_delete_message: {\n    id: 'recipe.confirm_delete',\n    description: 'Are you sure you want to delete this recipe?',\n    defaultMessage: 'Are you sure you want to delete this recipe?',\n  },\n  confirm_delete_accept: {\n    id: 'recipe.confirm_delete_accept',\n    description: 'Confirm deletion - Accept button title',\n    defaultMessage: 'Delete',\n  },\n});\n\nexport interface IRecipeHeaderProps {\n  recipe:   Recipe | undefined;\n  editable: boolean;\n\n  onEditRecipe: () => void;\n  deleteRecipe: () => void;\n  onAddToMenuClick: () => void;\n}\n\nconst RecipeHeader: React.FC<IRecipeHeaderProps> = ({\n    recipe, editable, onEditRecipe, deleteRecipe, onAddToMenuClick }: IRecipeHeaderProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const handleEditClick    = useCallback(() => { onEditRecipe(); }, [onEditRecipe]);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState<boolean>(false);\n  const handleDeleteClick  = useCallback(() => { setShowDeleteConfirm(true); }, []);\n  const handleDeleteAccept = useCallback(() => { deleteRecipe(); }, [deleteRecipe]);\n  const handleDeleteClose  = useCallback(() => { setShowDeleteConfirm(false); }, []);\n\n  const editLink = editable ? (\n    <NavButton\n        id='edit-recipe-button'\n        variant = 'outline-primary'\n        tooltip={formatMessage(messages.edit_tooltip)}\n        to={getRoutePath(`/recipe/edit/${recipe?.slug}`)}\n        onClick={handleEditClick}>\n      <Icon icon='pencil' />\n    </NavButton>\n  ) : null;\n\n  const deleteLink = editable ? (\n    <Button id='trash-recipe-button' variant='outline-danger' onClick={handleDeleteClick} tooltip={formatMessage(messages.delete_tooltip)}>\n      <Icon icon='trash' />\n    </Button>\n  ) : null;\n\n  const source = useMemo(() => {\n    if (recipe?.source) {\n      let hostname = '';\n      if (recipe?.source && recipe.source.match(/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/g)) {\n        // Get Host name of a URL\n        const a = document.createElement('a');\n        a.href = recipe.source;\n        hostname = a.hostname;\n      }\n\n      return (\n        <div className='source-wrapper'>\n          {`${formatMessage(messages.source)}: `}\n          {hostname.length > 0 && (\n            <>\n              <a href={recipe.source} target='_blank' rel='noreferrer' className='print-hidden'>{hostname}</a>\n              <a href={recipe.source} target='_blank' rel='noreferrer' className='print-only'>{recipe.source}</a>\n            </>\n          )}\n          {hostname.length === 0 && recipe.source}\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }, [recipe?.source, intl.locale]);\n\n  const printButton = (\n    <Button id='print-recipe-button' variant='outline-primary' onClick={window.print} tooltip={formatMessage(messages.print_tooltip)}>\n      <Icon icon='printer' />\n    </Button>\n  );\n\n  const addToMenuButton = (\n    <Button id='add-to-menu' variant='outline-primary'tooltip={formatMessage(messages.add_to_menu_tooltip)} onClick={onAddToMenuClick} disabled={isDemoMode()}>\n      <Icon icon='calendar-plus' />\n    </Button>\n  );\n\n  const optionButtons = (\n    <div className='options print-hidden'>\n      <Toolbar position='end'>\n        {editable && (\n          <>\n            {editLink}\n            {deleteLink}\n          </>\n        )}\n        {addToMenuButton}\n        <CookingModeButton />\n        {printButton}\n      </Toolbar>\n    </div>\n  );\n\n  const chips = recipe != null ? (\n    <>\n      <div className='recipe-header-chips'>\n        {recipe.prepTime != null && recipe.prepTime > 0 && (\n          <Chip color='secondary'>\n            <Icon icon='clock' />\n            {`${formatMessage(messages.prep_time)}: `}\n            {` ${formatMessage(messages.minutes, { count: recipe.prepTime })}`}\n          </Chip>\n        )}\n        {recipe.cookTime != null && recipe.cookTime > 0 && (\n          <Chip color='secondary'>\n            <Icon icon='clock' />\n            {`${formatMessage(messages.cooking_time)}: `}\n            {` ${formatMessage(messages.minutes, { count: recipe.cookTime })}`}\n          </Chip>\n        )}\n        {recipe.course?.title != null && recipe.course.title.length > 0 && (\n          <Chip color='secondary'>\n            <Icon icon='grid' />\n            {optionallyFormatMessage(intl, 'course.', recipe.course.title)}\n          </Chip>\n        )}\n        {recipe.cuisine?.title != null && recipe.cuisine.title.length > 0 && (\n          <Chip color='secondary'>\n            <Icon icon='globe' variant='light' />\n            {optionallyFormatMessage(intl, 'cuisine.', recipe.cuisine.title)}\n          </Chip>\n        )}\n        {recipe.seasons.length > 0 && (\n          <Chip color='secondary'>\n            <Icon icon='basket3'  />\n            {recipe.seasons.map(s => optionallyFormatMessage(intl, 'season.', s.title)).join(', ')}\n          </Chip>\n        )}\n        {recipe.tags.map(t => (\n          <Chip key={String(t.title)} color='secondary'>\n            {optionallyFormatMessage(intl, 'tag.', t.title)}\n          </Chip>\n        ))}\n      </div>\n      <div className='recipe-header-chips'>\n        <Chip color='secondary'>\n          <RecipeTimestamp recipe={recipe} />\n          <RecipeEditor recipe={recipe} />\n        </Chip>\n        <Chip color='secondary'>\n          <Icon icon='person' />\n          {recipe?.pub_username ?? ''}\n        </Chip>\n      </div>\n    </>\n  ) : null;\n\n  return (\n    <>\n      <article className={classNames('recipe-header', { 'with-image': recipe != null && recipe.photo })}>\n        <h1 className='d-block d-xl-none'>{recipe?.title}</h1>\n\n        <Row className='flex-row-reverse justify-content-center'>\n          {recipe != null && recipe.photo && (\n            <>\n              <Col xl={6} lg={12} className='img-wrapper print-hidden'>\n                <WidthHeightRatio height={66.67} width={100}>\n                  <ImageViewer>\n                    <Image\n                        src = {recipe.photo}\n                        alt = ''\n                        className='img-responsive print-hidden' />\n                  </ImageViewer>\n                </WidthHeightRatio>\n                {optionButtons}\n              </Col>\n              <Col sm={7} xs={12} className='col-sm-push-5 print-only'>\n                <WidthHeightRatio height={66.67} width={100} className='print-only print-image'>\n                  <ImageViewer>\n                    <Image\n                        src = {recipe.photoThumbnail ?? recipe.photo}\n                        alt = '' />\n                  </ImageViewer>\n                </WidthHeightRatio>\n              </Col>\n            </>\n          )}\n          {recipe != null && !recipe.photo && (\n            optionButtons\n          )}\n\n          <Col xl={6} lg={12} className='info-wrapper optiwidth'>\n            <h1 className='d-none d-xl-block'>{recipe?.title}</h1>\n            <P className='recipe-info'>{recipe?.info}</P>\n            <Ratings stars={recipe?.rating ?? 0} showCount={false} />\n            {chips}\n            {source}\n          </Col>\n        </Row>\n      </article>\n      <hr className='recipe-header-hr' />\n\n      <Modal\n          show        = {showDeleteConfirm}\n          title       = {formatMessage(messages.confirm_delete_title)}\n          acceptTitle = {formatMessage(messages.confirm_delete_accept)}\n          acceptButtonProps = {{ variant: 'danger' }}\n          onAccept    = {handleDeleteAccept}\n          onClose     = {handleDeleteClose}\n          className   = 'delete'>\n        {formatMessage(messages.confirm_delete_message)}\n      </Modal>\n    </>\n  );\n};\n\nexport default RecipeHeader;\n","import { defineMessages, useIntl } from 'react-intl';\nimport classNames from 'classnames';\n\nimport '../css/directions.css';\n\nimport { IngredientGroup } from '../store/RecipeTypes';\nimport P from '../../common/components/P';\nimport { PendingState, ReducerMeta } from '../../common/store/GenericReducerType';\nimport Loading from '../../common/components/Loading';\nimport HeaderLink from '../../common/components/HeaderLink';\nimport Directions from './Directions';\n\nconst messages = defineMessages({\n  directions: {\n    id: 'recipe.directions',\n    description: 'Directions',\n    defaultMessage: 'Directions',\n  },\n  no_directions: {\n    id: 'recipe.directions.no_directions',\n    description: 'No directions provided message',\n    defaultMessage: '(This recipe has no directions.)',\n  },\n});\n\nexport interface IDirectionsPanelProps {\n  directions: string;\n  recipeMeta: ReducerMeta;\n  ingredients: Array<IngredientGroup>;\n}\n\nconst DirectionsPanel: React.FC<IDirectionsPanelProps> = ({\n    directions: directionsString, recipeMeta, ingredients }: IDirectionsPanelProps) => {\n  const { formatMessage } = useIntl();\n\n  const pending = recipeMeta.pending;\n  const hasNoData = pending === PendingState.COMPLETED\n      && directionsString.trim().length <= 1; // Ignore single fake char.\n\n  const isMultiDirections = directionsString.includes(':\\n');\n\n  return (\n    <article className={classNames('directions-panel', 'optiwidth', { 'multi-directions': isMultiDirections })}>\n      <h2 id='directions-heading'>\n        {formatMessage(messages.directions)}\n        <HeaderLink linkFor='directions-heading' />\n      </h2>\n      {pending === PendingState.LOADING && directionsString === '' && <Loading />}\n      {hasNoData && (\n        <P className='placeholder'>{formatMessage(messages.no_directions)}</P>\n      )}\n      {!hasNoData && (\n        <div className='direction-groups'>\n          <Directions directions={directionsString} ingredients={ingredients} />\n        </div>\n      )}\n    </article>\n  );\n};\n\nexport default DirectionsPanel;\n","import { Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport '../css/recipe.css';\n\nimport { Recipe } from '../store/RecipeTypes';\nimport { ReducerMeta } from '../../common/store/GenericReducerType';\nimport IngredientsPanelContainer from '../containers/IngredientsPanelContainer';\nimport RecipeHeader from './RecipeHeader';\nimport DirectionsPanel from './DirectionsPanel';\n\ninterface IRecipeSchemeProps {\n  recipe:       Recipe | undefined;\n  recipeMeta:   ReducerMeta;\n  userId:       number | undefined;\n  editable:     boolean;\n\n  onEditRecipe: () => void;\n  deleteRecipe: () => void;\n  onAddToMenuClick: () => void;\n}\n\nconst RecipeScheme: React.FC<IRecipeSchemeProps> = ({ recipe, recipeMeta, userId, editable, onEditRecipe, deleteRecipe, onAddToMenuClick }: IRecipeSchemeProps) => (\n  <div className={classNames('recipe-details', { 'with-image': recipe != null && recipe.photo })}>\n    <RecipeHeader\n        recipe = {recipe}\n        editable = {editable}\n        onEditRecipe = {onEditRecipe}\n        onAddToMenuClick = {onAddToMenuClick}\n        deleteRecipe = {deleteRecipe} />\n\n    <Row>\n      <Col xl={4} lg={12}>\n        <IngredientsPanelContainer\n            recipe     = {recipe}\n            recipeMeta = {recipeMeta}\n            userId     = {userId}\n            />\n      </Col>\n      <hr className='d-block d-xl-none' />\n      <Col xl={8} lg={12}>\n        <DirectionsPanel\n            directions  = {recipe?.directions ?? ''}\n            recipeMeta  = {recipeMeta}\n            ingredients = {recipe?.ingredientGroups ?? []} />\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default RecipeScheme;\n","import { useCallback, useMemo, useState } from 'react';\n\nimport CookingModeContext, { ICookingModeContext } from './CookingModeContext';\n\n/** {@link CookingModeContextProvider} Props. */\ninterface ICookingModeContextProviderProps {\n  /** App container that should have access to the providers. */\n  children?: React.ReactNode | React.ReactElement;\n}\n\n/**\n * {@link CookingModeContext} Provider.\n *\n * @param props - {@link ICookingModeContextProviderProps}.\n */\nconst CookingModeContextProvider: React.FC<ICookingModeContextProviderProps> = ({\n    children }: ICookingModeContextProviderProps) => {\n  const [isCookingMode, setIsCookingMode] = useState<boolean>(false);\n\n  const updateCookingMode = useCallback((active: boolean) => { setIsCookingMode(active); }, []);\n\n  const value: ICookingModeContext = useMemo(() => ({\n    cookingMode:    isCookingMode,\n    setCookingMode: updateCookingMode,\n  }), [isCookingMode]);\n\n  return (\n    <CookingModeContext.Provider value={value}>\n      {children}\n    </CookingModeContext.Provider>\n   );\n};\n\nexport default CookingModeContextProvider;\n","import { useCallback, useContext, useEffect, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport { useWakeLock } from '../../common/hooks/useWakeLock';\nimport usePageVisibility from '../../common/hooks/pageVisibility/usePageVisibility';\n\nimport Toast from '../../common/components/Toast';\nimport Modal from '../../common/components/Modal';\nimport CookingModeContext from '../context/CookingModeContext';\n\nconst messages = defineMessages({\n  activated_cooking_mode_toast: {\n    id: 'recipe.activated_cooking_mode_toast',\n    description: 'Toast displayed when activating the cooking mode button',\n    defaultMessage: 'Your display will stay awake now.\\nHappy cooking!',\n  },\n  still_cooking_modal_title: {\n    id: 'recipe.still_cooking_modal_title',\n    description: 'Title of the modal to ask to continue keeping the display awake.',\n    defaultMessage: 'Still cooking?',\n  },\n  still_cooking_modal_text: {\n    id: 'recipe.still_cooking_modal_text',\n    description: 'Body text of the modal to ask to continue keeping the display awake.',\n    defaultMessage: 'Do you want to continue keeping the display awake?',\n  },\n  still_cooking_modal_yes: {\n    id: 'recipe.still_cooking_modal_yes',\n    description: 'Yes button.',\n    defaultMessage: 'Yes',\n  },\n  still_cooking_modal_no: {\n    id: 'recipe.still_cooking_modal_no',\n    description: 'no button.',\n    defaultMessage: 'No',\n  },\n});\n\nconst CookingModeHandler: React.FC = () => {\n  const { formatMessage } = useIntl();\n\n  const cookingModeContext = useContext(CookingModeContext);\n  const isCookingMode = cookingModeContext?.cookingMode ?? false;\n\n  let timer: NodeJS.Timeout | undefined;\n\n  const [showCookingModeToast, setShowCookingModeToast] = useState<boolean>(false);\n  const [askIfStillActive, setAskIfStillActive] = useState<boolean>(false);\n\n  const { isSupported, request, release, released } = useWakeLock();\n\n  const isPageVisible = usePageVisibility();\n  useEffect(() => {\n    if (!isSupported || !isCookingMode) return;\n\n    if (!isPageVisible) {\n      if (released === false) {\n        release();\n      }\n    } else {\n      request();\n    }\n  }, [isPageVisible]);\n\n  useEffect(() => {\n    if (!isCookingMode) {\n      clearTimer();\n      if (released === false) {\n        release();\n      }\n    } else if (isSupported) {\n      request()\n        .then(() => {\n          renewTimer();\n          setTimeout(() => {\n            setShowCookingModeToast(true);\n          }, 1);\n        });\n    }\n  }, [isCookingMode]);\n\n  // componentWillUnmount\n  useEffect(() => () => {\n    clearTimer(false);\n    if (released === false) {\n      release();\n    }\n  }, []);\n\n  const pauseLock = () => {\n    release();\n    setAskIfStillActive(true);\n  };\n\n  const renewTimer = () => {\n    clearTimer();\n    timer = setTimeout(() => {\n      pauseLock();\n    }, 1000 * 60 * 30);\n  };\n\n  const clearTimer = (resetState = true) => {\n    if (resetState) {\n      setShowCookingModeToast(false);\n      setAskIfStillActive(false);\n    }\n    if (timer != null) {\n      clearTimeout(timer);\n      timer = undefined;\n    }\n  };\n\n  const handleStillActive = useCallback(() => {\n    request()\n      .then(() => {\n        renewTimer();\n      });\n  }, [request, renewTimer]);\n\n  const handleNotActiveAnymore = useCallback((autoClose: boolean) => {\n    if (!autoClose) {\n      cookingModeContext?.setCookingMode(false);\n    }\n  }, [cookingModeContext?.setCookingMode]);\n\n  return (\n    <>\n      <Toast\n          show = {isCookingMode && showCookingModeToast}\n          autoHide = {10000}\n          anchorOrigin = {{ horizontal: 'center', vertical: 'bottom' }}\n          onClose = {() => { setShowCookingModeToast(false); }}>\n        {formatMessage(messages.activated_cooking_mode_toast)}\n      </Toast>\n\n      <Modal\n          show = {askIfStillActive}\n          title = {formatMessage(messages.still_cooking_modal_title)}\n          acceptTitle = {formatMessage(messages.still_cooking_modal_yes)}\n          closeTitle = {formatMessage(messages.still_cooking_modal_no)}\n          onAccept = {handleStillActive}\n          onClose = {handleNotActiveAnymore}>\n        {formatMessage(messages.still_cooking_modal_text)}\n      </Modal>\n    </>\n  );\n};\n\nexport default CookingModeHandler;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router';\n\nimport '../css/recipe.css';\n\nimport Loading from '../../common/components/Loading';\nimport RecipeScheme from '../components/RecipeScheme';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport * as RecipeActions from '../store/RecipeActions';\nimport * as RecipeFormActions from '../../recipe_form/store/actions';\nimport { RootState } from '../../app/Store';\nimport { Recipe } from '../store/RecipeTypes';\nimport { getRoutePath } from '../../common/utility';\nimport useCrash from '../../common/hooks/useCrash';\nimport CookingModeContextProvider from '../context/CookingModeContextProvider';\nimport CookingModeHandler from '../components/CookingModeHandler';\nimport UserRole from '../../common/types/UserRole';\nimport MenuItemModal from '../../menu_plan/components/MenuItemModal';\nimport SaveMenuItemSuccessToast from '../../menu_plan/components/SaveMenuItemSuccessToast';\n\nconst RecipeContainer: React.FC = () => {\n  const dispatch = useDispatch();\n  const nav = useNavigate();\n  const crash = useCrash();\n\n  const userId = useSelector((state: RootState) => state.account.item?.id);\n  const userRole = useSelector((state: RootState) => state.account.item?.role);\n  const recipeState = useSelector((state: RootState) => state.recipe);\n  const recipe      = recipeState.item;\n  const recipeMeta  = recipeState.meta;\n  const prevRecipe  = useRef<Recipe | undefined>();\n\n  const [isDeleting, setIsDeleting] = useState<boolean>(false);\n\n  const handlePreloadRecipe = useCallback(() => {\n    if (recipe == null) { crash('Invalid state: recipe may not be null'); return; }\n    dispatch(RecipeFormActions.preload(recipe));\n  }, [recipe]);\n\n  const deleteRecipe = useCallback(() => {\n    if (recipe == null) { crash('Invalid state: recipe may not be null'); return; }\n    setIsDeleting(true);\n    dispatch(RecipeActions.deleteRecipe(recipe.id, recipe.slug));\n  }, [recipe]);\n\n  // Handle deletion\n  useEffect(() => {\n    if (prevRecipe.current == null) {\n      prevRecipe.current = recipe;\n    } else if (isDeleting && prevRecipe.current != null && recipe == null) {\n      nav(getRoutePath('/browser'));\n    }\n  }, [recipe]);\n\n  const [showItemModal, setShowItemModal] = useState<boolean>(false);\n  const showMenuItemModal = useCallback(() => { setShowItemModal(true); }, []);\n  const closeMenuItemModal = useCallback(() => { setShowItemModal(false); }, []);\n\n  const [showAddMenuItemSuccessToast, setShowAddMenuItemToast] = useState<boolean>(false);\n  const handleAddMenuItemSuccess = useCallback(() => { setShowAddMenuItemToast(true); }, []);\n  const handleCloseAddMenuItemToast = useCallback(() => { setShowAddMenuItemToast(false); }, []);\n\n  if (recipe != null) {\n    return (\n      <CookingModeContextProvider>\n        <RecipeScheme\n            recipe       = {recipe}\n            recipeMeta   = {recipeMeta}\n            userId       = {userId}\n            editable     = {recipe.author === userId || userRole === UserRole.STAFF || userRole === UserRole.ADMIN}\n\n            onEditRecipe = {handlePreloadRecipe}\n            deleteRecipe = {deleteRecipe}\n            onAddToMenuClick = {showMenuItemModal} />\n        <CookingModeHandler />\n\n        <MenuItemModal\n            show={showItemModal}\n            recipe={recipe}\n            recipeReadonly\n            onSaveSuccess={handleAddMenuItemSuccess}\n            onClose={closeMenuItemModal} />\n        <SaveMenuItemSuccessToast\n            show = {showAddMenuItemSuccessToast}\n            created\n            onClose = {handleCloseAddMenuItemToast} />\n      </CookingModeContextProvider>\n    );\n  } else {\n    return (<Loading message='Loading' />);\n  }\n};\n\nexport default RecipeContainer;\n","import { useEffect, useMemo } from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport * as _ from 'lodash-es';\n\nimport { RootState } from '../../app/Store';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport Ratings from '../../rating/containers/Ratings';\nimport PageWrapper from '../../common/components/PageWrapper';\nimport RecipeFooter from '../components/RecipeFooter';\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport { getResourcePath } from '../../common/utility';\nimport * as RecipeActions from '../store/RecipeActions';\nimport RecipeContainer from './RecipeContainer';\n\nconst RecipePage: React.FC = () => {\n  const params = useParams();\n  const nav = useNavigate();\n  const dispatch = useDispatch();\n\n  const recipeState  = useSelector((state: RootState) => state.recipe);\n  const recipeMeta  = recipeState.meta;\n\n  const paramsRecipe = params.recipe;\n  // Load Recipe\n  useEffect(() => {\n    if (paramsRecipe) {\n      dispatch(RecipeActions.load(paramsRecipe));\n    }\n  }, [paramsRecipe]);\n\n  // If recipe not found, redirect to NotFound-Page\n  useEffect(() => {\n    if (_.get(recipeMeta.error, 'status') === 404) {\n      nav(getResourcePath('/NotFound'));\n    }\n  }, [recipeMeta.error]);\n\n  // componentWillUnmount\n  useEffect(() => () => {\n    dispatch(RecipeActions.reset());\n  }, []);\n\n  const ratings = useMemo(() => <Ratings />, [recipeState.item?.id, recipeState.meta.pending]);\n  const footer  = useMemo(() => <RecipeFooter recipe={recipeState.item} />, [recipeState.item?.id, recipeState.item?.author]);\n\n  return (\n    <PageWrapper title={recipeState.item?.title}>\n      <RecipeContainer />\n      {recipeState.meta.pending === PendingState.COMPLETED && ratings}\n      {recipeState.meta.pending === PendingState.COMPLETED && footer}\n    </PageWrapper>\n  );\n};\n\nexport default RecipePage;\n","import request from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { AnyDispatch, toBasicAction } from '../../common/store/redux';\nimport { AutocompleteListItem } from '../../common/components/Input/TextareaAutocomplete';\nimport { handleError, handleFormError } from '../../common/requestUtils';\nimport { Recipe, RecipeDto, toRecipe, toRecipeRequest } from '../../recipe/store/RecipeTypes';\nimport { COURSES_STORE, CUISINES_STORE, SEASONS_STORE, TAGS_STORE } from '../../recipe_groups/store/types';\nimport { getRecipeSuccess } from '../../recipe/store/RecipeActions';\nimport { RecipeFormDispatch, RECIPE_FORM_STORE } from './types';\n\nexport const load = (recipeSlug: string) => (dispatch: RecipeFormDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_FORM_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.recipe}${recipeSlug}/`)\n    .then(res => {\n      const recipe = toRecipe(res.body);\n      dispatch({\n        ...toBasicAction(\n          RECIPE_FORM_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        payload: recipe,\n      });\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      dispatch(getRecipeSuccess(recipe) as any);\n    })\n    .catch(err => dispatch(handleError(err, RECIPE_FORM_STORE)));\n};\n\nexport const preload = (recipe: Partial<Recipe>) => (dispatch: RecipeFormDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_FORM_STORE, ACTION.PRELOAD), payload: recipe });\n};\n\nexport const reset = () => (dispatch: RecipeFormDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_FORM_STORE, ACTION.RESET) });\n};\n\nexport const save = async (dispatch: AnyDispatch, data: Recipe) => {\n  const photo = (typeof data.photo === 'object') ? data.photo : undefined;\n\n  const isNew = !data.id;\n  const r = isNew\n      ? request().post(serverURLs.recipe)\n      : request().patch(`${serverURLs.recipe}${data.slug}/`);\n\n  dispatch({\n    ...toBasicAction(\n      RECIPE_FORM_STORE,\n      isNew ? ACTION.CREATE_START : ACTION.UPDATE_START\n    ),\n  });\n\n  const dto = toRecipeRequest(data);\n  return r.send(dto)\n    .then(res => {\n      if (photo) {\n        return request()\n          .patch(`${serverURLs.recipe}${res.body.slug}/`)\n          .attach('photo', photo)\n          .then(resPhoto => {\n            const recipe = toRecipe(resPhoto.body);\n            dispatch({\n              ...toBasicAction(\n                RECIPE_FORM_STORE,\n                isNew ? ACTION.CREATE_SUCCESS : ACTION.UPDATE_SUCCESS\n              ),\n              oldId: data.id,\n              payload: recipe,\n            });\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            dispatch(getRecipeSuccess(recipe) as any);\n          })\n          .catch(err => handleFormError(dispatch, err, RECIPE_FORM_STORE));\n        } else {\n          const recipe = toRecipe(res.body);\n          dispatch({\n            ...toBasicAction(\n              RECIPE_FORM_STORE,\n              isNew ? ACTION.CREATE_SUCCESS : ACTION.UPDATE_SUCCESS\n            ),\n            oldId: isNew ? (null as any) : data.id, // eslint-disable-line @typescript-eslint/no-explicit-any\n            payload: recipe,\n          });\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          dispatch(getRecipeSuccess(recipe) as any);\n        }\n      // OPT HACK: Move this to recipe_groups\n      dispatch(invalidateCreatableLists(data, toRecipe(res.body)));\n      return null;\n    })\n    .catch(err => handleFormError(dispatch, err, RECIPE_FORM_STORE));\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const invalidateCreatableLists = (oldRecipe: Recipe, savedRecipe: Recipe): any => (dispatch: any) => {\n  if (oldRecipe.course?.id !== savedRecipe.course?.id) {\n    dispatch({ ...toBasicAction(COURSES_STORE, ACTION.RESET) });\n  }\n  if (oldRecipe.cuisine?.id !== savedRecipe.cuisine?.id) {\n    dispatch({ ...toBasicAction(CUISINES_STORE, ACTION.RESET) });\n  }\n  if (oldRecipe.seasons?.map(s => s.id).join('/') !== savedRecipe.seasons?.map(s => s.id).join('/')) {\n    dispatch({ ...toBasicAction(SEASONS_STORE, ACTION.RESET) });\n  }\n  if (oldRecipe.tags?.map(t => t.id).join('/') !== savedRecipe.tags?.map(t => t.id).join('/')) {\n    dispatch({ ...toBasicAction(TAGS_STORE, ACTION.RESET) });\n  }\n};\n\nexport const fetchRecipeList = (searchTerm: string): Promise<Array<AutocompleteListItem>> => request()\n    .get(`${serverURLs.recipe}?fields=id,title,slug&limit=5&search=${searchTerm}`)\n    .then(res => res.body.results.map((recipe: RecipeDto) => ({ key: recipe.slug, name: recipe.slug, char: recipe.title } as AutocompleteListItem)))\n    .catch(() => []);\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["loadMiniBrowse","filter","dispatch","toBasicAction","MINI_BROWSE_STORE","ACTION","GET_START","request","get","serverURLs","mini_browse","then","res","_res$body$results","GET_SUCCESS","payload","body","results","map","toRecipeList","catch","err","handleError","messages","defineMessages","shuffleSuggestionsButton","id","description","defaultMessage","buildUrlFilter","count","filters","searchParams","URLSearchParams","append","toString","_ref","_params$recipe","heading","formatMessage","useIntl","useDispatch","location","useLocation","params","useParams","slug","recipe","miniBrowseItems","useSelector","state","browse","browserMini","items","differentMiniBrowseItems","useMemo","itm","recipeSlug","useEffect","MiniBrowseActions","handleShuffleClick","useCallback","handleOpenRecipe","rec","RecipeActions","length","_jsxs","_Fragment","children","_jsx","Button","variant","onClick","className","tooltip","Icon","icon","ListRecipes","data","onOpenRecipe","permalink_tooltip","forwardRef","ref","linkFor","rest","Link","classNames","to","title","PageScroller","uriFragmentId","src","placeholder","alt","onError","hasError","setError","useState","name","required","format","parse","formatter","parser","isMulti","onChange","onFocus","onBlur","intl","formatValue","value","undefined","Field","validate","requiredValidator","validateFields","fprops","Select","input","errors","formatValidation","meta","error","dirtySinceLastSubmit","submitError","namee","event","height","width","style","paddingTop","position","load","listId","GROCERY_LIST_STORE","list","groceryList","toGroceryList","create","async","item","CREATE_START","post","send","CREATE_SUCCESS","handleFormError","update","UPDATE_START","patch","UPDATE_SUCCESS","remove","DELETE_START","delete","DELETE_SUCCESS","i","quantity","measurement","Boolean","join","bulkAdd","checkedIngredients","ingredientGroups","flatMap","ig","ingredients","checkedSubRecipe","subrecipes","sr","allItems","concat","bulk_list_item","GroceryListActionTypes","BULK_ADD","toGroceryListItem","reset","RESET","pushDirections","groups","directions","unassignedIngredients","igIndex","findIndex","splice","getIngredientsForStep","push","directionsString","directionGroups","isMultiStep","includes","directionsGroups","nextHeading","split","line","trimEnd","forEach","direction","endsWith","substring","untitledStep","find","di","unshift","assignRemainingIngredients","parseDirections","directionsGroupsJsx","formatDirections","_di$heading","directionsJsx","isDefaultGroup","headingSlug","slugify","HeaderLink","IngredientGroups","hasSubrecipes","withHeaderLink","selectable","showCaptions","group","Ingredients","ingredient","formatMeasurement","measurementsContext","measurementString","measurementParserId","optionallyFormatMessage","itemCount","useContext","MeasurementContext","caption","captionSlug","index","_ingredient$id","quantityS","msrmtString","titleString","fullString","renderQuantity","ReCheckbox","label","Table","striped","size","subrecipe","subRecipes","showQuantityCol","subRecipesList","subRecipe","_subRecipe$child_reci","child_recipe_id","getRoutePath","edited_by","edit_button","delete_button","confirm_delete_message","RatingEditor","rating","locale","update_date","Date","getTime","update_username","editorS","editDateS","toLocaleString","tooltipJsx","Tooltip","marginLeft","ariaLabel","RatingTimestamp","_ref2","pub_username","pub_date","RatingCommentComment","_ref3","markup","comment","p","P","RatingToolbar","_ref4","onEdit","onDelete","showDeleteConfirm","setShowDeleteConfirm","handleDeleteClick","handleDeleteClose","handleDeleteAccept","Toolbar","Modal","show","acceptTitle","onAccept","onClose","acceptButtonProps","_ref5","Row","Col","xs","Ratings","stars","edit_rating_title","new_rating_title","rating_label","rating_comment_label","rating_comment_placeholder","submit","addRating","editRating","onSubmitSuccess","onCancel","initialValues","handleSubmit","form","ReduxForm","onSubmit","subscription","render","renderSubmit","Form","edit","ReFormStatus","InitialValuesResetter","alignItems","justifyContent","username","ReInput","rows","maxLength","FormSpy","values","submitting","type","disabled","hash","hashId","replace","editMode","setEditMode","handleEditModeReset","handleEditClick","ratingContainerId","RatingView","RatingForm","isDemoMode","no_comments","_ratings$map","ratings","userId","userRole","pending","removeRating","handleEdit","upd","ratingId","isUserAdmin","UserRole","STAFF","ADMIN","ratingsList","RatingComment","author","PendingState","LOADING","CircularProgress","new_rating_button","commentsCount","showNewRating","onShowNewRating","USER","visibility","_ratings$length","setShowNewRating","handleNewRatingUndisplay","RatingsHeader","RatingComments","account","ratingsState","recipeRating","RATING_STORE","toRating","RATINGS_STORE","RatingsActions","removeRatingCallback","ReduxHelper","transformEntities","ErrorBoundary","verbose","printStack","RatingsWrapper","role","getFilters","course","course__slug","cuisine","cuisine__slug","seasons","season__slug","s","Object","keys","miniBrowseMeta","disableRecipeDiscovery","settings","getEnvAsBoolean","hasConnection","MiniBrowse","ingredients_for_servings","servings","servings_input_tooltip","servings_update_button","_recipe$customServing","_recipe$customServing2","recipeMeta","updateServings","customServings","hasNoIngredients","COMPLETED","min","max","autoComplete","initializeCheckboxes","cbs","cb","initializeInredientGroupsCheckboxes","igs","AddToGroceryListForm","lists","onAddList","submitRef","crash","useCrash","_form$ingredients","addSubrecipes","parseInt","indexOf","addIngredientGroups","igSlug","addIgIngredients","Set","igg","igIngredients","add","Array","from","arr","ListRow","ToggleAllCheckbox","SubRecipes","new_text","new_list_title","addedNewList","setAddedNewList","prevListIds","useRef","handleAddListClick","newListTitle","suffixes","l","startsWith","Number","isNaN","sort","a","b","suffix","current","newList","_prevListIds$current","change","ReSelect","readOnly","setValue","handleChange","_name","newValue","registeredFields","getRegisteredFields","f","cbKey","Checkbox","onSaveSuccess","measurementContext","formatMeasurementCb","GroceryListActions","createList","groceryListsState","groceryLists","GroceryListsActions","bulkAddPending","handleEditSubmit","_submitRef$current","click","_ingredients$flatMap","allIngredients","allSubrecipes","addIngredients","ii","bulkAddData","handleSubmitSuccess","handleModalClose","autoClose","SAVING","add_groceries","add_groceries_success_toast","isAuthenticated","showGroceriesModal","setShowGroceriesModal","handleAddGroceries","handleGroceriesModalClose","showGroceriesSuccessToast","setShowGroceriesSuccessToast","handleAddToGroceryListSuccess","handleCloseAddGroceryListToast","ConditionalWrapper","condition","childr","AddToGroceryListModal","Toast","anchorOrigin","horizontal","vertical","no_ingredients","IngredientsHeader","Loading","IngredientFooter","_recipe$slug","setSearchParams","useSearchParams","handleUpdateServings","String","locationServings","serv","servNumber","parseFloat","IngredientsPanel","ImageViewer","openModal","setOpenModal","handleOpenModal","handleCloseModal","fullscreen","onHide","ImageViewerContent","nextSrc","Children","element","isValidElement","props","nextTitle","lastIndexOf","Header","Title","download","href","ModalHeaderCloseButton","Body","createContext","useWakeLock","onRequest","onRelease","arguments","released","setReleased","wakeLock","isSupported","window","navigator","isWakeLockAlreadyDefined","console","warn","onrelease","e","message","release","isWakeLockUndefined","activate_cooking_mode_tooltip","deactivate_cooking_mode_tooltip","CookingModeButton","_cookingModeContext$c","cookingModeContext","CookingModeContext","isCookingMode","cookingMode","handleClick","setCookingMode","editorMessages","RecipeEditor","marginRight","RecipeTimestamp","toLocaleDateString","edit_tooltip","delete_tooltip","print_tooltip","add_to_menu_tooltip","recipe_comments","prep_time","cooking_time","minutes","source","created_by","last_updated","confirm_delete_title","confirm_delete_accept","_recipe$course","_recipe$cuisine","_recipe$pub_username","_recipe$photoThumbnai","_recipe$rating","editable","onEditRecipe","deleteRecipe","onAddToMenuClick","editLink","NavButton","deleteLink","hostname","match","document","createElement","target","rel","printButton","print","addToMenuButton","optionButtons","chips","prepTime","Chip","color","cookTime","tags","t","photo","xl","lg","WidthHeightRatio","Image","sm","photoThumbnail","info","showCount","no_directions","hasNoData","trim","isMultiDirections","Directions","_recipe$directions","_recipe$ingredientGro","RecipeHeader","IngredientsPanelContainer","DirectionsPanel","setIsCookingMode","updateCookingMode","active","Provider","activated_cooking_mode_toast","still_cooking_modal_title","still_cooking_modal_text","still_cooking_modal_yes","still_cooking_modal_no","CookingModeHandler","timer","showCookingModeToast","setShowCookingModeToast","askIfStillActive","setAskIfStillActive","isPageVisible","usePageVisibility","renewTimer","setTimeout","clearTimer","clearTimeout","handleStillActive","handleNotActiveAnymore","autoHide","closeTitle","RecipeContainer","nav","useNavigate","_state$account$item","_state$account$item2","recipeState","prevRecipe","isDeleting","setIsDeleting","handlePreloadRecipe","RecipeFormActions","showItemModal","setShowItemModal","showMenuItemModal","closeMenuItemModal","showAddMenuItemSuccessToast","setShowAddMenuItemToast","handleAddMenuItemSuccess","handleCloseAddMenuItemToast","CookingModeContextProvider","RecipeScheme","MenuItemModal","recipeReadonly","SaveMenuItemSuccessToast","created","RecipePage","_recipeState$item","_recipeState$item2","_recipeState$item3","_recipeState$item4","paramsRecipe","_","getResourcePath","footer","RecipeFooter","PageWrapper","RECIPE_FORM_STORE","toRecipe","getRecipeSuccess","preload","PRELOAD","save","isNew","r","dto","toRecipeRequest","attach","resPhoto","oldId","invalidateCreatableLists","oldRecipe","savedRecipe","_oldRecipe$course","_savedRecipe$course","_oldRecipe$cuisine","_savedRecipe$cuisine","_oldRecipe$seasons","_savedRecipe$seasons","_oldRecipe$tags","_savedRecipe$tags","COURSES_STORE","CUISINES_STORE","SEASONS_STORE","TAGS_STORE","fetchRecipeList","searchTerm","key","char","React","bsPrefix","bordered","borderless","hover","responsive","decoratedBsPrefix","useBootstrapPrefix","classes","table","responsiveClass"],"sourceRoot":""}