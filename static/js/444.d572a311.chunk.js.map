{"version":3,"file":"static/js/444.d572a311.chunk.js","mappings":"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","sources":["common/components/Loading.tsx","common/components/PageWrapper.tsx","groceryList/containers/GroceryListsContainer.tsx","groceryList/containers/GroceryListsPage.tsx","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import CircularProgress from './CircularProgress';\n\ninterface ILoadingProps {\n  message?: string;\n}\n\nconst Loading = ({ message }: ILoadingProps) => (\n  <div className='spinner'>\n    {message && <h3 className='no-results'>{ message }</h3>}\n    <CircularProgress />\n  </div>\n);\n\nexport default Loading;\n","import { useContext, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useLocation, useNavigate } from 'react-router';\n\nimport { AnyComponent } from '../../types/Types';\nimport DynamicHeightContext from '../context/DynamicHeightContext';\nimport ArrayReducerType from '../store/ArrayReducerType';\nimport ItemReducerType from '../store/ItemReducerType';\nimport { getEnv, getRoutePath } from '../utility';\nimport ErrorBoundary from './ErrorBoundary';\n\n/** {@link PageTitleFixer} Props. */\ninterface IPageWrapperProps {\n  /** Page title. */\n  title?:   string;\n  id?:      string;\n  state?:   ItemReducerType<unknown> | ArrayReducerType<unknown>;\n  /** Page component to render. */\n  children: AnyComponent;\n}\n\n/**\n * Strips slashes etc. of the path.\n *\n * Example:\n * location.pathname = /browse/\n * toCleanLocationPath = browse\n *\n * @param path - location.pathname\n *\n * @return Nice path without gibberish.\n */\nfunction toCleanLocationPath(path: string): string {\n  const pathNoHost      = path.startsWith(getEnv('PUBLIC_URL') ?? '') ? path.substring((getEnv('PUBLIC_URL') ?? '').length) : path;\n  const startsWithSlash = pathNoHost.startsWith('/');\n  const endsWithSlash   = pathNoHost.endsWith('/');\n  const pathNoSlashes   = pathNoHost.substring(startsWithSlash ? 1 : 0, endsWithSlash ? pathNoHost.length - 1 : undefined);\n\n  return pathNoSlashes;\n}\n\n/**\n * HOC to properly set the browser title to assure accessibilty.\n */\n const PageWrapper: React.FC<IPageWrapperProps> = ({ title, id, state, children }: IPageWrapperProps) => {\n  const nav = useNavigate();\n  const location = useLocation();\n  const error = state?.meta.error;\n\n  const dynamicHeightContext = useContext(DynamicHeightContext);\n\n  useEffect(() => {\n    // ARIA: Titles should contain the application name and page title.\n    document.title = (`${title != null && title.length > 0 ? `${title} | ` : ''}OwnRecipes`);\n  }, [title]);\n\n  useEffect(() => {\n    if (error && id == null) {\n      const p = getRoutePath('/NotFound');\n      // console.log(`[PageWrapper] nav to \"${p}\"`);\n      nav(p);\n    }\n  }, [id, error]);\n\n  return (\n    <Container id='main-container' as='main' className={toCleanLocationPath(location.pathname)} style={{ marginTop: `${dynamicHeightContext.toolbarHeight}px` }}>\n      <ErrorBoundary verbose printStack>\n        {children}\n      </ErrorBoundary>\n    </Container>\n  );\n};\n\nexport default PageWrapper;\n","import { useEffect } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport classNames from 'classnames';\nimport { Row } from 'react-bootstrap';\n\nimport '../css/grocery_lists.css';\n\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport * as GroceryListsActions from '../store/GroceryListsActions';\nimport { RootState } from '../../app/Store';\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport Loading from '../../common/components/Loading';\nimport P from '../../common/components/P';\nimport { getRoutePath } from '../../common/utility';\nimport { NEW_ITEM_URL_ID } from '../../common/constants';\nimport Chip from '../../common/components/Chip';\nimport NavLink from '../../header/components/NavLink';\nimport NavButton from '../../common/components/NavButton';\n\nconst messages = defineMessages({\n  my_grocery_lists: {\n    id: 'groceryLists.my_grocery_lists',\n    description: 'My grocery lists heading',\n    defaultMessage: 'My grocery lists',\n  },\n  no_grocery_lists: {\n    id: 'groceryLists.no_grocery_lists',\n    description: 'Info that the user has no grocery list.',\n    defaultMessage: '(You don\\'t have any grocery list, yet.)',\n  },\n});\n\nconst GroceryListsContainer: React.FC = () => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const dispatch = useDispatch();\n\n  const groceryListsState = useSelector((state: RootState) => state.groceryLists);\n  const { items } = groceryListsState;\n  useEffect(() => {\n    dispatch(GroceryListsActions.load());\n  }, []);\n\n  const listsJsx = items?.map(list => (\n    <li key={list.slug}>\n      <NavLink to={getRoutePath(`/grocery-lists/${list.slug}`)} key={list.slug}>\n        {list.title}\n        <Chip color='secondary'>{list.item_count}</Chip>\n      </NavLink>\n    </li>\n  )) ?? [];\n\n  const pending = groceryListsState.meta.pending;\n  const hasNoData = pending === PendingState.COMPLETED\n      && (items == null || items.length === 0);\n\n  return (\n    <>\n      <Row xs={1} className='groceries-header-container'>\n        <h2>{intl.messages['nav.groceryLists'] as string}</h2>\n      </Row>\n      <Row xs={1} className='grocery-list-container'>\n        <div className={classNames('grocery-lists')}>\n          <h3>{formatMessage(messages.my_grocery_lists)}</h3>\n          {pending === PendingState.LOADING && (items == null || items.length === 0) && <Loading />}\n          {hasNoData && (\n            <P className='placeholder'>{formatMessage(messages.no_grocery_lists)}</P>\n          )}\n          <ul>\n            {listsJsx}\n          </ul>\n          <hr />\n          <NavButton id='create-new-grocery-list' variant='outline-primary' to={getRoutePath(`/grocery-lists/${NEW_ITEM_URL_ID}`)}>\n            {intl.messages['nav.grocery_list_create'] as string}\n          </NavButton>\n        </div>\n      </Row>\n    </>\n  );\n};\n\nexport default GroceryListsContainer;\n","import { useIntl } from 'react-intl';\n\nimport PageWrapper from '../../common/components/PageWrapper';\nimport GroceryListsContainer from './GroceryListsContainer';\n\nconst GroceryListsPage: React.FC = () => {\n  const intl = useIntl();\n\n  return (\n    <PageWrapper title={intl.messages['nav.groceryLists'] as string}>\n      <GroceryListsContainer />\n    </PageWrapper>\n  );\n};\n\nexport default GroceryListsPage;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["_ref","message","_jsxs","className","children","_jsx","CircularProgress","toCleanLocationPath","path","_getEnv","_getEnv2","pathNoHost","startsWith","getEnv","substring","length","startsWithSlash","endsWithSlash","endsWith","undefined","title","id","state","nav","useNavigate","location","useLocation","error","meta","dynamicHeightContext","useContext","DynamicHeightContext","useEffect","document","concat","p","getRoutePath","Container","as","pathname","style","marginTop","toolbarHeight","ErrorBoundary","verbose","printStack","messages","defineMessages","my_grocery_lists","description","defaultMessage","no_grocery_lists","GroceryListsContainer","_items$map","intl","useIntl","formatMessage","dispatch","useDispatch","groceryListsState","useSelector","groceryLists","items","GroceryListsActions","listsJsx","map","list","NavLink","to","slug","Chip","color","item_count","pending","hasNoData","PendingState","COMPLETED","_Fragment","Row","xs","classNames","LOADING","Loading","P","NavButton","variant","NEW_ITEM_URL_ID","GroceryListsPage","PageWrapper","React","ref","bsPrefix","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push","displayName"],"sourceRoot":""}