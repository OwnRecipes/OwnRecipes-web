{"version":3,"file":"static/js/630.f0cff2ef.chunk.js","mappings":"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","sources":["common/components/Loading.tsx","common/components/NavButton.tsx","common/components/PageWrapper.tsx","groceryList/containers/GroceryListsContainer.tsx","groceryList/containers/GroceryListsPage.tsx","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import CircularProgress from './CircularProgress';\n\ninterface ILoadingProps {\n  message?: string;\n}\n\nconst Loading = ({ message }: ILoadingProps) => (\n  <div className='spinner'>\n    {message && <h3 className='no-results'>{ message }</h3>}\n    <CircularProgress />\n  </div>\n);\n\nexport default Loading;\n","import { forwardRef } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { CommonProps } from '../types/OverridableComponent';\nimport ConditionalWrapper from './ConditionalWrapper';\nimport Tooltip from './Tooltip';\nimport { IButtonProps } from './Button';\n\nexport interface INavButtonProps extends\n    Omit<IButtonProps, 'type'>,\n    CommonProps {\n  to: string;\n}\n\nconst NavButton = forwardRef<HTMLButtonElement, INavButtonProps>(({\n  id, to,\n  tooltip,\n  children, ...rest }: INavButtonProps, ref) => (\n    <ConditionalWrapper\n        condition = {Boolean(tooltip)}\n        render = {childr => <Tooltip id={`${id}-tooltip`} tooltip={tooltip}>{childr}</Tooltip>}>\n      <Button\n          type = 'button'\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          as = {Link as any}\n          to = {to}\n          aria-label = {tooltip}\n          {...rest}\n          ref = {ref}>\n        {children}\n      </Button>\n    </ConditionalWrapper>\n));\n\nexport default NavButton;\n","import { useContext, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useLocation, useNavigate } from 'react-router';\n\nimport { AnyComponent } from '../../types/Types';\nimport DynamicHeightContext from '../context/DynamicHeightContext';\nimport ArrayReducerType from '../store/ArrayReducerType';\nimport ItemReducerType from '../store/ItemReducerType';\nimport { getEnv, getRoutePath } from '../utility';\nimport ErrorBoundary from './ErrorBoundary';\n\n/** {@link PageTitleFixer} Props. */\ninterface IPageWrapperProps {\n  /** Page title. */\n  title?:   string;\n  id?:      string;\n  state?:   ItemReducerType<unknown> | ArrayReducerType<unknown>;\n  /** Page component to render. */\n  children: AnyComponent;\n}\n\n/**\n * Strips slashes etc. of the path.\n *\n * Example:\n * location.pathname = /browse/\n * toCleanLocationPath = browse\n *\n * @param path - location.pathname\n *\n * @return Nice path without gibberish.\n */\nfunction toCleanLocationPath(path: string): string {\n  const pathNoHost      = path.startsWith(getEnv('PUBLIC_URL') ?? '') ? path.substring((getEnv('PUBLIC_URL') ?? '').length) : path;\n  const startsWithSlash = pathNoHost.startsWith('/');\n  const endsWithSlash   = pathNoHost.endsWith('/');\n  const pathNoSlashes   = pathNoHost.substring(startsWithSlash ? 1 : 0, endsWithSlash ? pathNoHost.length - 1 : undefined);\n\n  return pathNoSlashes;\n}\n\n/**\n * HOC to properly set the browser title to assure accessibilty.\n */\n const PageWrapper: React.FC<IPageWrapperProps> = ({ title, id, state, children }: IPageWrapperProps) => {\n  const nav = useNavigate();\n  const location = useLocation();\n  const error = state?.meta.error;\n\n  const dynamicHeightContext = useContext(DynamicHeightContext);\n\n  useEffect(() => {\n    // ARIA: Titles should contain the application name and page title.\n    document.title = (`${title != null && title.length > 0 ? `${title} | ` : ''}OwnRecipes`);\n  }, [title]);\n\n  useEffect(() => {\n    if (error && id == null) {\n      const p = getRoutePath('/NotFound');\n      // console.log(`[PageWrapper] nav to \"${p}\"`);\n      nav(p);\n    }\n  }, [id, error]);\n\n  return (\n    <Container id='main-container' as='main' className={toCleanLocationPath(location.pathname)} style={{ marginTop: `${dynamicHeightContext.toolbarHeight}px` }}>\n      <ErrorBoundary verbose printStack>\n        {children}\n      </ErrorBoundary>\n    </Container>\n  );\n};\n\nexport default PageWrapper;\n","import { useEffect } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport classNames from 'classnames';\nimport { Row } from 'react-bootstrap';\n\nimport '../css/grocery_lists.css';\n\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport * as GroceryListsActions from '../store/GroceryListsActions';\nimport { RootState } from '../../app/Store';\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport Loading from '../../common/components/Loading';\nimport P from '../../common/components/P';\nimport { getRoutePath } from '../../common/utility';\nimport { NEW_ITEM_URL_ID } from '../../common/constants';\nimport Chip from '../../common/components/Chip';\nimport NavLink from '../../header/components/NavLink';\nimport NavButton from '../../common/components/NavButton';\n\nconst messages = defineMessages({\n  my_grocery_lists: {\n    id: 'groceryLists.my_grocery_lists',\n    description: 'My grocery lists heading',\n    defaultMessage: 'My grocery lists',\n  },\n  no_grocery_lists: {\n    id: 'groceryLists.no_grocery_lists',\n    description: 'Info that the user has no grocery list.',\n    defaultMessage: '(You don\\'t have any grocery list, yet.)',\n  },\n});\n\nconst GroceryListsContainer: React.FC = () => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const dispatch = useDispatch();\n\n  const groceryListsState = useSelector((state: RootState) => state.groceryLists);\n  const { items } = groceryListsState;\n  useEffect(() => {\n    dispatch(GroceryListsActions.load());\n  }, []);\n\n  const listsJsx = items?.map(list => (\n    <li key={list.slug}>\n      <NavLink to={getRoutePath(`/grocery-lists/${list.slug}`)} key={list.slug}>\n        {list.title}\n        <Chip variant='secondary'>{list.item_count}</Chip>\n      </NavLink>\n    </li>\n  )) ?? [];\n\n  const pending = groceryListsState.meta.pending;\n  const hasNoData = pending === PendingState.COMPLETED\n      && (items == null || items.length === 0);\n\n  return (\n    <>\n      <Row xs={1} className='groceries-header-container'>\n        <h2>{intl.messages['nav.groceryLists'] as string}</h2>\n      </Row>\n      <Row xs={1} className='grocery-list-container'>\n        <div className={classNames('grocery-lists')}>\n          <h3>{formatMessage(messages.my_grocery_lists)}</h3>\n          {pending === PendingState.LOADING && (items == null || items.length === 0) && <Loading />}\n          {hasNoData && (\n            <P className='placeholder'>{formatMessage(messages.no_grocery_lists)}</P>\n          )}\n          <ul>\n            {listsJsx}\n          </ul>\n          <hr />\n          <NavButton id='create-new-grocery-list' variant='outline-primary' to={getRoutePath(`/grocery-lists/${NEW_ITEM_URL_ID}`)}>\n            {intl.messages['nav.grocery_list_create'] as string}\n          </NavButton>\n        </div>\n      </Row>\n    </>\n  );\n};\n\nexport default GroceryListsContainer;\n","import { useIntl } from 'react-intl';\n\nimport PageWrapper from '../../common/components/PageWrapper';\nimport GroceryListsContainer from './GroceryListsContainer';\n\nconst GroceryListsPage: React.FC = () => {\n  const intl = useIntl();\n\n  return (\n    <PageWrapper title={intl.messages['nav.groceryLists'] as string}>\n      <GroceryListsContainer />\n    </PageWrapper>\n  );\n};\n\nexport default GroceryListsPage;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["_ref","message","_jsxs","className","children","_jsx","CircularProgress","NavButton","forwardRef","ref","id","to","tooltip","rest","_objectWithoutProperties","_excluded","ConditionalWrapper","condition","Boolean","render","childr","Tooltip","concat","Button","_objectSpread","type","as","Link","toCleanLocationPath","path","_getEnv","_getEnv2","pathNoHost","startsWith","getEnv","substring","length","startsWithSlash","endsWithSlash","endsWith","undefined","title","state","nav","useNavigate","location","useLocation","error","meta","dynamicHeightContext","useContext","DynamicHeightContext","useEffect","document","p","getRoutePath","Container","pathname","style","marginTop","toolbarHeight","ErrorBoundary","verbose","printStack","messages","defineMessages","my_grocery_lists","description","defaultMessage","no_grocery_lists","_items$map","intl","useIntl","formatMessage","dispatch","useDispatch","groceryListsState","useSelector","groceryLists","items","GroceryListsActions","listsJsx","map","list","NavLink","slug","Chip","variant","item_count","pending","hasNoData","PendingState","_Fragment","Row","xs","classNames","Loading","P","NEW_ITEM_URL_ID","PageWrapper","GroceryListsContainer","React","bsPrefix","_ref$as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","displayName"],"sourceRoot":""}