{"version":3,"file":"static/js/503.a8f90b66.chunk.js","mappings":"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","sources":["common/hooks/useSingle.ts","random/constants/DefaultFilters.ts","random/components/SearchReload.tsx","random/components/SearchMenu.tsx","random/components/RandomHeader.tsx","random/containers/RandomPage.tsx","recipe_groups/store/actions.ts"],"sourcesContent":["import { useEffect } from 'react';\n\nexport default function useSingle(getFunction: () => void, obj: unknown) {\n  useEffect(() => {\n    if (obj == null) {\n      getFunction();\n    }\n  }, [getFunction, obj]);\n}\n","const defaultFilters: Record<string, string | number> = {\n  limit: 4,\n};\n\nexport default defaultFilters;\n","import { Button } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport '../../common/css/modal.css';\n\nimport Icon from '../../common/components/Icon';\nimport P from '../../common/components/P';\n\nexport interface ISearchReloadProps {\n  onReloadClick: () => void;\n}\n\nconst messages = defineMessages({\n  search_nothing_found_yet_heading: {\n    id: 'random.reload.heading',\n    description: 'Nothing found?',\n    defaultMessage: 'Not the right one?',\n  },\n  search_nothing_found_yet: {\n    id: 'random.reload.text',\n    description: 'Nothing found? Text',\n    defaultMessage: 'Just give it another try.',\n  },\n  search_reload_button: {\n    id: 'random.reload.button',\n    description: 'Title/tooltip of the icon button to reload to recipes.',\n    defaultMessage: 'Reload recipes',\n  },\n});\n\nconst SearchReload: React.FC<ISearchReloadProps> = ({ onReloadClick }: ISearchReloadProps) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <div className='search-reload reload-container print-hidden'>\n      <div className='search-reload modal-content'>\n        <div className='search-reload-box'>\n          <h2>{formatMessage(messages.search_nothing_found_yet_heading)}</h2>\n          <P>{formatMessage(messages.search_nothing_found_yet)}</P>\n        </div>\n        <div className='search-reload-button-box'>\n          <Button id='reload-random-button' variant='primary' aria-label={formatMessage(messages.search_reload_button)} onClick={onReloadClick}>\n            <Icon icon='arrow-repeat' variant='light' />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchReload;\n","import { useCallback } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Dropdown, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { SearchResult } from '../../browse/store/SearchTypes';\nimport { optionallyFormatMessage } from '../../common/utility';\nimport { Course, Cuisine } from '../../recipe/store/RecipeTypes';\n\nconst messages = defineMessages({\n  filter_by_course: {\n    id: 'random.search.menu.filter_by_course_dropdown',\n    description: 'Filter by main/...',\n    defaultMessage: 'Course: {course}',\n  },\n  filter_by_cuisine: {\n    id: 'random.search.menu.filter_by_cuisine_dropdown',\n    description: 'Filter by indian/...',\n    defaultMessage: 'Cuisine: {cuisine}',\n  },\n  filter_all: {\n    id: 'random.search.menu.filter_all',\n    description: 'Item to not filter at all',\n    defaultMessage: '(All)',\n  },\n});\n\nexport interface ISearchMenuProps {\n  search:   SearchResult | undefined;\n  qs:       Record<string, string>;\n  courses:  Array<Course> | undefined;\n  cuisines: Array<Cuisine> | undefined;\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\nconst SearchMenu: React.FC<ISearchMenuProps> = ({ search, qs, courses, cuisines, buildUrl }: ISearchMenuProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const filterAllText = formatMessage(messages.filter_all);\n\n  const currentCourse = qs.course__slug ?? '';\n  const handleFilterCourseClick = useCallback((event: React.MouseEvent<HTMLAnchorElement>, filterCourse: string) => {\n    if (currentCourse === filterCourse) {\n      event.preventDefault();\n    }\n  }, [currentCourse]);\n  const courseDropdownItems = courses?.map(course => ({ key: course.title, value: optionallyFormatMessage(intl, 'course.', course.title) })).sort((a, b) => a.value.localeCompare(b.value));\n  courseDropdownItems?.unshift({ key: '', value: filterAllText });\n  const courseDropdownItemsJsx = courseDropdownItems?.map(item => (\n    <Dropdown.Item key={item.key} as={Link} to={buildUrl('course__slug', item.key)} active={currentCourse === item.key} onClick={(event: React.MouseEvent<HTMLAnchorElement>) => handleFilterCourseClick(event, item.key)}>\n      {item.value}\n    </Dropdown.Item>\n  ));\n\n  const currentCuisine = qs.cuisine__slug ?? '';\n  const handleFilterCuisineClick = useCallback((event: React.MouseEvent<HTMLAnchorElement>, filterCuisine: string) => {\n    if (currentCuisine === filterCuisine) {\n      event.preventDefault();\n    }\n  }, [currentCuisine]);\n  const cuisineDropdownItems = cuisines?.map(cuisine => ({ key: cuisine.title, value: optionallyFormatMessage(intl, 'cuisine.', cuisine.title) })).sort((a, b) => a.value.localeCompare(b.value));\n  cuisineDropdownItems?.unshift({ key: '', value: filterAllText });\n  const cuisineDropdownItemsJsx = cuisineDropdownItems?.map(item => (\n    <Dropdown.Item key={item.key} as={Link} to={buildUrl('cuisine__slug', item.key)} active={currentCuisine === item.key} onClick={(event: React.MouseEvent<HTMLAnchorElement>) => handleFilterCuisineClick(event, item.key)}>\n      {item.value}\n    </Dropdown.Item>\n  ));\n\n  return (\n    <Row xs={1} xl='auto' className='search-menu'>\n      <Dropdown className='filter-course-dropdown'>\n        <Dropdown.Toggle variant='outline-primary' id='filter-course-button' disabled={search == null}>\n          {formatMessage(messages.filter_by_course, { course: currentCourse ? optionallyFormatMessage(intl, 'course.', currentCourse) : filterAllText })}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {courseDropdownItemsJsx}\n        </Dropdown.Menu>\n      </Dropdown>\n      <Dropdown className='filter-cuisine-dropdown'>\n        <Dropdown.Toggle variant='outline-primary' id='filter-cuisine-button' disabled={search == null}>\n          {formatMessage(messages.filter_by_cuisine, { cuisine: currentCuisine ? optionallyFormatMessage(intl, 'cuisine.', currentCuisine) : filterAllText })}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {cuisineDropdownItemsJsx}\n        </Dropdown.Menu>\n      </Dropdown>\n    </Row>\n  );\n};\n\nexport default SearchMenu;\n","import { Row } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport P from '../../common/components/P';\nimport { SearchResult } from '../../browse/store/SearchTypes';\nimport SearchMenu from './SearchMenu';\nimport { Course, Cuisine } from '../../recipe/store/RecipeTypes';\n\nconst messages = defineMessages({\n  random_heading: {\n    id: 'random.heading',\n    description: 'Heading of the random page.',\n    defaultMessage: 'Random recipe',\n  },\n  random_text: {\n    id: 'random.heading.text',\n    description: 'Some nice text above the random search results.',\n    defaultMessage: 'Looking for an awesome meal? There are plenty waiting for you!',\n  },\n});\n\nexport interface IRandomHeaderProps {\n  search:   Record<string, SearchResult> | undefined;\n  courses:  Array<Course>| undefined;\n  cuisines: Array<Cuisine> | undefined;\n  qs:       Record<string, string>;\n  qsString: string;\n\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\nconst RandomHeader: React.FC<IRandomHeaderProps> = ({\n    search, courses, cuisines, qs, qsString,\n    buildUrl }: IRandomHeaderProps) => {\n  const { formatMessage } = useIntl();\n\n  const qsSearchResult = search?.[qsString];\n\n  return (\n    <Row xs={1} sm={2} className='random-header-container'>\n      <div>\n        <h2>{formatMessage(messages.random_heading)}</h2>\n        <P>{formatMessage(messages.random_text)}</P>\n      </div>\n      <SearchMenu\n          qs       = {qs}\n          search   = {qsSearchResult}\n          courses  = {courses}\n          cuisines = {cuisines}\n          buildUrl = {buildUrl}\n          />\n    </Row>\n  );\n};\n\nexport default RandomHeader;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSearchParams } from 'react-router-dom';\n\nimport '../css/random.css';\n\nimport * as RecipeActions from '../../recipe/store/RecipeActions';\nimport * as SearchActions from '../../browse/store/SearchActions';\nimport * as RecipeGroupActions from '../../recipe_groups/store/actions';\n\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport DefaultFilters from '../constants/DefaultFilters';\nimport PageWrapper from '../../common/components/PageWrapper';\nimport { RootState } from '../../app/Store';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport { buildSearchUrl, mergeDefaultFilters } from '../../browse/containers/BrowsePage';\nimport SearchReload from '../components/SearchReload';\nimport RandomHeader from '../components/RandomHeader';\nimport useSingle from '../../common/hooks/useSingle';\nimport SearchResults from '../../browse/containers/SearchResults';\nimport { objToSearchString } from '../../common/utility';\n\nconst RandomPage: React.FC = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const [searchParams] = useSearchParams();\n\n  const search   = useSelector((state: RootState) => state.browse.browserSearch.items);\n\n  const qs = useMemo(() => Object.fromEntries(searchParams), [searchParams]);\n  const qsMergedDefaults = useMemo(() => mergeDefaultFilters(DefaultFilters, qs), [DefaultFilters, qs]);\n  const qsMergedString = useMemo(() => objToSearchString(qsMergedDefaults), [qsMergedDefaults]);\n\n  const fetchCourses = useCallback(() => { dispatch(RecipeGroupActions.fetchCourses()); }, [dispatch, RecipeGroupActions]);\n  const courses  = useSelector((state: RootState) => state.recipeGroups.courses.items);\n  useSingle(fetchCourses, courses);\n\n  const fetchCuisines = useCallback(() => { dispatch(RecipeGroupActions.fetchCuisines()); }, [dispatch, RecipeGroupActions]);\n  const cuisines  = useSelector((state: RootState) => state.recipeGroups.cuisines.items);\n  useSingle(fetchCuisines, cuisines);\n\n  const reloadData = useCallback(() => {\n    dispatch(SearchActions.loadRandomRecipes(qsMergedDefaults));\n  }, [dispatch, qsMergedDefaults]);\n\n  useEffect(() => {\n    reloadData();\n  }, [searchParams]);\n\n  const handleBuildUrl = useCallback((name: string, value: string, multiSelect = false) => (\n    buildSearchUrl('random', qs, name, value, multiSelect)\n  ), [buildSearchUrl, qs]);\n\n  const handleOpenRecipe = useCallback((rec: RecipeList) => {\n    dispatch(RecipeActions.preload(rec));\n  }, [dispatch]);\n\n  return (\n    <PageWrapper title={intl.messages['nav.recipes'] as string}>\n      <RandomHeader\n          search   = {search}\n          courses  = {courses}\n          cuisines = {cuisines}\n          qs       = {qs}\n          qsString = {qsMergedString}\n          buildUrl = {handleBuildUrl}\n          />\n      <SearchResults\n          qs       = {qs}\n          qsString = {qsMergedString}\n          buildUrl = {handleBuildUrl}\n          onOpenRecipe = {handleOpenRecipe}\n          />\n      <SearchReload onReloadClick={reloadData} />\n    </PageWrapper>\n  );\n};\n\nexport default RandomPage;\n","import { handleError, request } from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { CourseDto, toCourse, CuisineDto, toCuisine, toTag } from '../../recipe/store/RecipeTypes';\nimport { COURSES_STORE, CUISINES_STORE, RecipeGroupsDispatch, TAGS_STORE } from './types';\nimport { toBasicAction } from '../../common/store/redux';\n\nexport const fetchCourses = () => (dispatch: RecipeGroupsDispatch) => {\n  dispatch({ ...toBasicAction(COURSES_STORE, ACTION.GET_START) });\n\n  request()\n    .get(serverURLs.course)\n    .then(res => {\n      dispatch({\n        ...toBasicAction(\n          COURSES_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        payload: res.body.results\n            .filter((courseDto: CourseDto) => courseDto.title !== '-')\n            .map(toCourse),\n      });\n    })\n    .catch(err => dispatch(handleError(err, COURSES_STORE)));\n};\n\nexport const fetchCuisines = () => (dispatch: RecipeGroupsDispatch) => {\n  dispatch({ ...toBasicAction(CUISINES_STORE, ACTION.GET_START) });\n\n  request()\n    .get(serverURLs.cuisine)\n    .then(res => {\n      dispatch({\n        ...toBasicAction(\n          CUISINES_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        payload: res.body.results\n            .filter((cuisineDto: CuisineDto) => cuisineDto.title !== '-')\n            .map(toCuisine),\n      });\n    })\n    .catch(err => dispatch(handleError(err, CUISINES_STORE)));\n};\n\nexport const fetchTags = () => (dispatch: RecipeGroupsDispatch) => {\n  dispatch({ ...toBasicAction(TAGS_STORE, ACTION.GET_START) });\n\n  request()\n    .get(serverURLs.tag)\n    .then(res => {\n      dispatch({\n        ...toBasicAction(\n          TAGS_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        payload: res.body.results.map(toTag),\n      });\n    })\n    .catch(err => dispatch(handleError(err, TAGS_STORE)));\n};\n"],"names":["useSingle","getFunction","obj","useEffect","limit","messages","defineMessages","search_nothing_found_yet_heading","id","description","defaultMessage","search_nothing_found_yet","search_reload_button","_ref","onReloadClick","formatMessage","useIntl","_jsx","className","children","_jsxs","P","Button","variant","onClick","Icon","icon","filter_by_course","filter_by_cuisine","filter_all","_qs$course__slug","_qs$cuisine__slug","search","qs","courses","cuisines","buildUrl","intl","filterAllText","currentCourse","course__slug","handleFilterCourseClick","useCallback","event","filterCourse","preventDefault","courseDropdownItems","map","course","key","title","value","optionallyFormatMessage","sort","a","b","localeCompare","unshift","courseDropdownItemsJsx","item","Dropdown","as","Link","to","active","currentCuisine","cuisine__slug","handleFilterCuisineClick","filterCuisine","cuisineDropdownItems","cuisine","cuisineDropdownItemsJsx","Row","xs","xl","disabled","random_heading","random_text","qsString","qsSearchResult","sm","SearchMenu","dispatch","useDispatch","_useSearchParams","useSearchParams","searchParams","_slicedToArray","useSelector","state","browse","browserSearch","items","useMemo","Object","fromEntries","qsMergedDefaults","mergeDefaultFilters","DefaultFilters","qsMergedString","objToSearchString","fetchCourses","RecipeGroupActions","recipeGroups","fetchCuisines","reloadData","SearchActions","handleBuildUrl","name","multiSelect","arguments","length","undefined","buildSearchUrl","handleOpenRecipe","rec","RecipeActions","PageWrapper","RandomHeader","SearchResults","onOpenRecipe","SearchReload","_objectSpread","toBasicAction","COURSES_STORE","ACTION","request","get","serverURLs","then","res","payload","body","results","filter","courseDto","toCourse","catch","err","handleError","CUISINES_STORE","cuisineDto","toCuisine","fetchTags","TAGS_STORE","toTag"],"sourceRoot":""}