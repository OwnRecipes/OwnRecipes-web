{"version":3,"file":"static/js/942.0f59da23.chunk.js","mappings":"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","sources":["common/components/Button.tsx","common/components/PageWrapper.tsx","common/hooks/useBlocker.ts","common/components/NavigationPrompt.tsx","common/components/FormStatus.tsx","common/components/ReInput/ReFormStatus.tsx","common/components/Toast.tsx","groceryList/store/GroceryListItemsActions.ts","groceryList/components/GroceryListFooter.tsx","groceryList/components/GroceryListSummary.tsx","groceryList/components/GroceryListHeader.tsx","groceryList/components/GroceryListNewItem.tsx","groceryList/components/GroceryListItem.tsx","groceryList/components/GroceryListItems.tsx","groceryList/components/GroceryList.tsx","groceryList/containers/GroceryListContainer.tsx","groceryList/store/GroceryListItemActions.ts","groceryList/containers/GroceryListPage.tsx","groceryList/store/GroceryListActions.ts","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/ToastFade.js","../node_modules/react-bootstrap/esm/ToastContext.js","../node_modules/react-bootstrap/esm/ToastHeader.js","../node_modules/react-bootstrap/esm/ToastBody.js","../node_modules/react-bootstrap/esm/Toast.js"],"sourcesContent":["import { forwardRef } from 'react';\nimport { Button as BootstrapButton } from 'react-bootstrap';\nimport { Placement } from 'react-bootstrap/esm/types';\n\nimport '../css/button.css';\n\nimport { CommonProps } from '../types/OverridableComponent';\nimport ConditionalWrapper from './ConditionalWrapper';\nimport Tooltip from './Tooltip';\n\nexport interface IButtonProps extends CommonProps {\n  id:         string;\n  type?:      'button' | 'reset' | 'submit';\n  variant?:   'primary' | 'secondary' | 'danger' | 'outline-primary' | 'outline-secondary' | 'outline-danger' | 'transparent';\n  size?:      'sm' | 'lg';\n  disabled?:  boolean;\n  onClick?:   (event: React.MouseEvent<HTMLButtonElement>) => void;\n\n  tooltip?:   string;\n  tooltipPlacement?: Placement;\n\n  children:   React.ReactNode;\n}\n\nconst Button = forwardRef<HTMLButtonElement, IButtonProps>(({\n  id,\n  tooltip, tooltipPlacement,\n  children, ...rest }: IButtonProps, ref) => (\n    <ConditionalWrapper\n        condition = {Boolean(tooltip)}\n        render = {childr => <Tooltip id={`${id}-tooltip`} tooltip={tooltip} placement={tooltipPlacement}>{childr}</Tooltip>}>\n      <BootstrapButton id={id} aria-label={tooltip || undefined} aria-describedby={undefined} {...rest} ref={ref}>\n        {children}\n      </BootstrapButton>\n    </ConditionalWrapper>\n));\n\nexport default Button;\n","import { useContext, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useLocation, useNavigate } from 'react-router';\nimport classNames from 'classnames';\n\nimport { AnyComponent } from '../../types/Types';\nimport DynamicHeightContext from '../context/DynamicHeightContext';\nimport ArrayReducerType from '../store/ArrayReducerType';\nimport ItemReducerType from '../store/ItemReducerType';\nimport { getEnv, getRoutePath } from '../utility';\nimport ErrorBoundary from './ErrorBoundary';\n\n/** {@link PageTitleFixer} Props. */\ninterface IPageWrapperProps {\n  /** Page title. */\n  title?:   string;\n  id?:      string;\n  state?:   ItemReducerType<unknown> | ArrayReducerType<unknown>;\n  className?: string;\n  /** Page component to render. */\n  children: AnyComponent;\n}\n\n/**\n * Strips slashes etc. of the path.\n *\n * Example:\n * location.pathname = /browse/\n * toCleanLocationPath = browse\n *\n * @param path - location.pathname\n *\n * @return Nice path without gibberish.\n */\nfunction toCleanLocationPath(path: string): string {\n  const pathNoHost      = path.startsWith(getEnv('PUBLIC_URL') ?? '') ? path.substring((getEnv('PUBLIC_URL') ?? '').length) : path;\n  const startsWithSlash = pathNoHost.startsWith('/');\n  const endsWithSlash   = pathNoHost.endsWith('/');\n  const pathNoSlashes   = pathNoHost.substring(startsWithSlash ? 1 : 0, endsWithSlash ? pathNoHost.length - 1 : undefined);\n\n  return pathNoSlashes;\n}\n\n/**\n * HOC to properly set the browser title to assure accessibilty.\n */\n const PageWrapper: React.FC<IPageWrapperProps> = ({ title, id, state, className, children }: IPageWrapperProps) => {\n  const nav = useNavigate();\n  const location = useLocation();\n  const error = state?.meta.error;\n\n  const dynamicHeightContext = useContext(DynamicHeightContext);\n\n  useEffect(() => {\n    // ARIA: Titles should contain the application name and page title.\n    document.title = (`${title != null && title.length > 0 ? `${title} | ` : ''}OwnRecipes`);\n  }, [title]);\n\n  useEffect(() => {\n    if (error && id == null) {\n      const p = getRoutePath('/NotFound');\n      // console.log(`[PageWrapper] nav to \"${p}\"`);\n      nav(p);\n    }\n  }, [id, error]);\n\n  return (\n    <Container id='main-container' as='main' className={classNames(toCleanLocationPath(location.pathname), className)} style={{ marginTop: `${dynamicHeightContext.toolbarHeight}px` }}>\n      <ErrorBoundary verbose printStack>\n        {children}\n      </ErrorBoundary>\n    </Container>\n  );\n};\n\nexport default PageWrapper;\n","import { History, Transition } from 'history';\nimport { useCallback, useContext, useEffect } from 'react';\nimport { UNSAFE_NavigationContext as NavigationContext } from 'react-router-dom';\n\ntype ExtendNavigator = Navigator & Pick<History, 'block'>;\n\nexport function useBlocker(blocker: (tx: Transition) => void, when = true) {\n  const { navigator } = useContext(NavigationContext);\n\n  useEffect(() => {\n    if (!when) return;\n\n    const unblock = (navigator as unknown as ExtendNavigator).block(tx => {\n      const autoUnblockingTx = {\n        ...tx,\n        retry() {\n          unblock();\n          tx.retry();\n        },\n      };\n\n      blocker(autoUnblockingTx);\n    });\n\n    // eslint-disable-next-line consistent-return\n    return unblock;\n  }, [navigator, blocker, when]);\n}\n\nexport default function usePrompt(message: string, when = true) {\n  const blocker = useCallback((tx: Transition) => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm(message)) tx.retry();\n  }, [message]);\n\n  useBlocker(blocker, when);\n}\n","import { useMemo } from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { Beforeunload } from 'react-beforeunload';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport useBlocker from '../hooks/useBlocker';\n\nconst messages = defineMessages({\n  navigation_warning: {\n    id: 'navigationprompt.warning',\n    description: 'Prompt displayed when navigating on a dirty page (unsaved changes).',\n    defaultMessage: 'You have unsaved changed. If you continue, those change may be lost.',\n  },\n});\n\ninterface INavigationPromptProps {\n  isDirty?: boolean | undefined;\n}\n\nconst NavigationPrompt: React.FC<INavigationPromptProps> = ({ isDirty }: INavigationPromptProps) => {\n  const { formatMessage } = useIntl();\n\n  const promptMsg = useMemo(() => formatMessage(messages.navigation_warning), [formatMessage]);\n\n  const dirtyBlocker = useBlocker(promptMsg, isDirty);\n\n  return (\n    <>\n      {isDirty && (\n        <Beforeunload onBeforeunload={() => promptMsg} />\n      )}\n\n      {dirtyBlocker}\n    </>\n  );\n};\n\nexport default NavigationPrompt;\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport * as _ from 'lodash-es';\n\nimport '../css/form_errors.css';\n\nimport { formatValidation, ValidationError } from '../store/Validation';\nimport Alert from './Alert';\nimport NavigationPrompt from './NavigationPrompt';\nimport P from './P';\nimport Toast from './Toast';\n\nconst messages = defineMessages({\n  form_errors_title: {\n    id: 'status.form_errors_title',\n    description: 'Title for the form error box.',\n    defaultMessage: 'The form contains an error.',\n  },\n  form_errors_alert: {\n    id: 'status.form_errors_alert',\n    description: 'Alert text for the form error box.',\n    defaultMessage: 'Please fix the described error(s) and continue.',\n  },\n  form_errors_table_heading_error: {\n    id: 'status.form_errors_table_heading_error',\n    description: 'The form-errors will be displayed as table, with an error column. This is the column\\'s title.',\n    defaultMessage: 'Error',\n  },\n  form_errors_table_heading_message: {\n    id: 'status.form_errors_table_heading_message',\n    description: 'The form-errors will be displayed as table, with a message column. This is the column\\'s title.',\n    defaultMessage: 'Message',\n  },\n\n  save_success: {\n    id: 'status.save_success',\n    description: 'Toast for successfully saved form.',\n    defaultMessage: 'Changes saved.',\n  },\n});\n\nfunction joinSentences(msgs: Array<string>, separator = '\\n', defLineEnding = '.'): string {\n  const msgsWithLineEnding = msgs.map(s => s.trim()).map(s => ((s.endsWith('.') || s.endsWith('!') || s.endsWith('?')) ? s : `${s}${defLineEnding}`));\n\n  return msgsWithLineEnding.join(separator);\n}\n\ninterface IFormStatusProps {\n  dirty: boolean;\n  submitting: boolean;\n  errors: Record<string, ValidationError> | undefined;\n\n  onSubmitSuccess?: () => void;\n}\n\nconst FormStatus: React.FC<IFormStatusProps> = ({\n    // eslint-disable-next-line arrow-body-style\n    dirty, submitting, errors, onSubmitSuccess }: IFormStatusProps) => {\n  // console.log(`[FormStatus] dirty=${dirty}, submitting=${submitting}, errors=${JSON.stringify(errors)}`);\n  return (\n    <>\n      <NavigationPrompt isDirty={dirty} />\n      <FormErrors errors={errors} />\n      <SubmitSuccess dirty={dirty} submitting={submitting} onSubmitSuccess={onSubmitSuccess} errors={errors} />\n    </>\n  );\n};\n\ninterface IFormErrorRowErrorProps {\n  name: string;\n  err: ValidationError;\n}\n\nconst FormErrorRowError: React.FC<IFormErrorRowErrorProps> = ({ name, err }: IFormErrorRowErrorProps) => {\n  const intl = useIntl();\n\n  const label = document.querySelector(`[data-api-field=\"${name}\"] > label`)?.textContent ?? name;\n\n  const errMsgs: Array<string> = _.castArray(err).map(errr => formatValidation(intl, errr) || errr.message);\n\n  return (\n    <tr>\n      <td>{label}</td>\n      <td>{joinSentences(errMsgs)}</td>\n    </tr>\n  );\n};\n\nfunction getVisibleErrors(errors: Record<string, ValidationError>): Record<string, ValidationError> {\n  const visibleErrorsArray = Object.entries(errors).filter(([key]) => !key.startsWith('_'));\n  return Object.fromEntries(visibleErrorsArray);\n}\n\ninterface IFormErrorsProps {\n  errors: Record<string, ValidationError> | undefined;\n}\n\nconst FormErrors: React.FC<IFormErrorsProps> = ({ errors }: IFormErrorsProps) => {\n  const { formatMessage } = useIntl();\n\n  const visibleErrors = useMemo(() => (\n    errors != null ? getVisibleErrors(errors) : undefined\n  ), [errors]);\n\n  const errorTableRowsJsx = useMemo(() => {\n    if (visibleErrors == null || Object.keys(visibleErrors).length === 0) return [];\n    const res: Array<React.ReactNode> = [];\n    Object.keys(visibleErrors).forEach(key => {\n      const nextErr = visibleErrors[key];\n      res.push(<FormErrorRowError key={key} name={key} err={nextErr} />);\n    });\n    return res;\n  }, [visibleErrors]);\n\n  if (visibleErrors == null || Object.keys(visibleErrors).length === 0) return null;\n\n  // console.log(`[FormErrors] ${JSON.stringify(visibleErrors)}`);\n\n  const errorTableJsx = (\n    <table>\n      <thead>\n        <tr>\n          <th>{formatMessage(messages.form_errors_table_heading_error)}</th>\n          <th>{formatMessage(messages.form_errors_table_heading_message)}</th>\n        </tr>\n      </thead>\n      <tbody>\n        {errorTableRowsJsx}\n      </tbody>\n    </table>\n  );\n\n  return (\n    <Alert\n        severity = 'danger'\n        className = 'form-errors'\n        title = {formatMessage(messages.form_errors_title)}>\n      {errorTableJsx}\n      <P className='alert-post-message'>{formatMessage(messages.form_errors_alert)}</P>\n    </Alert>\n  );\n};\n\ninterface ISubmitSuccessProps {\n  dirty: boolean;\n  submitting: boolean;\n  errors: Record<string, ValidationError> | undefined;\n\n  onSubmitSuccess?: () => void;\n}\n\nconst SubmitSuccess: React.FC<ISubmitSuccessProps> = ({ dirty, submitting, errors, onSubmitSuccess }: ISubmitSuccessProps) => {\n  const { formatMessage } = useIntl();\n\n  const prevSubmitting = useRef<boolean>(false);\n  const [showSaveSuccess, setShowSaveSuccess] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (prevSubmitting.current === true && submitting === false && errors == null) {\n      setShowSaveSuccess(true);\n      onSubmitSuccess?.();\n    }\n\n    prevSubmitting.current = submitting;\n  }, [submitting]);\n\n  useEffect(() => {\n    if (dirty && showSaveSuccess) {\n      setShowSaveSuccess(false);\n    }\n  }, [dirty]);\n\n  const handleCloseSaveSuccessToast = useCallback(() => {\n    setShowSaveSuccess(false);\n  }, []);\n\n  return (\n    <Toast\n        show = {showSaveSuccess}\n        variant = 'success'\n        anchorOrigin={{ horizontal: 'center', vertical: 'bottom' }}\n        onClose = {handleCloseSaveSuccessToast}>\n      {formatMessage(messages.save_success)}\n    </Toast>\n  );\n};\n\nexport default FormStatus;\n","import { FormSpy } from 'react-final-form';\nimport { ValidationError } from '../../store/Validation';\nimport FormStatus from '../FormStatus';\n\nexport interface IReFormStatusProps {\n  onSubmitSuccess?: () => void;\n}\n\nconst ReFormStatus: React.FC<IReFormStatusProps> = ({\n  onSubmitSuccess }: IReFormStatusProps) => (\n    <FormSpy subscription={{ dirty: true, submitting: true, submitErrors: true }}>\n      {({ dirty, submitting, submitErrors }) => (\n        <FormStatus\n            dirty = {dirty}\n            submitting = {submitting}\n            errors = {submitErrors as Record<string, ValidationError>}\n            onSubmitSuccess = {onSubmitSuccess} />\n      )}\n    </FormSpy>\n);\n\nexport default ReFormStatus;\n","import { forwardRef } from 'react';\nimport { Toast as ReactBootstrapToast } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport '../css/toast.css';\n\nimport { CommonProps } from '../types/OverridableComponent';\nimport Icon from './Icon';\n\nexport interface AnchorOriginPosition {\n  horizontal: 'center' | 'left' | 'right';\n  vertical: 'bottom' | 'top';\n}\n\nexport interface IToastProps extends CommonProps {\n  show: boolean;\n  autoHide?: number;\n\n  variant?: 'success';\n  anchorOrigin?: AnchorOriginPosition;\n\n  onClose?: () => void;\n\n  children: React.ReactNode;\n}\n\nfunction capitalize(str: string): string {\n  if (str.length === 0) {\n    return '';\n  } else if (str.length === 1) {\n    return str.toUpperCase();\n  } else {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n}\n\nconst Toast = forwardRef<HTMLDivElement, IToastProps>(({\n    show, autoHide = 6000, variant, anchorOrigin, onClose, children,\n    className, ...rest }: IToastProps, ref) => {\n  const anchorString = anchorOrigin != null ? `Toast-anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}` : undefined;\n\n  return (\n    <ReactBootstrapToast\n        show      = {show}\n        delay     = {autoHide}\n        autohide  = {autoHide > 0}\n        className = {classNames('simple-toast', className, anchorString, {\n          success: variant === 'success',\n        })}\n        onClose   = {onClose}\n        {...rest}\n        ref = {ref}>\n      <ReactBootstrapToast.Header closeButton={onClose != null}>\n        <>\n          {variant === 'success' && <div className='toast-icon'><Icon icon='check' variant='light' size='2x' /></div>}\n          <span className='toast-title'>{children}</span>\n        </>\n      </ReactBootstrapToast.Header>\n    </ReactBootstrapToast>\n  );\n});\n\nexport default Toast;\n","import request from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { toBasicAction } from '../../common/store/redux';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { handleError, handleFormError } from '../../common/requestUtils';\nimport { GroceryListItemsActionTypes, GroceryListItemsDispatch, GROCERY_LIST_ITEMS_STORE } from './GroceryListItemsTypes';\nimport { GroceryListItem, GroceryListItemDto, toGroceryListItem } from './GroceryListItemTypes';\n\nexport const load = (listId: number) => (dispatch: GroceryListItemsDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEMS_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.list_item}?list=${listId}`)\n    .then(res => {\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_ITEMS_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        payload: res.body.results.map((i: GroceryListItemDto) => toGroceryListItem(listId, i)),\n      });\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_ITEMS_STORE)));\n};\n\nexport const toggleItems = (listId: number, items: Array<GroceryListItem>, checked: boolean) => (dispatch: GroceryListItemsDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEMS_STORE, ACTION.GET_START) });\n\n  const ids = items.filter(i => i.completed !== checked).map(i => ({ id: i.id, completed: checked }));\n\n  request()\n    .patch(serverURLs.bulk_list_item)\n    .send(ids)\n    .then(() => {\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_ITEMS_STORE,\n          GroceryListItemsActionTypes.TOGGLE_ITEMS\n        ),\n        payload: ids,\n      });\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_ITEMS_STORE)));\n};\n\nexport const clearCompleted = async (dispatch: GroceryListItemsDispatch, listId: number, items: Array<GroceryListItem>) => {\n  const ids = items.filter(i => i.completed).map(i => i.id);\n\n  return request()\n    .delete(serverURLs.bulk_list_item)\n    .send(ids)\n    .then(() => {\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_ITEMS_STORE,\n          GroceryListItemsActionTypes.DELETE_COMPLETED_ITEMS\n        ),\n        payload: {\n          listId: listId,\n          ids: ids,\n        },\n      });\n    })\n    .catch(err => handleFormError(dispatch, err, GROCERY_LIST_ITEMS_STORE));\n};\n\nexport const reset = () => (dispatch: GroceryListItemsDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEMS_STORE, ACTION.RESET) });\n};\n","import { useCallback, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/grocery_list_footer.css';\n\nimport { GroceryList } from '../store/GroceryListTypes';\nimport { GroceryListItem } from '../store/GroceryListItemTypes';\nimport { isDemoMode } from '../../common/utility';\nimport Button from '../../common/components/Button';\nimport Icon from '../../common/components/Icon';\nimport Toast from '../../common/components/Toast';\n\nconst messages = defineMessages({\n  clear_completed_tooltip: {\n    id: 'grocery_list.footer.clear_completed_tooltip',\n    defaultMessage: 'Clear completed',\n  },\n  copy_to_clipboard_tooltip: {\n    id: 'grocery_list.footer.copy_to_clipboard_tooltip',\n    defaultMessage: 'Copy to clipboard',\n  },\n  copy_to_clipboard_toast: {\n    id: 'grocery_list.footer.copy_to_clipboard_toast',\n    defaultMessage: 'Copied to clipboard.',\n  },\n});\n\nexport interface IGroceryListFooterProps {\n  list: GroceryList | undefined;\n  isNew: boolean;\n  items: Array<GroceryListItem> | undefined;\n  onClearCompleted: () => void;\n  isClearPending: boolean;\n  onCopyToClipboard: () => void;\n}\n\nconst GroceryListFooter: React.FC<IGroceryListFooterProps> = ({\n    list, isNew, items, onClearCompleted, isClearPending, onCopyToClipboard }: IGroceryListFooterProps) => {\n  const { formatMessage } = useIntl();\n\n  const [showCopyToast, setShowCopyToast] = useState<boolean>(false);\n\n  const handleCopyToClipboard = useCallback(() => {\n    onCopyToClipboard();\n    setTimeout(() => {\n      setShowCopyToast(true);\n    }, 0);\n  }, [onCopyToClipboard]);\n  const handleCloseCopyToast = useCallback(() => { setShowCopyToast(false); }, []);\n\n  if (!list || isNew) return null;\n\n  const hasCheckedItem = items?.find(i => i.completed) != null;\n\n  return (\n    <div className='grocery-list-footer print-hidden'>\n      {items != null && items.length > 0 && (\n        <>\n          <Button\n              id = 'clear-completed'\n              variant  = 'primary'\n              type     = 'button'\n              disabled = {isDemoMode() || !hasCheckedItem || isClearPending}\n              className = 'check'\n              onClick = {onClearCompleted}\n\n              tooltip = {formatMessage(messages.clear_completed_tooltip)}>\n            <Icon icon='check' variant='light' size='2x' />\n          </Button>\n          <Button\n              id = 'copy-to-clipboard'\n              variant  = 'outline-primary'\n              type     = 'button'\n              onClick = {handleCopyToClipboard}\n\n              tooltip={formatMessage(messages.copy_to_clipboard_tooltip)}>\n            <Icon icon='clipboard' />\n          </Button>\n        </>\n      )}\n      <Toast\n          show = {showCopyToast}\n          variant = 'success'\n          anchorOrigin = {{ horizontal: 'center', vertical: 'bottom' }}\n          onClose = {handleCloseCopyToast}>\n        {formatMessage(messages.copy_to_clipboard_toast)}\n      </Toast>\n    </div>\n  );\n};\n\nexport default GroceryListFooter;\n","import { useCallback } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Dropdown } from 'react-bootstrap';\n\nimport P from '../../common/components/P';\nimport { optionallyFormatMessage } from '../../common/utility';\nimport { GroceryList } from '../store/GroceryListTypes';\nimport { GroceryListItem } from '../store/GroceryListItemTypes';\nimport { GROCERY_LIST_FILTER } from '../containers/GroceryListContainer';\n\nconst messages = defineMessages({\n  groceryList_items_summary_empty: {\n    id: 'groceryList.items_summary_empty',\n    description: 'Summary for grocery list with no items.',\n    defaultMessage: 'Empty list',\n  },\n  groceryList_items_summary_completed: {\n    id: 'groceryList.items_summary_completed',\n    description: 'Number of items, all done.',\n    defaultMessage: '{sum, plural, one {# item} other {# items}}, all done 😀',\n  },\n  groceryList_items_summary_incompleted: {\n    id: 'groceryList.items_summary_incompleted',\n    description: 'Number of items, with not completed sum.',\n    defaultMessage: '{sum, plural, one {# item} other {# items}}, {sum_not_completed} not completed',\n  },\n  groceryList_filter_by: {\n    id: 'groceryList.filter_by',\n    description: 'Filter items',\n    defaultMessage: 'Show items: {filter}',\n  },\n\n  filter_off: {\n    id: 'groceryList.filter_items.ALL',\n    defaultMessage: 'All',\n  },\n  filter_active: {\n    id: 'groceryList.filter_items.ACTIVE',\n    defaultMessage: 'Not completed',\n  },\n  filter_completed: {\n    id: 'groceryList.filter_items.COMPLETED',\n    defaultMessage: 'Completed',\n  },\n});\n\nexport interface IGroceryListSummaryProps {\n  list: GroceryList | undefined;\n  items: Array<GroceryListItem> | undefined;\n  filter: GROCERY_LIST_FILTER;\n  onChangeFilter: (newFilter: GROCERY_LIST_FILTER) => void;\n}\n\nconst GroceryListSummary: React.FC<IGroceryListSummaryProps> = ({\n    list, items, filter, onChangeFilter }: IGroceryListSummaryProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const itemsCount = items?.length ?? 0;\n  const completedCount = items?.filter(i => i.completed).length ?? 0;\n  const incompletedCount = items?.filter(i => !i.completed).length ?? 0;\n\n  const handleFilterByClick = useCallback((event: React.MouseEvent<HTMLAnchorElement>, newFilter: GROCERY_LIST_FILTER) => {\n    if (filter === newFilter) {\n      event.preventDefault();\n    } else {\n      onChangeFilter(newFilter);\n    }\n  }, [filter, onChangeFilter]);\n\n  const dropdownItems = Object.values(GROCERY_LIST_FILTER).map(f => (\n    <Dropdown.Item key={f} active={filter === f} onClick={(event: React.MouseEvent<HTMLAnchorElement>) => handleFilterByClick(event, f)}>\n      {optionallyFormatMessage(intl, 'groceryList.filter_items.', f)}\n    </Dropdown.Item>\n  ));\n\n  return (\n    <div className='grocery-list-summary'>\n      <P className='summary'>\n        {itemsCount === 0 && formatMessage(messages.groceryList_items_summary_empty)}\n        {itemsCount > 0 && completedCount === itemsCount && formatMessage(messages.groceryList_items_summary_completed, { sum: list?.item_count ?? 0 })}\n        {itemsCount > 0 && incompletedCount > 0 && formatMessage(messages.groceryList_items_summary_incompleted, { sum: list?.item_count ?? 0, sum_not_completed: incompletedCount })}\n      </P>\n      <Dropdown className='filter-items-dropdown print-hidden'>\n        <Dropdown.Toggle variant='outline-primary' id='filter-items-button' disabled={list == null || list.item_count === 0}>\n          {formatMessage(messages.groceryList_filter_by, { filter: optionallyFormatMessage(intl, 'groceryList.filter_items.', filter) })}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {dropdownItems}\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default GroceryListSummary;\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Form as ReduxForm, FormSpy } from 'react-final-form';\nimport { useLocation, useNavigate } from 'react-router';\nimport { Dropdown, Form } from 'react-bootstrap';\n\nimport '../css/grocery_list_header.css';\n\nimport Icon from '../../common/components/Icon';\nimport Modal from '../../common/components/Modal';\nimport ReFormStatus from '../../common/components/ReInput/ReFormStatus';\nimport InitialValuesResetter from '../../common/components/ReInput/ReInitialValuesResetter';\nimport ReInput from '../../common/components/ReInput/ReInput';\nimport NavLink from '../../header/components/NavLink';\nimport NavButton from '../../common/components/NavButton';\nimport { getRoutePath } from '../../common/utility';\nimport { ValidationResult } from '../../common/store/Validation';\nimport Button from '../../common/components/Button';\nimport { GroceryList, GroceryListCreate, GroceryListUpdate } from '../store/GroceryListTypes';\nimport { GroceryListItem } from '../store/GroceryListItemTypes';\nimport { GROCERY_LIST_FILTER } from '../containers/GroceryListContainer';\nimport GroceryListSummary from './GroceryListSummary';\n\nconst messages = defineMessages({\n  new_title_placeholder: {\n    id: 'grocery_list.header.title_placeholder',\n    defaultMessage: '(Enter a new title)',\n  },\n  confirm_delete_message: {\n    id: 'grocery_list.header.confirm_delete',\n    description: 'Are you sure you want to delete this list?',\n    defaultMessage: 'Are you sure you want to delete this list?',\n  },\n  edit_list: {\n    id: 'grocery_list.header.edit_list_button',\n    defaultMessage: 'Edit',\n  },\n  delete_list: {\n    id: 'grocery_list.header.delete_list_button',\n    defaultMessage: 'Delete',\n  },\n  back_to_lists: {\n    id: 'grocery_list.header.back_to_lists',\n    defaultMessage: 'To my grocery lists',\n  },\n  save: {\n    id: 'grocery_list.header.save_button_tooltip',\n    defaultMessage: 'Save',\n  },\n  revert: {\n    id: 'grocery_list.header.revert_button_tooltip',\n    defaultMessage: 'Revert',\n  },\n});\n\nexport interface IGroceryListHeaderProps {\n  list: GroceryList | undefined;\n  isNew: boolean;\n  onCreate: (item: GroceryListCreate) => Promise<ValidationResult>;\n  onUpdate: (upd: GroceryListUpdate) => Promise<ValidationResult>;\n  onRemove: () => void;\n\n  items: Array<GroceryListItem> | undefined;\n  filter: GROCERY_LIST_FILTER;\n  onChangeFilter: (newFilter: GROCERY_LIST_FILTER) => void;\n}\n\ninterface FormDataProps {\n  title: string;\n}\n\nconst GroceryListHeader: React.FC<IGroceryListHeaderProps> = ({\n    list, isNew, onCreate, onUpdate, onRemove,\n    items, filter, onChangeFilter }: IGroceryListHeaderProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const location = useLocation();\n  const nav = useNavigate();\n\n  const parentPagePath = location.pathname.substring(0, location.pathname.lastIndexOf('/create'));\n\n  const titleRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const [editMode, setEditMode] = useState<boolean>(isNew);\n\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState<boolean>(false);\n  const handleDeleteClick  = useCallback(() => { setShowDeleteConfirm(true); }, []);\n  const handleDeleteAccept = useCallback(() => { onRemove(); }, [onRemove]);\n  const handleDeleteClose  = useCallback(() => { setShowDeleteConfirm(false); }, []);\n\n  const listSlug = list?.slug;\n\n  useEffect(() => {\n    if (editMode !== isNew) {\n      setEditMode(isNew);\n    }\n    if (showDeleteConfirm) {\n      setShowDeleteConfirm(false);\n    }\n  }, [isNew, list]);\n\n  const handleEditClick = useCallback(() => {\n    setEditMode(true);\n    if (inputRef != null && inputRef.current != null) {\n      setTimeout(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (inputRef.current as any).focus();\n      }, 1);\n    }\n  }, [inputRef?.current]);\n\n  const handleRevertClick = useCallback(() => {\n    setEditMode(false);\n  }, []);\n\n  const handleSubmit = useCallback(async (form: FormDataProps) => {\n    if (isNew) {\n      const createList: GroceryListCreate = {\n        title: form.title,\n      };\n      return onCreate(createList);\n    } else {\n      const updList: GroceryListUpdate = {\n        title: form.title,\n      };\n      return onUpdate(updList);\n    }\n  }, [isNew, onCreate, onUpdate]);\n  const handleSubmitSuccess = useCallback(() => {\n    if (isNew) {\n      nav(`${parentPagePath}/${listSlug}`);\n    }\n\n    setEditMode(false);\n    if (titleRef != null && titleRef.current != null) {\n      setTimeout(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (titleRef.current as any).focus();\n      }, 1);\n    }\n  }, [isNew, parentPagePath, listSlug, titleRef?.current]);\n\n  const initialValues: Partial<FormDataProps> = useMemo(() => (list ? { title: list.title } : {}), [list]);\n\n  return (\n    <>\n      <div className={classNames({\n          editing: editMode,\n          'list-header': true,\n        })}>\n        <div className='grocery-list-title-bar' tabIndex={-1} ref={titleRef}>\n          {list && !isNew && !editMode && (\n            <>\n              <NavButton id='to-grocery-lists' variant='transparent' to={getRoutePath('/grocery-lists')} className='print-hidden' tooltip={formatMessage(messages.back_to_lists)}><Icon icon='caret-left' /></NavButton>\n              <h1>{list.title}</h1>\n            </>\n          )}\n\n          {editMode && (\n            <ReduxForm\n                initialValues = {initialValues}\n                onSubmit = {handleSubmit}\n                subscription = {{}}\n                render = {({ form, handleSubmit: renderSubmit }) => (\n                  <Form onSubmit={renderSubmit} className='change-grocery-list-title-form'>\n                    <ReFormStatus onSubmitSuccess={handleSubmitSuccess} />\n\n                    <InitialValuesResetter form={form} initialValues={initialValues} />\n\n                    <div className='title-group'>\n                      <ReInput\n                          name = 'title'\n                          placeholder = {formatMessage(messages.new_title_placeholder)}\n                          maxLength = {250}\n                          ref = {inputRef}\n                          />\n                      <FormSpy subscription={{ values: true, submitting: true }}>\n                        {({ values, submitting }) => (\n                          <>\n                            <Button id='change-grocery-list-save' type='submit' variant='outline-primary' disabled={!values.title || submitting} tooltip={formatMessage(messages.save)} style={{ padding: 0 }}>\n                              <Icon icon='check' variant='light' size='2x' />\n                            </Button>\n                            {!isNew && (\n                              <Button id='change-grocery-list-revert' type='button' variant='outline-secondary' disabled={!values.title || submitting} onClick={handleRevertClick} tooltip={formatMessage(messages.revert)} style={{ padding: 0 }}>\n                                <Icon icon='x' variant='light' size='2x' />\n                              </Button>\n                            )}\n                          </>\n                        )}\n                      </FormSpy>\n                    </div>\n                  </Form>\n            )} />\n          )}\n\n          {!editMode && (\n            <Dropdown>\n              <Dropdown.Toggle id='grocery-header-option-menu' variant='transparent' className='print-hidden'>\n                <Icon icon='three-dots-vertical' variant='light' />\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu id='grocery-header-option-menu-dropdown'>\n                <Dropdown.Item onClick={handleEditClick}>{formatMessage(messages.edit_list)}</Dropdown.Item>\n                <Dropdown.Item onClick={handleDeleteClick}>{formatMessage(messages.delete_list)}</Dropdown.Item>\n                <Dropdown.Divider />\n                <NavLink to={`${parentPagePath}/create`} active={false}>{intl.messages['nav.grocery_list_create'] as string}</NavLink>\n              </Dropdown.Menu>\n            </Dropdown>\n          )}\n\n        </div>\n        {!isNew && (\n          <GroceryListSummary\n              list   = {list}\n              items  = {items}\n              filter = {filter}\n              onChangeFilter = {onChangeFilter} />\n        )}\n      </div>\n\n      <Modal\n          show = {showDeleteConfirm}\n          title = {intl.messages['recipe.confirm_delete_title'] as string}\n          acceptTitle = {intl.messages['recipe.confirm_delete_accept'] as string}\n          onAccept = {handleDeleteAccept}\n          onClose  = {handleDeleteClose}\n          acceptButtonProps = {{ variant: 'danger' }}>\n        {intl.formatMessage(messages.confirm_delete_message)}\n      </Modal>\n    </>\n  );\n};\n\nexport default GroceryListHeader;\n","import { useCallback, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Button } from 'react-bootstrap';\n\nimport { GroceryListItemCreate } from '../store/GroceryListItemTypes';\nimport Input from '../../common/components/Input/Input';\nimport Icon from '../../common/components/Icon';\nimport { formatValidation, ValidationResult } from '../../common/store/Validation';\n\nconst messages = defineMessages({\n  new_item_placeholder: {\n    id: 'groceryList.items.new_item_placeholder',\n    description: 'New item input, placeholder.',\n    defaultMessage: '(New item)',\n  },\n});\n\nexport interface IGroceryListNewItemProps {\n  onAddItem: (item: GroceryListItemCreate) => Promise<ValidationResult>;\n}\n\nconst GroceryListNewItem: React.FC<IGroceryListNewItemProps> = ({\n    onAddItem }: IGroceryListNewItemProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const [newTitle, setNewTitle] = useState<string>('');\n  const [error, setError] = useState<ValidationResult | undefined>();\n\n  const handleAddItem = useCallback(async (newTitlee: string) => {\n    onAddItem({ title: newTitlee })\n        .then(() => {\n          setNewTitle('');\n        })\n        .catch((e: ValidationResult) => { setError(e); });\n  }, [onAddItem]);\n\n  const handleAddItemClick = useCallback(() => {\n    handleAddItem(newTitle);\n  }, [handleAddItem, newTitle]);\n\n  const handleLabelChange = useCallback((_name: string, newValue: string) => {\n    if (newValue !== newTitle) {\n      setNewTitle(newValue);\n    }\n  }, [newTitle]);\n\n  const handleKeyDown = useCallback((event: React.KeyboardEvent<HTMLElement>) => {\n    if (event.defaultPrevented || event.ctrlKey || event.shiftKey) return;\n    if (event.key === 'Enter') {\n      handleAddItem((event.currentTarget as HTMLInputElement).value);\n    }\n  }, [handleAddItem]);\n\n  return (\n    <>\n      <Input\n          name  = 'newItem'\n          value = {newTitle}\n          placeholder = {formatMessage(messages.new_item_placeholder)}\n          errors      = {formatValidation(intl, error?.newItem)}\n          className   = 'new-item-input grocery-list-item-margin'\n          onChange    = {handleLabelChange}\n          onKeyDown   = {handleKeyDown}\n          />\n      <Button\n          variant = 'primary'\n          disabled = {newTitle.length === 0}\n          onClick = {handleAddItemClick}\n          className = 'grocery-list-item-margin'>\n        <Icon icon='arrow-right' variant='light' />\n      </Button>\n    </>\n  );\n};\n\nexport default GroceryListNewItem;\n","import { forwardRef, RefObject, useCallback, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { Dropdown, Col, Form, Row } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Form as ReduxForm } from 'react-final-form';\n\nimport Icon from '../../common/components/Icon';\nimport Checkbox from '../../common/components/Input/Checkbox';\nimport Modal from '../../common/components/Modal';\nimport { ValidationResult } from '../../common/store/Validation';\nimport { GroceryListItem, GroceryListItemUpdate } from '../store/GroceryListItemTypes';\nimport ReFormStatus from '../../common/components/ReInput/ReFormStatus';\nimport InitialValuesResetter from '../../common/components/ReInput/ReInitialValuesResetter';\nimport ReInput from '../../common/components/ReInput/ReInput';\n\nconst messages = defineMessages({\n  edit_button: {\n    id: 'grocery_list.item.edit_button',\n    defaultMessage: 'Edit',\n  },\n  delete_button: {\n    id: 'grocery_list.item.delete_button',\n    defaultMessage: 'Delete',\n  },\n  old_title: {\n    id: 'grocery_list.item.old_title_label',\n    defaultMessage: 'Item',\n  },\n  new_title: {\n    id: 'grocery_list.item.new_title_label',\n    defaultMessage: 'New Title',\n  },\n});\n\nexport interface IGroceryListItemFCProps {\n  item: GroceryListItem;\n  className?: string;\n  onToggle:  (itemId: number, completed: boolean) => void;\n  onUpdate:  (itemId: number, upd: GroceryListItemUpdate) => Promise<ValidationResult>;\n  onDelete:  (itemId: number) => void;\n}\n\nconst GroceryListItemFC: React.FC<IGroceryListItemFCProps> = ({\n    item, className,\n    onToggle, onUpdate, onDelete }: IGroceryListItemFCProps) => {\n  const { formatMessage } = useIntl();\n\n  const [showEdit, setShowEdit] = useState<boolean>(false);\n  const submitRef = useRef<HTMLButtonElement>(null);\n\n  const handleToggle = useCallback(() => {\n    onToggle(item.id, !item.completed);\n  }, [onToggle, item]);\n\n  const handleEditClick = useCallback(() => {\n    setShowEdit(true);\n  }, []);\n  const handleEditClose = useCallback((autoClose?: boolean) => {\n    if (autoClose) return;\n    setShowEdit(false);\n  }, []);\n  const handleEditSubmit = useCallback(() => {\n    submitRef.current?.click();\n  }, [submitRef.current]);\n  const handleEditItem = useCallback(async (upd: GroceryListItemUpdate) => (\n    onUpdate(item.id, upd)\n  ), [onUpdate, item.id]);\n\n  const handleDeleteItem = useCallback(() => {\n    onDelete(item.id);\n  }, [onDelete, item.id]);\n\n  return (\n    <div className={classNames('grocery-list-item', className)}>\n      <Checkbox\n          name  = {`${item.listId}-${item.id}-toggle`}\n          label = {item.title}\n          value = {item.completed}\n          onChange = {handleToggle}\n          className = 'grocery-list-item-cb grocery-list-item-margin'\n          />\n      <Dropdown className='options-dropdown print-hidden'>\n        <Dropdown.Toggle variant='transparent'>\n          <Icon icon='three-dots-vertical' variant='light' />\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu id='grocery-header-option-menu-dropdown'>\n          <Dropdown.Item onClick={handleEditClick}>{formatMessage(messages.edit_button)}</Dropdown.Item>\n          <Dropdown.Item onClick={handleDeleteItem}>{formatMessage(messages.delete_button)}</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n\n      {showEdit && (\n        <Modal\n            show\n            title = {formatMessage(messages.edit_button)}\n            onAccept = {handleEditSubmit}\n            onClose = {handleEditClose}\n            size = 'sm'>\n          <EditItemForm item={item} onSubmit={handleEditItem} onSubmitSuccess={handleEditClose} submitRef={submitRef} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\ninterface IEditItemFormProps {\n  item: GroceryListItem;\n  onSubmit: (upd: GroceryListItemUpdate) => Promise<ValidationResult>;\n  onSubmitSuccess: () => void;\n  submitRef: RefObject<HTMLButtonElement>;\n}\n\ninterface IEditItemFormDataProps {\n  oldTitle: string;\n  newTitle: string;\n}\n\nconst EditItemForm = forwardRef<HTMLFormElement, IEditItemFormProps>(({\n    item, onSubmit, onSubmitSuccess, submitRef }: IEditItemFormProps, ref) => {\n  const { formatMessage } = useIntl();\n\n  const [initialValues] = useState<Partial<IEditItemFormDataProps>>({ oldTitle: item.title, newTitle: item.title });\n\n  const handleSubmit = useCallback(async (form: IEditItemFormDataProps) => {\n    if (item.title === form.newTitle) return null;\n    const upd: GroceryListItemUpdate = {\n      title: form.newTitle,\n    };\n    return onSubmit(upd);\n  }, [item.title, onSubmit]);\n\n  return (\n    <ReduxForm\n        initialValues = {initialValues}\n        onSubmit = {handleSubmit}\n        subscription = {{}}\n        render = {({ form, handleSubmit: renderSubmit }) => (\n          <Form onSubmit={renderSubmit} ref={ref}>\n            <ReFormStatus onSubmitSuccess={onSubmitSuccess} />\n\n            <InitialValuesResetter form={form} initialValues={initialValues} />\n            <Row>\n              <Col>\n                <ReInput\n                    name   = 'oldTitle'\n                    label  = {formatMessage(messages.old_title)}\n                    readOnly />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <ReInput\n                    name   = 'newTitle'\n                    label  = {formatMessage(messages.new_title)}\n                    required\n                    autoFocus />\n              </Col>\n            </Row>\n            <button type='submit' ref={submitRef} className='visibility-hidden'>Submit</button>\n          </Form>\n        )} />\n  );\n});\n\nexport default GroceryListItemFC;\n","import { useCallback, useMemo } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/grocery_list_items.css';\n\nimport { GroceryList } from '../store/GroceryListTypes';\nimport { GroceryListItem, GroceryListItemCreate, GroceryListItemUpdate } from '../store/GroceryListItemTypes';\nimport Checkbox from '../../common/components/Input/Checkbox';\nimport GroceryListNewItem from './GroceryListNewItem';\nimport GroceryListItemFC from './GroceryListItem';\nimport { ValidationResult } from '../../common/store/Validation';\nimport { GROCERY_LIST_FILTER } from '../containers/GroceryListContainer';\nimport P from '../../common/components/P';\n\nconst messages = defineMessages({\n  toggle_all: {\n    id: 'grocery_list.items.toggle_all',\n    defaultMessage: 'Toggle all',\n  },\n  filtered_items_info: {\n    id: 'grocery_list.items.filtered_items_info',\n    defaultMessage: '({sum, plural, one {# filtered item} other {# filtered items}})',\n  },\n});\n\nexport interface IGroceryListItemsProps {\n  list: GroceryList | undefined;\n  isNew: boolean;\n  items: Array<GroceryListItem> | undefined;\n  filter: GROCERY_LIST_FILTER;\n\n  onAddItem:     (itemCreate: GroceryListItemCreate) => Promise<ValidationResult>;\n  onToggleItem:  (itemId: number, completed: boolean) => void;\n  onToggleItems: (items: Array<GroceryListItem>, newCompleted: boolean) => void;\n  onUpdateItem:  (itemId: number, upd: GroceryListItemUpdate) => Promise<ValidationResult>;\n  onDeleteItem:  (itemId: number) => void;\n}\n\nexport function filterListItems(items: Array<GroceryListItem>, filter: GROCERY_LIST_FILTER): Array<GroceryListItem> {\n  switch (filter) {\n    case GROCERY_LIST_FILTER.ALL:\n      return items;\n    case GROCERY_LIST_FILTER.ACTIVE:\n      return items.filter(i => !i.completed);\n    case GROCERY_LIST_FILTER.COMPLETED:\n      return items.filter(i => i.completed);\n    default: return items;\n  }\n}\n\nconst GroceryListItems: React.FC<IGroceryListItemsProps> = ({\n    list, isNew, items, filter, onAddItem, onToggleItem, onToggleItems, onUpdateItem, onDeleteItem }: IGroceryListItemsProps) => {\n  const { formatMessage } = useIntl();\n\n  const filteredItems = useMemo(() => filterListItems(items ?? [], filter), [filterListItems, items, filter]);\n\n  const handleToggleItemsClick = useCallback(() => {\n    const allItemsCompleted = filteredItems.find(i => !i.completed) == null;\n    onToggleItems(filteredItems, !allItemsCompleted);\n  }, [onToggleItems, filteredItems]);\n\n  if (!list || isNew || items == null) return null;\n\n  const itemsJsx: Array<React.ReactNode> = filteredItems.map(i => (\n    <li key={`${i.listId}-${i.id}`}>\n      <GroceryListItemFC\n          item = {i}\n          className = 'grocery-list-flex-container'\n          onToggle = {onToggleItem}\n          onUpdate = {onUpdateItem}\n          onDelete = {onDeleteItem}\n          />\n    </li>\n  ));\n\n  const hasUncheckedItem = items.find(i => !i.completed) != null;\n  const numberOfHiddenItems = items.length - filteredItems.length;\n\n  return (\n    <>\n      <Checkbox\n          name = 'toggle-all'\n          label = {formatMessage(messages.toggle_all)}\n          value = {items != null && items.length > 0 && !hasUncheckedItem}\n          readOnly = {items == null || filteredItems.length === 0}\n          errors = {undefined}\n          className = 'toggle-all grocery-list-item-margin'\n          onChange = {handleToggleItemsClick}\n          />\n      {numberOfHiddenItems > 0 && (\n        <div className='grocery-list-flex-container'>\n          <Checkbox\n              name = 'hidden-placeholder-toggle'\n              value = {false}\n              disabled\n              className = 'dummy-checkbox visibility-hidden'\n              />\n          <P className='placeholder grocery-list-item-margin'>{formatMessage(messages.filtered_items_info, { sum: numberOfHiddenItems })}</P>\n        </div>\n      )}\n      <ul className='grocery-list-items'>\n        {itemsJsx}\n        <li className='print-hidden'>\n          <div className='grocery-list-flex-container'>\n            <Checkbox\n                name = 'new-item-toggle'\n                value = {false}\n                disabled\n                className = 'dummy-checkbox visibility-hidden'\n                />\n            <GroceryListNewItem\n                onAddItem = {onAddItem}\n                />\n          </div>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default GroceryListItems;\n","import { ValidationResult } from '../../common/store/Validation';\nimport { GROCERY_LIST_FILTER } from '../containers/GroceryListContainer';\nimport { GroceryListItem, GroceryListItemCreate, GroceryListItemUpdate } from '../store/GroceryListItemTypes';\nimport { GroceryList, GroceryListCreate, GroceryListUpdate } from '../store/GroceryListTypes';\nimport GroceryListFooter from './GroceryListFooter';\nimport GroceryListHeader from './GroceryListHeader';\nimport GroceryListItems from './GroceryListItems';\n\nexport interface IGroceryListFCProps {\n  list: GroceryList | undefined;\n  isNew: boolean;\n  onCreate: (item: GroceryListCreate) => Promise<ValidationResult>;\n  onUpdate: (upd: GroceryListUpdate) => Promise<ValidationResult>;\n  onRemove: () => void;\n\n  items: Array<GroceryListItem> | undefined;\n  filter: GROCERY_LIST_FILTER;\n  onChangeFilter: (newFilter: GROCERY_LIST_FILTER) => void;\n\n  onAddItem: (itemCreate: GroceryListItemCreate) => Promise<ValidationResult>;\n  onToggleItem: (itemId: number, completed: boolean) => void;\n  onToggleItems: (items: Array<GroceryListItem>, newCompleted: boolean) => void;\n  onUpdateItem:  (itemId: number, upd: GroceryListItemUpdate) => Promise<ValidationResult>;\n  onDeleteItem:  (itemId: number) => void;\n\n  isClearPending: boolean;\n  onClearCompleted: () => void;\n\n  onCopyToClipboard: () => void;\n}\n\nconst GroceryListFC: React.FC<IGroceryListFCProps> = ({\n    list, isNew, onCreate, onUpdate, onRemove,\n    items, filter, onChangeFilter,\n    onAddItem, onToggleItem, onToggleItems, onUpdateItem, onDeleteItem,\n    isClearPending, onClearCompleted,\n    onCopyToClipboard }: IGroceryListFCProps) => { // eslint-disable-line arrow-body-style\n  return (\n    <>\n      <GroceryListHeader\n          list     = {list}\n          isNew    = {isNew}\n          onCreate = {onCreate}\n          onUpdate = {onUpdate}\n          onRemove = {onRemove}\n\n          items    = {items}\n          filter   = {filter}\n          onChangeFilter = {onChangeFilter}\n          />\n      <GroceryListItems\n          list     = {list}\n          isNew    = {isNew}\n          items    = {items}\n          filter   = {filter}\n          onAddItem     = {onAddItem}\n          onToggleItem  = {onToggleItem}\n          onToggleItems = {onToggleItems}\n          onUpdateItem    = {onUpdateItem}\n          onDeleteItem  = {onDeleteItem}\n          />\n      <GroceryListFooter\n          list     = {list}\n          isNew    = {isNew}\n          items    = {items}\n          isClearPending   = {isClearPending}\n          onClearCompleted = {onClearCompleted}\n          onCopyToClipboard = {onCopyToClipboard}\n          />\n    </>\n  );\n};\n\nexport default GroceryListFC;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router';\n\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport * as GroceryListActions from '../store/GroceryListActions';\nimport * as GroceryListItemActions from '../store/GroceryListItemActions';\nimport * as GroceryListItemsActions from '../store/GroceryListItemsActions';\nimport { RootState } from '../../app/Store';\nimport { GroceryList, GroceryListCreate, GroceryListUpdate } from '../store/GroceryListTypes';\nimport GroceryListFC from '../components/GroceryList';\nimport useCrash from '../../common/hooks/useCrash';\nimport { copyToClipboard, getRoutePath } from '../../common/utility';\nimport { GroceryListItem, GroceryListItemCreate, GroceryListItemUpdate } from '../store/GroceryListItemTypes';\n\nexport interface IGroceryListContainerProps {\n  isNew: boolean;\n}\n\nexport enum GROCERY_LIST_FILTER {\n  ALL = 'ALL',\n  ACTIVE = 'ACTIVE',\n  COMPLETED = 'COMPLETED'\n}\n\nfunction toClipboardText(list: GroceryList, items: Array<GroceryListItem>): string {\n  const titleText = `${list.title}:`;\n  const itemsText = items\n      .map(i => `${i.completed ? '[x]' : '[ ]'} ${i.title}`)\n      .join('\\n');\n\n  return `${titleText}\\n${itemsText}`;\n}\n\nconst GroceryListContainer: React.FC<IGroceryListContainerProps> = ({\n    isNew }: IGroceryListContainerProps) => {\n  const dispatch = useDispatch();\n  const crash = useCrash();\n  const nav = useNavigate();\n\n  const groceryListState = useSelector((state: RootState) => state.groceryList);\n  const { item: list } = groceryListState;\n  const listSlug = list?.slug;\n  const prevList = useRef<GroceryList | undefined>();\n\n  const groceryListItemsState = useSelector((state: RootState) => state.groceryListItems);\n  const { items: listItems } = groceryListItemsState;\n  const prevListItems = useRef<Array<GroceryListItem> | undefined>();\n\n  const [filter, setFilter] = useState<GROCERY_LIST_FILTER>(GROCERY_LIST_FILTER.ALL);\n  const [isDeleting, setIsDeleting] = useState<boolean>(false);\n  const [isClearing, setIsClearing] = useState<boolean>(false);\n\n  const createList = useCallback(async (listCreate: GroceryListCreate) => GroceryListActions.create(dispatch, listCreate), []);\n  const updateList = useCallback(async (upd: GroceryListUpdate) => GroceryListActions.update(dispatch, listSlug ?? '', upd), [listSlug]);\n  const removeList = useCallback(() => {\n    if (list?.id == null) { crash('Invalid state: list item may not be null'); return; }\n    setIsDeleting(true);\n    dispatch(GroceryListActions.remove(list.id, listSlug ?? ''));\n  }, [list?.id, listSlug]);\n\n  const clearCompleted = useCallback(() => {\n    if (list?.id == null) { crash('Invalid state: list item may not be null'); return; }\n    setIsClearing(true);\n    const completedItems = listItems?.filter(i => i.completed) ?? [];\n    GroceryListItemsActions.clearCompleted(dispatch, list.id, completedItems)\n      .then(() => {\n        setIsClearing(false);\n      });\n  }, [list?.id, listItems]);\n\n  const addItem = useCallback(async (itemCreate: GroceryListItemCreate) => (\n    GroceryListItemActions.create(dispatch, list?.id ?? 0, itemCreate)\n  ), [list?.id]);\n\n  const toggleItem = useCallback((itemId: number, completed: boolean) => {\n    if (list?.id == null) { crash('Invalid state: list item may not be null'); return; }\n    dispatch(GroceryListItemActions.toggleItem(list.id, itemId, completed));\n  }, [list?.id]);\n\n  const toggleItems = useCallback((items: Array<GroceryListItem>, newCompleted: boolean) => {\n    if (list?.id == null || listItems == null) { crash('Invalid state: list item may not be null'); return; }\n    dispatch(GroceryListItemsActions.toggleItems(list.id, items, newCompleted));\n  }, [list?.id, listItems]);\n\n  const updateItem = useCallback(async (itemId: number, update: GroceryListItemUpdate) => {\n    if (list?.id == null) { crash('Invalid state: list item may not be null'); return undefined; }\n    return GroceryListItemActions.update(dispatch, list.id, itemId, update);\n  }, [list?.id]);\n\n  const removeItem = useCallback((itemId: number) => {\n    if (list == null) { crash('Invalid state: list item may not be null'); return; }\n    dispatch(GroceryListItemActions.remove(list.id, itemId));\n  }, [list]);\n\n  // Handle deletion\n  useEffect(() => {\n    if (prevList.current == null) {\n      prevList.current = list;\n    } else if (isDeleting && prevList.current != null && list == null) {\n      nav(getRoutePath('/grocery-lists'));\n    }\n  }, [list]);\n\n  // Handle clear\n  useEffect(() => {\n    if (prevListItems.current == null) {\n      prevListItems.current = listItems;\n    } else if (isClearing) {\n      setIsClearing(false);\n    }\n  }, [listItems]);\n\n  const handleCopyToClipboard = useCallback(() => {\n    if (list == null) { crash('Invalid state: list item may not be null'); return; }\n    const text = toClipboardText(list, listItems ?? []);\n    copyToClipboard(text);\n  }, [list, listItems]);\n\n  return (\n    <GroceryListFC\n        list     = {list}\n        isNew    = {isNew}\n        onCreate = {createList}\n        onUpdate = {updateList}\n        onRemove = {removeList}\n\n        items    = {listItems}\n        filter   = {filter}\n        onChangeFilter = {setFilter}\n\n        onAddItem     = {addItem}\n        onToggleItem  = {toggleItem}\n        onToggleItems = {toggleItems}\n        onUpdateItem  = {updateItem}\n        onDeleteItem  = {removeItem}\n\n        isClearPending = {isClearing}\n        onClearCompleted = {clearCompleted}\n\n        onCopyToClipboard = {handleCopyToClipboard}\n        />\n  );\n};\n\nexport default GroceryListContainer;\n","import request from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { AnyDispatch, toBasicAction } from '../../common/store/redux';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { handleError, handleFormError } from '../../common/requestUtils';\nimport { GroceryListItem, GroceryListItemAction, GroceryListItemActionTypes, GroceryListItemCreate, GroceryListItemCreateDto, GroceryListItemDispatch, GroceryListItemUpdate, GROCERY_LIST_ITEM_STORE, toGroceryListItem } from './GroceryListItemTypes';\n\nexport const getGroceryListItemSuccess = (groceryList: GroceryListItem): GroceryListItemAction => (\n  { ...toBasicAction(GROCERY_LIST_ITEM_STORE, ACTION.GET_SUCCESS), payload: groceryList }\n);\n\nexport const load = (listId: number) => (dispatch: GroceryListItemDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEM_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.list_item}?list=${listId}`)\n    .then(res => {\n      dispatch(getGroceryListItemSuccess(toGroceryListItem(listId, res.body)));\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_ITEM_STORE)));\n};\n\nexport const create = async (dispatch: AnyDispatch, listId: number, item: GroceryListItemCreate) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEM_STORE, ACTION.CREATE_START) });\n\n  const dto: GroceryListItemCreateDto = {\n    list: listId,\n    ...item,\n  };\n\n  return request()\n    .post(serverURLs.list_item)\n    .send(dto)\n    .then(res => {\n      const groceryListItem = toGroceryListItem(listId, res.body);\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_ITEM_STORE,\n          ACTION.CREATE_SUCCESS\n        ),\n        payload: groceryListItem,\n      });\n    })\n    .catch(err => handleFormError(dispatch, err, GROCERY_LIST_ITEM_STORE));\n};\n\nexport const update = async (dispatch: AnyDispatch, listId: number, id: number, item: GroceryListItemUpdate) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEM_STORE, ACTION.UPDATE_START) });\n\n  return request()\n    .patch(`${serverURLs.list_item}${id}/`)\n    .send(item)\n    .then(res => {\n      const groceryListItem = toGroceryListItem(listId, res.body);\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_ITEM_STORE,\n          ACTION.UPDATE_SUCCESS\n        ),\n        payload: groceryListItem,\n      });\n    })\n    .catch(err => handleFormError(dispatch, err, GROCERY_LIST_ITEM_STORE));\n};\n\nexport const remove = (listId: number, id: number) => (dispatch: GroceryListItemDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEM_STORE, ACTION.DELETE_START) });\n\n  request()\n    .delete(`${serverURLs.list_item}${id}/`)\n    .then(() => {\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_ITEM_STORE,\n          ACTION.DELETE_SUCCESS\n        ),\n        payload: { listId: listId, id: id },\n      });\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_ITEM_STORE)));\n};\n\nexport const toggleItem = (listId: number, id: number, completed: boolean) => (dispatch: GroceryListItemDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEM_STORE, ACTION.UPDATE_START) });\n\n  request()\n    .patch(`${serverURLs.list_item}${id}/`)\n    .send({ completed: completed })\n    .then(() => {\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_ITEM_STORE,\n          GroceryListItemActionTypes.TOGGLE_ITEM\n        ),\n        payload: { listId: listId, id: id },\n      });\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_ITEM_STORE)));\n};\n\nexport const preload = (list: Partial<GroceryListItem>) => (dispatch: GroceryListItemDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEM_STORE, ACTION.PRELOAD), payload: list });\n};\n\nexport const reset = () => (dispatch: GroceryListItemDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEM_STORE, ACTION.RESET) });\n};\n","import { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport { defineMessages, useIntl } from 'react-intl';\nimport * as _ from 'lodash-es';\n\nimport { RootState } from '../../app/Store';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport * as GroceryListActions from '../store/GroceryListActions';\nimport * as GroceryListItemsActions from '../store/GroceryListItemsActions';\nimport PageWrapper from '../../common/components/PageWrapper';\nimport { getResourcePath } from '../../common/utility';\nimport GroceryListContainer from './GroceryListContainer';\n\nconst GroceryListPage: React.FC = () => {\n  const { formatMessage } = useIntl();\n  const messages = defineMessages({\n    new_grocery_list: {\n      id: 'grocery_list.new_grocery_list',\n      description: 'New GroceryList documentTitle',\n      defaultMessage: 'New grocery list',\n    },\n  });\n\n  const params = useParams();\n  const nav = useNavigate();\n  const dispatch = useDispatch();\n\n  const groceryListState  = useSelector((state: RootState) => state.groceryList);\n  const groceryListMeta   = groceryListState.meta;\n  const groceryListItemsState  = useSelector((state: RootState) => state.groceryListItems);\n  const groceryListItemsMeta   = groceryListItemsState.meta;\n\n  const listSlug = params.list;\n  const isNew = listSlug === 'create';\n  // Load GroceryList\n  useEffect(() => {\n    if (listSlug) {\n      window.scrollTo(0, 0);\n      if (isNew) {\n        dispatch(GroceryListActions.reset());\n        dispatch(GroceryListItemsActions.reset());\n      } else {\n        dispatch(GroceryListActions.load(listSlug));\n      }\n    }\n  }, [listSlug]);\n\n  useEffect(() => {\n    if (groceryListState.item?.id && !isNew) {\n      dispatch(GroceryListItemsActions.load(groceryListState.item.id));\n    }\n  }, [groceryListState.item?.id, isNew]);\n\n  // If list not found, redirect to lists\n  useEffect(() => {\n    if (_.get(groceryListMeta.error, 'status') === 404) {\n      nav(getResourcePath('/grocery-lists'));\n    }\n  }, [groceryListMeta.error]);\n\n  // If list not found, redirect to lists\n  useEffect(() => {\n    if (_.get(groceryListItemsMeta.error, 'status') === 404) {\n      nav(getResourcePath('/grocery-lists'));\n    }\n  }, [groceryListItemsMeta.error]);\n\n  // componentWillUnmount\n  useEffect(() => () => {\n    dispatch(GroceryListActions.reset());\n    dispatch(GroceryListItemsActions.reset());\n  }, []);\n\n  return (\n    <PageWrapper title={isNew ? formatMessage(messages.new_grocery_list) : groceryListState.item?.title} className='optiwidth'>\n      <GroceryListContainer isNew={isNew} />\n    </PageWrapper>\n  );\n};\n\nexport default GroceryListPage;\n","import request from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { Ingredient, SubRecipe } from '../../recipe/store/RecipeTypes';\nimport { AnyDispatch, toBasicAction } from '../../common/store/redux';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { handleError, handleFormError } from '../../common/requestUtils';\nimport { GroceryList, GroceryListAction, GroceryListActionTypes, GroceryListBulkAdd, GroceryListCreate, GroceryListDispatch, GroceryListDto, GroceryListUpdate, GROCERY_LIST_STORE, toGroceryList } from './GroceryListTypes';\nimport { GroceryListItemDto, toGroceryListItem } from './GroceryListItemTypes';\n\nexport const getGroceryListSuccess = (groceryList: GroceryList): GroceryListAction => (\n  { ...toBasicAction(GROCERY_LIST_STORE, ACTION.GET_SUCCESS), payload: groceryList }\n);\n\nexport const load = (listId: string) => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.list}${listId}/`)\n    .then(res => {\n      dispatch(getGroceryListSuccess(toGroceryList(res.body as GroceryListDto)));\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_STORE)));\n};\n\nexport const create = async (dispatch: AnyDispatch, item: GroceryListCreate) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.CREATE_START) });\n\n  return request()\n    .post(serverURLs.list)\n    .send(item)\n    .then(res => {\n      const groceryList = toGroceryList(res.body);\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_STORE,\n          ACTION.CREATE_SUCCESS\n        ),\n        payload: groceryList,\n      });\n    })\n    .catch(err => handleFormError(dispatch, err, GROCERY_LIST_STORE));\n};\n\nexport const update = async (dispatch: AnyDispatch, slug: string, item: Partial<GroceryListUpdate>) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.UPDATE_START) });\n\n  return request()\n    .patch(`${serverURLs.list}${slug}/`)\n    .send(item)\n    .then(res => {\n      const groceryList = toGroceryList(res.body);\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_STORE,\n          ACTION.UPDATE_SUCCESS\n        ),\n        payload: groceryList,\n      });\n    })\n    .catch(err => handleFormError(dispatch, err, GROCERY_LIST_STORE));\n};\n\nexport const remove = (id: number, slug: string) => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.DELETE_START) });\n\n  request()\n    .delete(`${serverURLs.list}${slug}/`)\n    .then(() => {\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_STORE,\n          ACTION.DELETE_SUCCESS\n        ),\n        payload: { id: id },\n      });\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_STORE)));\n};\n\nfunction format(i: Ingredient | SubRecipe, formatter: FormatterFunc) {\n  const quantityS = i.quantity && i.quantity !== '0' ? i.quantity : undefined;\n  const formatted = formatter(i.measurement, i.quantity);\n  return [quantityS, formatted, i.title].filter(Boolean).join(' ');\n}\n\ntype FormatterFunc = (measurement: string | undefined, quantity: string | undefined) => string;\n\nexport const bulkAdd = async (dispatch: AnyDispatch, list: number, data: GroceryListBulkAdd, formatter: FormatterFunc) => {\n  const checkedIngredients = data.ingredientGroups.flatMap(ig => ig.ingredients.map(i => ({ list: list, title: format(i, formatter) })));\n  const checkedSubRecipe = data.subrecipes.map(sr => ({ list: list, title: format(sr, formatter) }));\n  const allItems = checkedIngredients.concat(checkedSubRecipe);\n\n  if (allItems.length > 0) {\n    dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.UPDATE_START) });\n    return request()\n      .post(serverURLs.bulk_list_item)\n      .send(allItems)\n      .then(res => {\n        dispatch({ ...toBasicAction(GROCERY_LIST_STORE, GroceryListActionTypes.BULK_ADD), payload: res.body.map((i: GroceryListItemDto) => toGroceryListItem(list, i)) });\n        dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.UPDATE_SUCCESS) });\n      })\n      .catch(err => dispatch(handleError(err, GROCERY_LIST_STORE)));\n  } else {\n    return null;\n  }\n};\n\nexport const preload = (list: Partial<GroceryList>) => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.PRELOAD), payload: list });\n};\n\nexport const reset = () => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.RESET) });\n};\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import * as React from 'react';\nimport { ENTERING, EXITING } from 'react-transition-group/Transition';\nimport Fade from './Fade';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'showing',\n  [EXITING]: 'showing show'\n};\nconst ToastFade = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(Fade, {\n  ...props,\n  ref: ref,\n  transitionClasses: fadeStyles\n}));\nToastFade.displayName = 'ToastFade';\nexport default ToastFade;","\"use client\";\n\nimport * as React from 'react';\nconst ToastContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onClose() {}\n});\nexport default ToastContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CloseButton from './CloseButton';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst ToastHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = true,\n  className,\n  children,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast-header');\n  const context = useContext(ToastContext);\n  const handleClick = useEventCallback(e => {\n    context == null || context.onClose == null || context.onClose(e);\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    className: classNames(bsPrefix, className),\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick,\n      \"data-dismiss\": \"toast\"\n    })]\n  });\n});\nToastHeader.displayName = 'ToastHeader';\nexport default ToastHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ToastBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nToastBody.displayName = 'ToastBody';\nexport default ToastBody;","\"use client\";\n\nimport * as React from 'react';\nimport { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport ToastFade from './ToastFade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Toast = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  transition: Transition = ToastFade,\n  show = true,\n  animation = true,\n  delay = 5000,\n  autohide = false,\n  onClose,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  bg,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast');\n\n  // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n  const delayRef = useRef(delay);\n  const onCloseRef = useRef(onClose);\n  useEffect(() => {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  const autohideTimeout = useTimeout();\n  const autohideToast = !!(autohide && show);\n  const autohideFunc = useCallback(() => {\n    if (autohideToast) {\n      onCloseRef.current == null || onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(() => {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  const toastContext = useMemo(() => ({\n    onClose\n  }), [onClose]);\n  const hasAnimation = !!(Transition && animation);\n  const toast = /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(bsPrefix, className, bg && `bg-${bg}`, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  });\n  return /*#__PURE__*/_jsx(ToastContext.Provider, {\n    value: toastContext,\n    children: hasAnimation && Transition ? /*#__PURE__*/_jsx(Transition, {\n      in: show,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: onExited,\n      unmountOnExit: true,\n      children: toast\n    }) : toast\n  });\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});"],"names":["forwardRef","_ref","ref","id","tooltip","tooltipPlacement","children","rest","_jsx","ConditionalWrapper","condition","Boolean","render","childr","Tooltip","placement","BootstrapButton","undefined","toCleanLocationPath","path","_getEnv","_getEnv2","pathNoHost","startsWith","getEnv","substring","length","startsWithSlash","endsWithSlash","endsWith","title","state","className","nav","useNavigate","location","useLocation","error","meta","dynamicHeightContext","useContext","DynamicHeightContext","useEffect","document","p","getRoutePath","Container","as","classNames","pathname","style","marginTop","toolbarHeight","ErrorBoundary","verbose","printStack","usePrompt","message","when","arguments","blocker","navigator","NavigationContext","unblock","block","tx","autoUnblockingTx","retry","useBlocker","useCallback","window","confirm","messages","defineMessages","navigation_warning","description","defaultMessage","isDirty","formatMessage","useIntl","promptMsg","useMemo","dirtyBlocker","_jsxs","_Fragment","Beforeunload","onBeforeunload","form_errors_title","form_errors_alert","form_errors_table_heading_error","form_errors_table_heading_message","save_success","joinSentences","msgs","separator","defLineEnding","map","s","trim","join","FormErrorRowError","_ref2","_document$querySelect","_document$querySelect2","name","err","intl","label","querySelector","textContent","errMsgs","_","errr","formatValidation","FormErrors","_ref4","errors","visibleErrors","visibleErrorsArray","Object","entries","filter","_ref3","key","fromEntries","getVisibleErrors","errorTableRowsJsx","keys","res","forEach","nextErr","push","errorTableJsx","Alert","severity","P","SubmitSuccess","_ref5","dirty","submitting","onSubmitSuccess","prevSubmitting","useRef","showSaveSuccess","setShowSaveSuccess","useState","current","handleCloseSaveSuccessToast","Toast","show","variant","anchorOrigin","horizontal","vertical","onClose","NavigationPrompt","FormSpy","subscription","submitErrors","FormStatus","capitalize","str","toUpperCase","charAt","slice","autoHide","anchorString","ReactBootstrapToast","delay","autohide","success","Header","closeButton","Icon","icon","size","reset","dispatch","toBasicAction","GROCERY_LIST_ITEMS_STORE","ACTION","RESET","clear_completed_tooltip","copy_to_clipboard_tooltip","copy_to_clipboard_toast","list","isNew","items","onClearCompleted","isClearPending","onCopyToClipboard","showCopyToast","setShowCopyToast","handleCopyToClipboard","setTimeout","handleCloseCopyToast","hasCheckedItem","find","i","completed","Button","type","disabled","isDemoMode","onClick","groceryList_items_summary_empty","groceryList_items_summary_completed","groceryList_items_summary_incompleted","groceryList_filter_by","filter_off","filter_active","filter_completed","_items$length","_items$filter$length","_items$filter$length2","_list$item_count","_list$item_count2","onChangeFilter","itemsCount","completedCount","incompletedCount","handleFilterByClick","event","newFilter","preventDefault","dropdownItems","values","GROCERY_LIST_FILTER","f","Dropdown","Item","active","optionallyFormatMessage","sum","item_count","sum_not_completed","Toggle","Menu","new_title_placeholder","confirm_delete_message","edit_list","delete_list","back_to_lists","save","revert","onCreate","onUpdate","onRemove","parentPagePath","lastIndexOf","titleRef","inputRef","editMode","setEditMode","showDeleteConfirm","setShowDeleteConfirm","handleDeleteClick","handleDeleteAccept","handleDeleteClose","listSlug","slug","handleEditClick","focus","handleRevertClick","handleSubmit","async","createList","form","updList","handleSubmitSuccess","initialValues","editing","tabIndex","NavButton","to","ReduxForm","onSubmit","renderSubmit","Form","ReFormStatus","InitialValuesResetter","ReInput","placeholder","maxLength","padding","Divider","NavLink","GroceryListSummary","Modal","acceptTitle","onAccept","acceptButtonProps","new_item_placeholder","onAddItem","newTitle","setNewTitle","setError","handleAddItem","newTitlee","then","catch","e","handleAddItemClick","handleLabelChange","_name","newValue","handleKeyDown","defaultPrevented","ctrlKey","shiftKey","currentTarget","value","Input","newItem","onChange","onKeyDown","edit_button","delete_button","old_title","new_title","EditItemForm","item","submitRef","oldTitle","upd","Row","Col","readOnly","required","autoFocus","onToggle","onDelete","showEdit","setShowEdit","handleToggle","handleEditClose","autoClose","handleEditSubmit","_submitRef$current","click","handleEditItem","handleDeleteItem","Checkbox","listId","toggle_all","filtered_items_info","filterListItems","ALL","ACTIVE","COMPLETED","onToggleItem","onToggleItems","onUpdateItem","onDeleteItem","filteredItems","handleToggleItemsClick","allItemsCompleted","itemsJsx","GroceryListItemFC","hasUncheckedItem","numberOfHiddenItems","GroceryListNewItem","GroceryListHeader","GroceryListItems","GroceryListFooter","useDispatch","crash","useCrash","groceryListState","useSelector","groceryList","prevList","groceryListItemsState","groceryListItems","listItems","prevListItems","setFilter","isDeleting","setIsDeleting","isClearing","setIsClearing","GroceryListActions","listCreate","updateList","removeList","clearCompleted","_listItems$filter","completedItems","ids","request","delete","serverURLs","bulk_list_item","send","GroceryListItemsActionTypes","DELETE_COMPLETED_ITEMS","payload","handleFormError","GroceryListItemsActions","addItem","_list$id","GROCERY_LIST_ITEM_STORE","CREATE_START","dto","post","list_item","groceryListItem","toGroceryListItem","body","CREATE_SUCCESS","GroceryListItemActions","itemCreate","toggleItem","itemId","UPDATE_START","patch","GroceryListItemActionTypes","TOGGLE_ITEM","handleError","toggleItems","newCompleted","checked","GET_START","TOGGLE_ITEMS","updateItem","update","UPDATE_SUCCESS","removeItem","remove","DELETE_START","DELETE_SUCCESS","text","toClipboardText","copyToClipboard","GroceryListFC","GroceryListPage","_groceryListState$ite2","_groceryListState$ite3","new_grocery_list","params","useParams","groceryListMeta","groceryListItemsMeta","scrollTo","_groceryListState$ite","get","GET_SUCCESS","results","getResourcePath","PageWrapper","GroceryListContainer","load","GROCERY_LIST_STORE","toGroceryList","create","format","formatter","quantity","measurement","bulkAdd","data","checkedIngredients","ingredientGroups","flatMap","ig","ingredients","checkedSubRecipe","subrecipes","sr","allItems","concat","GroceryListActionTypes","BULK_ADD","React","bsPrefix","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","brkPoint","propValue","cols","infix","displayName","fadeStyles","ENTERING","EXITING","ToastFade","Fade","transitionClasses","ToastHeader","closeLabel","closeVariant","context","ToastContext","handleClick","useEventCallback","CloseButton","ToastBody","transition","Transition","animation","onEntered","onExit","onExiting","onEnter","onEntering","onExited","bg","delayRef","onCloseRef","autohideTimeout","useTimeout","autohideToast","autohideFunc","set","toastContext","hasAnimation","toast","role","Provider","in","unmountOnExit","assign","Body"],"sourceRoot":""}