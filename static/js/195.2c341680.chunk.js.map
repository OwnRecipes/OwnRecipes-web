{"version":3,"file":"static/js/195.2c341680.chunk.js","mappings":"wOAcaA,EAAiD,SAAC,GACY,IAAvEC,EAAsE,EAAtEA,KAAMC,EAAgE,EAAhEA,SAAUC,EAAsD,EAAtDA,iBAAkBC,EAAoC,EAApCA,QAC5BC,GAAkBC,EAAAA,EAAAA,KAAlBD,cACFE,GAAWC,EAAAA,EAAAA,IAAe,CAC9BC,qBAAsB,CACpBC,GAAI,uCACJC,YAAa,+BACbC,eAAgB,qBAIdC,EAAmB,WAAQT,GAAY,EAE7C,OACE,SAAC,IAAD,CACIH,KAAQA,EACRa,MAAST,EAAcE,EAASE,sBAChCL,QAAWS,EACXE,KAAO,KACPC,eAAa,EALjB,UAME,SAACC,EAAD,CACIf,SAAYA,EACZC,iBAAoBA,EACpBC,QAAWS,KAGpB,EAQKI,EAA+D,SAAC,GACM,IAAxEf,EAAuE,EAAvEA,SAAUC,EAA6D,EAA7DA,iBAAkBC,EAA2C,EAA3CA,QAMxBc,EAAkBC,OAAOC,OAAOC,EAAAA,IAAcC,KAAI,SAAAC,GAAC,OACvD,SAAC,SAAD,CAAwBC,QAAM,EAACC,SAAUvB,EAASwB,WAAaH,EAAGI,QAAS,kBAL3ExB,EAKsGoB,QAJtGnB,GAI2E,EAA3E,UAA2GwB,EAAAA,EAAAA,IAAoBL,GAAG,mBAA7GA,EADkC,IAIzD,OACE,SAAC,IAAD,UACGL,GAGN,EAED,W","sources":["header/components/LanguageDialog.tsx"],"sourcesContent":["import { defineMessages, useIntl } from 'react-intl';\nimport { ListGroup } from 'react-bootstrap';\n\nimport Modal from '../../common/components/Modal';\nimport { Settings } from '../../account/store/settings/types';\nimport { getMessagesFromLang, LanguageCode } from '../../common/language';\n\nexport interface ILanguageDialogProps {\n  show:     boolean;\n  settings: Settings;\n  onChangeLanguage: (language: LanguageCode) => void;\n  onClose:  () => void;\n}\n\nexport const LanguageDialog: React.FC<ILanguageDialogProps> = ({\n    show, settings, onChangeLanguage, onClose }: ILanguageDialogProps) => {\n  const { formatMessage } = useIntl();\n  const messages = defineMessages({\n    language_modal_title: {\n      id: 'nav.accountmenu.language_modal_title',\n      description: 'Change language dialog title',\n      defaultMessage: 'Choose language',\n    },\n  });\n\n  const handleCloseClick = () => { onClose(); };\n\n  return (\n    <Modal\n        show = {show}\n        title = {formatMessage(messages.language_modal_title)}\n        onClose = {handleCloseClick}\n        size = 'sm'\n        noCloseButton>\n      <LanguageDialogContent\n          settings = {settings}\n          onChangeLanguage = {onChangeLanguage}\n          onClose = {handleCloseClick} />\n    </Modal>\n  );\n};\n\ninterface ILanguageDialogContentProps {\n  settings: Settings;\n  onChangeLanguage: (language: LanguageCode) => void;\n  onClose: () => void;\n}\n\nconst LanguageDialogContent: React.FC<ILanguageDialogContentProps> = ({\n    settings, onChangeLanguage, onClose }: ILanguageDialogContentProps) => {\n  const handleChangeLanguage = (lang: LanguageCode) => {\n    onChangeLanguage(lang);\n    onClose();\n  };\n\n  const languageButtons = Object.values(LanguageCode).map(l => (\n    <ListGroup.Item key={l} action disabled={settings.language === l} onClick={() => handleChangeLanguage(l)}>{getMessagesFromLang(l)['1.display_name']}</ListGroup.Item>\n  ));\n\n  return (\n    <ListGroup>\n      {languageButtons}\n    </ListGroup>\n  );\n};\n\nexport default LanguageDialog;\n"],"names":["LanguageDialog","show","settings","onChangeLanguage","onClose","formatMessage","useIntl","messages","defineMessages","language_modal_title","id","description","defaultMessage","handleCloseClick","title","size","noCloseButton","LanguageDialogContent","languageButtons","Object","values","LanguageCode","map","l","action","disabled","language","onClick","getMessagesFromLang"],"sourceRoot":""}