{"version":3,"file":"static/js/219.6ee62831.chunk.js","mappings":"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","sources":["browse/components/ListRecipes.tsx","browse/components/Loading.tsx","browse/constants/DefaultFilters.ts","browse/store/FilterActions.ts","browse/components/Filter.tsx","browse/components/SearchMenu.tsx","browse/containers/SearchMenuContainer.tsx","browse/components/SearchBar.tsx","browse/components/SearchSummary.tsx","browse/components/Search.tsx","browse/containers/BrowsePage.tsx","common/components/Pagination.tsx","browse/components/Pagination.tsx","browse/components/Results.tsx","browse/components/NoResults.tsx","browse/containers/SearchResults.tsx","browse/store/SearchActions.ts","common/components/Button.tsx","common/components/PageWrapper.tsx","rating/components/Ratings.tsx","recipe/store/RecipeActions.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport '../css/list-recipes.css';\n\nimport Ratings from '../../rating/components/Ratings';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport { getRecipeImagePlaceholder, getResourcePath, getRoutePath } from '../../common/utility';\nimport Tooltip from '../../common/components/Tooltip';\n\nexport interface IListRecipes {\n  data:   Array<RecipeList> | undefined;\n  onOpenRecipe: (rec: RecipeList) => void;\n}\n\nfunction getRecipeImage(recipe: RecipeList) {\n  if (recipe.photoThumbnail) {\n    return recipe.photoThumbnail;\n  } else {\n    const images = ['fish', 'fried-eggs', 'pizza', 'soup', 'steak'];\n    return getResourcePath(`/images/${images[Math.floor(Math.random() * images.length)]}.jpg`);\n  }\n}\n\nconst ListRecipes: React.FC<IListRecipes> = ({ data, onOpenRecipe }: IListRecipes) => {\n  const IMAGE_PLACEHOLDER = useMemo(() => getRecipeImagePlaceholder(), []);\n\n  const recipes = data?.map(recipe => {\n    const link = getRoutePath(`/recipe/${recipe.slug}`);\n    return (\n      <Col key={recipe.id}>\n        <Card className={classNames('recipe')}>\n          <Link to={link} onClick={() => onOpenRecipe(recipe)}>\n            <Card.Img variant='top' src={getRecipeImage(recipe)} alt='' placeholder={IMAGE_PLACEHOLDER} />\n            <Card.Title as='h3'><Tooltip id={recipe.slug} tooltip={recipe.title} placement='bottom' className='card-title-tooltip'>{recipe.title}</Tooltip></Card.Title>\n            <div><Ratings stars={recipe.rating} /></div>\n            <Card.Text>{recipe.info}</Card.Text>\n          </Link>\n        </Card>\n      </Col>\n    );\n  });\n\n  return (\n    <Row xs={1} sm={2} lg={4} className='g-4 recipes-list'>\n      {recipes}\n    </Row>\n  );\n};\n\nexport default ListRecipes;\n","import { Col, Row } from 'react-bootstrap';\n\nimport CircularProgress from '../../common/components/CircularProgress';\n\nconst Loading: React.FC = () => (\n  <Row>\n    <Col xs={12}>\n      <Row id='browse'>\n        <div className='spinner'>\n          <CircularProgress />\n        </div>\n      </Row>\n    </Col>\n  </Row>\n);\n\nexport default Loading;\n","export interface PaginationProps {\n  limit:  number;\n  offset: number;\n  count:  number;\n}\n\nexport interface DefaultFilterProps extends PaginationProps {\n  ordering: string;\n}\n\nconst defaultFilters: Partial<DefaultFilterProps> = {\n  limit: 12,\n  ordering: '-pub_date',\n};\n\nexport default defaultFilters;\n","import { handleError, request } from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { BROWSE_FILTER_COURSE_STORE, BROWSE_FILTER_CUISINE_STORE, BROWSE_FILTER_RATING_STORE, BROWSE_FILTER_TAGS_STORE, FilterDispatch } from './FilterTypes';\nimport { objToSearchString } from '../../common/utility';\nimport { toBasicAction } from '../../common/store/redux';\n\nconst parsedFilter = (filters: Record<string, string>): Record<string, string> => {\n  const parsedFilters: Record<string, string> = {};\n  Object.keys(filters).forEach(f => {\n    if (!['limit', 'offset'].includes(f)) {\n      parsedFilters[f] = filters[f];\n    }\n  });\n  return parsedFilters;\n};\n\nexport const loadCourses = (filters: Record<string, string>) => (dispatch: FilterDispatch) => {\n  dispatch({ ...toBasicAction(BROWSE_FILTER_COURSE_STORE, ACTION.LOADING) });\n\n  request()\n    .get(serverURLs.course_count)\n    .query(parsedFilter(filters))\n    .then(res => (\n      dispatch({\n        ...toBasicAction(\n          BROWSE_FILTER_COURSE_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filters),\n        payload: res.body.results,\n      })\n    ))\n    .catch(err => dispatch(handleError(err, BROWSE_FILTER_COURSE_STORE)));\n};\n\nexport const loadCuisines = (filters: Record<string, string>) => (dispatch: FilterDispatch) => {\n  dispatch({ ...toBasicAction(BROWSE_FILTER_CUISINE_STORE, ACTION.LOADING) });\n\n  request()\n    .get(serverURLs.cuisine_count)\n    .query(parsedFilter(filters))\n    .then(res => (\n      dispatch({\n        ...toBasicAction(\n          BROWSE_FILTER_CUISINE_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filters),\n        payload: res.body.results,\n      })\n    ))\n    .catch(err => dispatch(handleError(err, BROWSE_FILTER_CUISINE_STORE)));\n};\n\nexport const loadRatings = (filter: Record<string, string>) => (dispatch: FilterDispatch) => {\n  dispatch({ ...toBasicAction(BROWSE_FILTER_RATING_STORE, ACTION.LOADING) });\n\n  request()\n    .get(serverURLs.rating_count)\n    .query(parsedFilter(filter))\n    .then(res => (\n      dispatch({\n        ...toBasicAction(\n          BROWSE_FILTER_RATING_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filter),\n        payload: res.body.results,\n      })\n    ))\n    .catch(err => dispatch(handleError(err, BROWSE_FILTER_RATING_STORE)));\n};\n\nexport const loadTags = (filters: Record<string, string>) => (dispatch: FilterDispatch) => {\n  dispatch({ ...toBasicAction(BROWSE_FILTER_TAGS_STORE, ACTION.LOADING) });\n\n  request()\n    .get(serverURLs.tag_count)\n    .query(parsedFilter(filters))\n    .then(res => (\n      dispatch({\n        ...toBasicAction(\n          BROWSE_FILTER_TAGS_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filters),\n        payload: res.body.results,\n      })\n    ))\n    .catch(err => {\n      // Older backend versions may not support this action.\n      if (err.status === 404) {\n        dispatch({\n          ...toBasicAction(\n            BROWSE_FILTER_TAGS_STORE,\n            ACTION.GET_SUCCESS\n          ),\n          id: objToSearchString(filters),\n          payload: [],\n        });\n      } else {\n        dispatch(handleError(err, BROWSE_FILTER_TAGS_STORE));\n      }\n    });\n};\n","import { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Accordion } from 'react-bootstrap';\n\nimport Icon from '../../common/components/Icon';\nimport { optionallyFormatMessage, sortByLabel } from '../../common/utility';\nimport Tooltip from '../../common/components/Tooltip';\nimport ConditionalWrapper from '../../common/components/ConditionalWrapper';\n\nconst messages = defineMessages({\n  filter_active: {\n    id: 'filter.active',\n    description: 'Hint for ScreenReader that the filter is active',\n    defaultMessage: 'active',\n  },\n});\n\nexport interface RecipeFilter {\n  id:      number;\n  title:   string;\n  slug:    string;\n  total?:  number;\n  rating?: number;\n}\n\nexport interface IFilterProps {\n  title:   string;\n  qsTitle: string;\n  qs:      Record<string, string>;\n  data:    Array<RecipeFilter> | undefined;\n  multiSelect?: boolean;\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n\n  sort?: 'off' | 'on';\n\n  cssClass?: string;\n}\n\ninterface EnhancedFilterData extends RecipeFilter {\n  label: string;\n  active: boolean;\n}\n\nconst Filter: React.FC<IFilterProps> = ({ title, qsTitle, data, qs, multiSelect, cssClass, buildUrl, sort }: IFilterProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const dataFormatted: Array<EnhancedFilterData> = useMemo(() => {\n    let res = (data\n      ?.map(item => {\n          let active = false;\n          if (qs[qsTitle]) {\n            if (qs[qsTitle].split(',').includes(item.slug)) {\n              active = true;\n            }\n          }\n\n          if (!active && (item.total == null || item.total === 0)) {\n            return undefined as unknown as EnhancedFilterData;\n          }\n\n          return ({\n            ...item,\n            label: optionallyFormatMessage(intl, `${qsTitle}.`, item.title),\n            active: active,\n          });\n        }) ?? [])\n      .filter(item => item != null);\n\n    if (sort == null || sort === 'on') {\n      res = res.sort(sortByLabel);\n    }\n\n    return res;\n  }, [data, qs, qsTitle]);\n\n  const items = useMemo(() => (\n    dataFormatted\n    .map(item => (\n      <li key={item.slug}>\n        <ConditionalWrapper\n            condition = {item.label.length > 10}\n            render = {childr => <Tooltip id={item.title} tooltip={item.label} placement='bottom' className='filter-title-tooltip'>{childr}</Tooltip>}>\n          <Link to={buildUrl(qsTitle, item.slug, multiSelect)} className={classNames('list-group-item list-group-item-action', { active: item.active })}>\n            <span className='name'>{item.label}</span>\n            <span className='count'>{`(${item.total})`}</span>\n            {item.active && <Icon icon='x-square' variant='light' aria-hidden='true' />}\n            <span className='sr-only'>{formatMessage(messages.filter_active)}</span>\n          </Link>\n        </ConditionalWrapper>\n      </li>\n    )) ?? []\n  ), [dataFormatted, qsTitle, multiSelect, buildUrl]);\n\n  if (data != null && items.length === 0) return null;\n\n  return (\n    <Accordion.Item eventKey={qsTitle} className={classNames('filter-group', cssClass)}>\n      <Accordion.Header as='h3' className='list-group-title'>{title}</Accordion.Header>\n      <Accordion.Body as='ul' className='filter-list'>\n        {items}\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n};\n\nexport default Filter;\n","import { useCallback, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Accordion, Button, Card } from 'react-bootstrap';\n\nimport '../css/filter.css';\n\nimport Filter from './Filter';\nimport Icon from '../../common/components/Icon';\nimport { CategoryCount, RatingCount } from '../store/FilterTypes';\n\nconst messages = defineMessages({\n  reset: {\n    id: 'filter.reset',\n    description: 'Filter reset',\n    defaultMessage: 'Reset',\n  },\n  filter_course: {\n    id: 'filter.filter_course',\n    description: 'Filter field course',\n    defaultMessage: 'Courses',\n  },\n  filter_cuisine: {\n    id: 'filter.filter_cuisine',\n    description: 'Filter field cuisine',\n    defaultMessage: 'Cuisines',\n  },\n  filter_rating: {\n    id: 'filter.filter_rating',\n    description: 'Filter field rating',\n    defaultMessage: 'Ratings',\n  },\n  filter_tag: {\n    id: 'filter.filter_tag',\n    description: 'Filter field tag',\n    defaultMessage: 'Tags',\n  },\n  title: {\n    id: 'filter.title',\n    description: 'Title',\n    defaultMessage: 'Title',\n  },\n  rating: {\n    id: 'filter.rating',\n    description: 'rating',\n    defaultMessage: 'Rating',\n  },\n  pub_date: {\n    id: 'filter.pub_date',\n    description: 'pub_date',\n    defaultMessage: 'Created Date',\n  },\n  filters: {\n    id: 'filter.filters',\n    description: 'Filters',\n    defaultMessage: 'Filters',\n  },\n  show_filters: {\n    id: 'filter.show_filters',\n    description: 'Show Filters',\n    defaultMessage: 'Show Filters',\n  },\n  hide_filters: {\n    id: 'filter.hide_filters',\n    description: 'Hide Filters',\n    defaultMessage: 'Hide Filters',\n  },\n  reset_filters: {\n    id: 'filter.reset_filters',\n    description: 'Reset Filters',\n    defaultMessage: 'Reset Filters',\n  },\n  filter_ordering: {\n    id: 'filter.filter_ordering',\n    description: 'Filter field ordering',\n    defaultMessage: 'Ordering',\n  },\n  x_stars: {\n    id: 'filter.x_stars',\n    description: 'X Stars',\n    defaultMessage: '{rating, number} stars',\n  },\n});\n\nexport interface ISearchMenuProps {\n  qs: Record<string, string>;\n  courses:  Array<CategoryCount> | undefined;\n  cuisines: Array<CategoryCount> | undefined;\n  ratings:  Array<RatingCount>   | undefined;\n  tags:     Array<CategoryCount> | undefined;\n\n  hasActiveFilter: boolean;\n  resetFilterUrl: string;\n  openFilters: Array<string>;\n  setOpenFilters: (filters: Array<string>) => void;\n\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\nconst SearchMenu: React.FC<ISearchMenuProps> = ({\n    qs, courses, cuisines, ratings, tags,\n    hasActiveFilter, resetFilterUrl, openFilters, setOpenFilters,\n    buildUrl }: ISearchMenuProps) => {\n  const { formatMessage } = useIntl();\n\n  const [showMenu, setShowMenu] = useState<boolean>(false);\n\n  const toggleMenu = useCallback(() => {\n    setShowMenu(prev => !prev);\n  }, []);\n\n  const mobileHeader = (\n    <div className='sidebar-header'>\n      <h2>\n        <Button type='button' variant='transparent' className='filter-header' onClick={toggleMenu}>\n          {showMenu ? formatMessage(messages.hide_filters) : formatMessage(messages.show_filters)}\n          <Icon icon={showMenu ? 'chevron-up' : 'chevron-down'} variant='light' className={classNames({ 'reset-margin': hasActiveFilter })} />\n        </Button>\n      </h2>\n      {hasActiveFilter && (\n        <div className='filter-header-clear'>\n          <Link className='clear-filter-mobile btn btn-transparent' to={resetFilterUrl}>\n            {formatMessage(messages.reset)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n\n  const handleSelect = useCallback((eventKey: string | string[] | null) => {\n    const newOpenFilters: Array<string> = Array.isArray(eventKey) ? eventKey : [(eventKey ?? '')];\n    setOpenFilters(newOpenFilters);\n  }, []);\n\n  return (\n    <Card>\n      <Card.Header className='visible-xs'>\n        {mobileHeader}\n      </Card.Header>\n      <Card.Header className='hidden-xs filter-title'>\n        <h2>{formatMessage(messages.filters)}</h2>\n        {hasActiveFilter && (\n          <Link className='clear-filter-desktop btn btn-transparent' to={resetFilterUrl} aria-label={formatMessage(messages.reset_filters)}>\n            <Icon icon='arrow-counterclockwise' variant='light' />\n          </Link>\n        )}\n      </Card.Header>\n      <Card.Text as='div' className={classNames('sidebar', { 'hidden-xs': !showMenu })}>\n        <Accordion activeKey={openFilters} flush alwaysOpen className='filter-group-list' onSelect={handleSelect as any}>\n          <Filter\n              title    = {formatMessage(messages.filter_course)}\n              qsTitle  = 'course'\n              data     = {courses}\n              qs       = {qs}\n              multiSelect\n              buildUrl = {buildUrl} />\n          <Filter\n              title    = {formatMessage(messages.filter_cuisine)}\n              qsTitle  = 'cuisine'\n              data     = {cuisines}\n              qs       = {qs}\n              multiSelect\n              buildUrl = {buildUrl} />\n          <Filter\n              title    = {formatMessage(messages.filter_rating)}\n              qsTitle  = 'rating'\n              data     = {ratings?.map(r => ({\n                  id:     r.rating,\n                  rating: r.rating,\n                  total:  r.total,\n                  slug:   r.rating.toString(),\n                  title:  formatMessage(messages.x_stars, { rating: r.rating }),\n              }))}\n              qs       = {qs}\n              multiSelect\n              buildUrl = {buildUrl}\n              sort = 'off' />\n          <Filter\n              title    = {formatMessage(messages.filter_tag)}\n              qsTitle  = 'tag'\n              data     = {tags}\n              qs       = {qs}\n              multiSelect\n              buildUrl = {buildUrl} />\n        </Accordion>\n        {hasActiveFilter && (\n          <div className='row reset-search-row print-hidden hidden-xs'>\n            <Link className='btn btn-outline-danger reset-search hidden-xs' to={resetFilterUrl}>\n              {formatMessage(messages.reset)}\n            </Link>\n          </div>\n        )}\n      </Card.Text>\n    </Card>\n  );\n};\n\nexport default SearchMenu;\n","import { useEffect, useMemo, useState } from 'react';\nimport { Dispatch } from 'redux';\n\nimport * as FilterActions from '../store/FilterActions';\nimport { RootState } from '../../app/Store';\nimport SearchMenu from '../components/SearchMenu';\nimport { getRoutePath } from '../../common/utility';\nimport { useDispatch, useSelector } from '../../common/store/redux';\n\nexport interface ISearchMenuContainerProps {\n  qs:       Record<string, string>;\n  qsString: string;\n\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\nconst SearchMenuContainer: React.FC<ISearchMenuContainerProps> = ({\n    qs, qsString, buildUrl }: ISearchMenuContainerProps) => {\n  const dispatch = useDispatch();\n\n  const courses  = useSelector((state: RootState) => state.browse.browserFilter.courses.items);\n  const cuisines = useSelector((state: RootState) => state.browse.browserFilter.cuisines.items);\n  const ratings  = useSelector((state: RootState) => state.browse.browserFilter.ratings.items);\n  const tags     = useSelector((state: RootState) => state.browse.browserFilter.tags.items);\n\n  const [openFilters, setOpenFilters] = useState<Array<string>>(Object.keys(qs));\n\n  const qsMergedDefaults = qs;\n\n  const reloadData = () => {\n    const dispatchQueue: Array<(dispatch: Dispatch) => void> = [];\n\n    if (openFilters.includes('course') && courses?.[qsString] == null) {\n      dispatchQueue.push(FilterActions.loadCourses(qsMergedDefaults));\n    }\n    if (openFilters.includes('cuisine') && cuisines?.[qsString] == null) {\n      dispatchQueue.push(FilterActions.loadCuisines(qsMergedDefaults));\n    }\n    if (openFilters.includes('rating') && ratings?.[qsString] == null) {\n      dispatchQueue.push(FilterActions.loadRatings(qsMergedDefaults));\n    }\n    if (openFilters.includes('tag') && tags?.[qsString] == null) {\n      dispatchQueue.push(FilterActions.loadTags(qsMergedDefaults));\n    }\n\n    let delay = 0;\n    const ADD_DELAY = 50;\n    for (let ix = 0; ix < dispatchQueue.length; ++ix) {\n      setTimeout(() => {\n        dispatch(dispatchQueue[ix]);\n      }, delay);\n      delay += ADD_DELAY;\n    }\n  };\n\n  useEffect(() => {\n    reloadData();\n  }, [reloadData, qsString, openFilters]);\n\n  const resetFilterUrl = useMemo(() => {\n    if (!qs.search) {\n      return getRoutePath('/browser');\n    } else {\n      const searchString = new URLSearchParams({ search: qs.search }).toString();\n      return getRoutePath(`/browser?${searchString}`);\n    }\n  }, [qs]);\n\n  const hasActiveFilter = Object.keys(qs).filter(key => !['limit', 'ordering', 'offset', 'search'].includes(key)).length !== 0;\n\n  return (\n    <SearchMenu\n        courses  = {courses?.[qsString]}\n        cuisines = {cuisines?.[qsString]}\n        ratings  = {ratings?.[qsString]}\n        tags     = {tags?.[qsString]}\n        qs       = {qs}\n\n        hasActiveFilter = {hasActiveFilter}\n        resetFilterUrl  = {resetFilterUrl}\n        openFilters    = {openFilters}\n        setOpenFilters = {setOpenFilters}\n\n        buildUrl = {buildUrl} />\n  );\n};\n\nexport default SearchMenuContainer;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport * as _ from 'lodash-es';\n\nimport Button from '../../common/components/Button';\nimport Icon from '../../common/components/Icon';\nimport Input from '../../common/components/Input/Input';\nimport InputAdornment from '../../common/components/Input/InputAdornment';\n\nconst messages = defineMessages({\n  search_title: {\n    id: 'searchbar.title',\n    description: 'Heading for the search page',\n    defaultMessage: 'Search',\n  },\n  input_placeholder: {\n    id: 'searchbar.placeholder',\n    description: 'SearchBar input placeholder',\n    defaultMessage: 'Enter a title, tag, or ingredient',\n  },\n  input_clear: {\n    id: 'input.clear',\n    description: 'Button to clear the input value (text)',\n    defaultMessage: 'Clear input',\n  },\n});\n\nexport interface ISearchBarProps {\n  value:  string;\n  doSearch: (value: string) => void;\n}\n\ninterface IFormData {\n  value: string;\n}\n\nconst SearchBar: React.FC<ISearchBarProps> = ({ value, doSearch }: ISearchBarProps) => {\n  const { formatMessage } = useIntl();\n\n  const [formData, setFormData] = useState<IFormData>({ value: value ?? '' });\n  const previousSearch = useRef<string>(value ?? '');\n\n  useEffect(() => {\n    if (formData.value !== value) {\n      setFormData({ value: value });\n    }\n  }, [value]);\n\n  useEffect(() => {\n    if (previousSearch.current !== formData.value) {\n      doSearch(formData.value);\n      previousSearch.current = formData.value;\n    }\n  }, [formData]);\n\n  const handleChange = useCallback((attr: string, val: string) => {\n    setFormData(prev => {\n      const newState = _.cloneDeep(prev);\n      _.set(newState, attr, val);\n      return newState;\n    });\n  }, []);\n\n  const handleClearInput = useCallback(() => {\n    setFormData({ value: '' });\n  }, []);\n\n  const clearInput = (\n    <InputAdornment position='end'>\n      <Button id='clear_search_input' variant='secondary' className='search-clear' onClick={handleClearInput} aria-label={formatMessage(messages.input_clear)}>\n        <Icon icon='x' variant='light' size='2x' />\n      </Button>\n    </InputAdornment>\n  );\n\n  return (\n    <>\n      <h1 className='sr-only'>{formatMessage(messages.search_title)}</h1>\n      <Input\n          name  = 'value'\n          value = {formData.value}\n          placeholder = {formatMessage(messages.input_placeholder)}\n          required\n          inputAdornmentStart = {<Icon icon='search' variant='light' />}\n          inputAdornmentEnd = {formData.value.length > 0 ? clearInput : undefined}\n          onChange = {handleChange}\n          debounceTimeout = {400}\n          className = 'search-bar' />\n    </>\n  );\n};\n\nexport default SearchBar;\n","import { useCallback } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { SearchResult } from '../store/SearchTypes';\nimport P from '../../common/components/P';\nimport DefaultFilters from '../constants/DefaultFilters';\nimport { optionallyFormatMessage, toNumberDefault } from '../../common/utility';\n\nconst messages = defineMessages({\n  search_summary_results: {\n    id: 'searchsummary.results',\n    description: 'Number of results, if there is no pagination.',\n    defaultMessage: '{resultsCount, plural, one {# result} other {# results}}',\n  },\n  search_summary_results_pagination: {\n    id: 'searchsummary.results_pagination',\n    description: 'Number of results, with pagination from - to.',\n    defaultMessage: '{offset}-{offsetLast} of {resultsCount} results',\n  },\n  search_summary_sort_by: {\n    id: 'searchsummary.sort_by',\n    description: 'Sort by title/...',\n    defaultMessage: 'Sort by: {sort}',\n  },\n\n  sort_by_pub_date: {\n    id: 'sort_by.pub_date',\n    defaultMessage: 'Create date',\n  },\n  sort_by_rating: {\n    id: 'sort_by.rating',\n    defaultMessage: 'Rating',\n  },\n  sort_by_title: {\n    id: 'sort_by.title',\n    defaultMessage: 'Title',\n  },\n});\n\nexport interface ISearchSummaryProps {\n  search:   SearchResult | undefined;\n  qs:       Record<string, string>;\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\nfunction toSortSlug(sort: string): string {\n  return sort.startsWith('-') ? sort.substring(1) : sort;\n}\n\nconst SearchSummary: React.FC<ISearchSummaryProps> = ({ search, qs, buildUrl }: ISearchSummaryProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const resultsCountD: number | undefined = search?.totalRecipes ?? 0;\n  const offset: number = toNumberDefault(qs.offset, 0);\n  const limit: number  = toNumberDefault(qs.limit, DefaultFilters.limit ?? 12);\n  const withPagination = search != null && search.totalRecipes > limit;\n  const currentSort    = qs.ordering != null ? toSortSlug(qs.ordering) : toSortSlug('-pub_date');\n\n  const handleSortByClick = useCallback((event: React.MouseEvent<HTMLAnchorElement>, sortSlug: string) => {\n    if (currentSort === sortSlug) {\n      event.preventDefault();\n    }\n  }, [currentSort]);\n\n  const dropdownItems = ['title', '-pub_date'].map(sort => {\n    const sortSlug = toSortSlug(sort);\n    return (\n      <Dropdown.Item key={sort} as={Link} to={buildUrl('ordering', sort)} active={currentSort === sortSlug} onClick={(event: React.MouseEvent<HTMLAnchorElement>) => handleSortByClick(event, sortSlug)}>\n        {optionallyFormatMessage(intl, 'sort_by.', sortSlug)}\n      </Dropdown.Item>\n    );\n  });\n\n  return (\n    <div className='search-summary'>\n      <P className='results'>\n        {withPagination  && formatMessage(messages.search_summary_results_pagination, { offset: offset + 1, offsetLast: Math.min(offset + limit, resultsCountD), resultsCount: resultsCountD })}\n        {!withPagination && formatMessage(messages.search_summary_results, { resultsCount: resultsCountD })}\n      </P>\n      <Dropdown className='sort-by-dropdown'>\n        <Dropdown.Toggle variant='outline-primary' id='sort-by-button' disabled={search == null}>\n          {formatMessage(messages.search_summary_sort_by, { sort: optionallyFormatMessage(intl, 'sort_by.', currentSort) })}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {dropdownItems}\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default SearchSummary;\n","import { Col, Row } from 'react-bootstrap';\n\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport { SearchResult } from '../store/SearchTypes';\nimport SearchResults from '../containers/SearchResults';\nimport SearchMenuContainer from '../containers/SearchMenuContainer';\nimport SearchBar from './SearchBar';\nimport Loading from './Loading';\nimport SearchSummary from './SearchSummary';\n\nexport interface ISearchProps {\n  search:   Record<string, SearchResult> | undefined;\n  qs:       Record<string, string>;\n  qsString: string;\n\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n  doSearch: (value: string) => void;\n  onOpenRecipe: (rec: RecipeList) => void;\n}\n\nconst Search: React.FC<ISearchProps> = ({\n    search, qs, qsString,\n    buildUrl, doSearch, onOpenRecipe }: ISearchProps) => {\n  const isInit  = search != null && Object.keys(search).length > 0;\n  const qsSearchResult = search?.[qsString];\n\n  return (\n    <>\n      <SearchBar\n          value    = {qs.search ?? ''}\n          doSearch = {doSearch} />\n      <SearchSummary\n          qs       = {qs}\n          search   = {qsSearchResult}\n          buildUrl = {buildUrl}\n          />\n      {!isInit && (\n        <Loading />\n      )}\n      {isInit && (\n        <Row>\n          <Col xs={12} className='filter-panel'>\n            <SearchMenuContainer\n                qs       = {qs}\n                qsString = {qsString}\n                buildUrl = {buildUrl}\n            />\n          </Col>\n          <Col xs={12} className='results-panel'>\n            <SearchResults\n                qs       = {qs}\n                qsString = {qsString}\n                buildUrl = {buildUrl}\n                onOpenRecipe = {onOpenRecipe}\n            />\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default Search;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useNavigate } from 'react-router';\nimport { useSearchParams } from 'react-router-dom';\nimport * as _ from 'lodash-es';\n\nimport '../css/browse.css';\n\nimport Search from '../components/Search';\nimport * as SearchActions from '../store/SearchActions';\nimport * as RecipeActions from '../../recipe/store/RecipeActions';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport DefaultFilters from '../constants/DefaultFilters';\nimport PageWrapper from '../../common/components/PageWrapper';\nimport { RootState } from '../../app/Store';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport { getRoutePath, objToSearchString } from '../../common/utility';\n\nexport function mergeDefaultFilters(\n    defaultFilters: Record<string, unknown>,\n    params: Record<string, string>\n  ): Record<string, string> {\n  const filterS: Record<string, string> = {};\n  Object.keys(defaultFilters).forEach(key => {\n    filterS[key] = String(defaultFilters[key]);\n  });\n\n  return _.merge(filterS, params);\n}\n\nexport function buildSearchString(route: string, qs: Record<string, string>, value: string): string {\n  const qsBuilder = _.cloneDeep(qs);\n\n  delete qsBuilder.offset;\n  if (value !== '') {\n    qsBuilder.search = value;\n  } else {\n    delete qsBuilder.search;\n  }\n\n  const str = objToSearchString(qsBuilder);\n  return getRoutePath(str ? `/${route}?${str}` : `/${route}`);\n}\n\nexport function buildSearchUrl(route: string, qs: Record<string, string>, name: string, value: string, multiSelect = false): string {\n  if (!name) return getRoutePath(`/${route}`);\n\n  const qsBuilder = _.cloneDeep(qs);\n\n  delete qsBuilder.offset;\n\n  if (value !== '') {\n    if (qsBuilder[name] && multiSelect) {\n      const query = qsBuilder[name].split(',');\n      if (query.includes(value.toString())) {\n        if (query.length === 1) {\n          delete qsBuilder[name];\n        } else {\n          let str = '';\n          // eslint-disable-next-line\n          query.map(val => { val != value ? str += val + ',' : ''});\n          qsBuilder[name] = str.substring(0, str.length - 1);\n        }\n      } else {\n        qsBuilder[name] = `${qsBuilder[name]},${value}`;\n      }\n    } else {\n      qsBuilder[name] = value;\n    }\n  } else {\n    delete qsBuilder[name];\n  }\n\n  const str = objToSearchString(qsBuilder);\n  return getRoutePath(str ? `/${route}?${str}` : `/${route}`);\n}\n\nconst BrowsePage: React.FC = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const nav = useNavigate();\n  const [searchParams] = useSearchParams();\n\n  const search   = useSelector((state: RootState) => state.browse.browserSearch.items);\n\n  const qs = useMemo(() => Object.fromEntries(searchParams), [searchParams]);\n  const qsMergedDefaults = useMemo(() => mergeDefaultFilters(DefaultFilters, qs), [DefaultFilters, qs]);\n  const qsMergedString = useMemo(() => objToSearchString(qsMergedDefaults), [qsMergedDefaults]);\n\n  useEffect(() => {\n    dispatch(SearchActions.loadRecipes(qsMergedDefaults));\n  }, [searchParams]);\n\n  const handleBuildUrl = useCallback((name: string, value: string, multiSelect = false) => (\n    buildSearchUrl('browser', qs, name, value, multiSelect)\n  ), [buildSearchUrl, qs]);\n\n  const doSearch = useCallback((value: string) => {\n    const str = buildSearchString('browser', qs, value);\n    nav(str);\n  }, [buildSearchString, qs, nav]);\n\n  const handleOpenRecipe = useCallback((rec: RecipeList) => {\n    dispatch(RecipeActions.preload(rec));\n  }, [dispatch]);\n\n  return (\n    <PageWrapper title={intl.messages['nav.recipes'] as string}>\n      <Search\n          qs        = {qsMergedDefaults}\n          qsString  = {qsMergedString}\n          buildUrl  = {handleBuildUrl}\n          doSearch  = {doSearch}\n          onOpenRecipe = {handleOpenRecipe}\n\n          search    = {search} />\n    </PageWrapper>\n  );\n};\n\nexport default BrowsePage;\n","import { forwardRef, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport '../css/pagination.css';\n\nimport { CommonProps } from '../types/OverridableComponent';\n\nexport interface IPaginationLinkProps extends CommonProps {\n  title:     string;\n  offset:    number;\n  active?:   boolean;\n  disabled?: boolean;\n  buildUrl:  (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\nexport const PaginationLink = forwardRef<HTMLLIElement, IPaginationLinkProps>(({\n    title, offset, active, buildUrl, disabled,\n    className, ...rest }: IPaginationLinkProps, ref) => {\n  const handleClick = useCallback((event: React.MouseEvent<HTMLAnchorElement>) => {\n    if (active || disabled) {\n      event.preventDefault();\n    }\n  }, [active, disabled]);\n\n  return (\n    <li className={classNames('page-item', className, { active: active, disabled: disabled })} {...rest} ref={ref}>\n      {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n      <Link className={classNames('page-link', 'btn-outline-primary', { active: active, disabled: disabled })} to={!disabled ? buildUrl('offset', offset.toString()) : '#'} onClick={handleClick}>\n        {title}\n      </Link>\n    </li>\n  );\n});\n","import { useMemo } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Pagination as BootstraPagination } from 'react-bootstrap';\n\nimport { PaginationLink } from '../../common/components/Pagination';\n\nconst messages = defineMessages({\n  pagination_previous: {\n    id: 'pagination.previous',\n    description: 'Button to previous pagination page',\n    defaultMessage: 'Previous',\n  },\n  pagination_next: {\n    id: 'pagination.next',\n    description: 'Button to next pagination page',\n    defaultMessage: 'Next',\n  },\n});\n\nexport interface IPaginationProps {\n  offset:   number;\n  limit:    number;\n  count:    number;\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\ninterface IPaginationNumbersListProps {\n  offset: number;\n  limit:  number;\n  count:  number;\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\ntype PaginationPageRole = 'first' | 'last' | 'page' | 'next' | 'skipper-far' | 'skipper-near';\n\ntype PaginationPageNumber = {\n  index: number;\n  role:  PaginationPageRole;\n}\n\nfunction getFakeRollForFiller(numOfGeneratedLinks: number): PaginationPageRole {\n  if (numOfGeneratedLinks < 4) {\n    return 'next';\n  } else if (numOfGeneratedLinks < 6) {\n    return 'skipper-near';\n  } else {\n    return 'skipper-far';\n  }\n}\n\nfunction generatePageList(page: number, pages: number): Array<PaginationPageNumber> {\n  const pageList: Array<PaginationPageNumber> = [];\n\n  const numOfLinks = 8;\n\n  if (pages <= numOfLinks) {\n    for (let i = 1; i <= pages; i++) {\n      pageList.push({ index: i, role: 'page' });\n    }\n    return pageList;\n  }\n\n  /**\n   * Rules: As SPA, we want a consistent number of links, to avoid jumping.\n   * - Always the first and last page.\n   * - Always the next following page.\n   * - 2 Skipper before current page. Place redundant ones after.\n   * - 2 Skipper behind current page to last page. Place redundant ones after.\n   */\n\n  // First page\n  if (page > 1) {\n    pageList.push({ index: 1, role: 'first' });\n  }\n\n  // Add 2 skipper before current page, if applicable.\n  let intervalEnd = 1; // first page\n  let previousPage = intervalEnd;\n  if (page > 3) {\n    const skipperStep = Math.round((page - previousPage) / 2);\n    previousPage = page - skipperStep;\n    pageList.push({ index: previousPage, role: 'skipper-far' });\n  }\n  if (page > 2) {\n    const skipperStep = Math.ceil((page - previousPage) / 3);\n    if (page - skipperStep !== previousPage) {\n      previousPage = page - skipperStep;\n      pageList.push({ index: previousPage, role: 'skipper-near' });\n    }\n  }\n\n  // Current page\n  previousPage = page;\n  pageList.push({ index: page, role: 'page' });\n\n  // Following page\n  if (previousPage < pages - 1) {\n    previousPage += 1;\n    pageList.push({ index: previousPage, role: page === 1 ? 'first' : 'next' });\n  }\n\n  // On page 1, page === first -> fill up\n  if (page === 1) {\n    previousPage += 1;\n    pageList.push({ index: previousPage, role: 'next' });\n  }\n\n  // Use remaining skippers, that could not been placed before the current page, additionally after the current page.\n  if (pageList.length <= 4 && previousPage < pages - 1) {\n    previousPage += 1;\n    pageList.push({ index: previousPage, role: 'skipper-far' });\n  }\n  if (pageList.length <= 4 && previousPage < pages - 1) {\n    previousPage += 1;\n    pageList.push({ index: previousPage, role: 'skipper-near' });\n  }\n\n  if (previousPage < pages - 1) {\n    // Add 2 skipper after current page, if applicable.\n    const ixPage = pageList.length - 1;\n    intervalEnd = pages;\n    if (previousPage < pages - 2) {\n      const skipperStep = Math.ceil((intervalEnd - previousPage) / 2);\n      intervalEnd = previousPage + skipperStep;\n      pageList.push({ index: intervalEnd, role: 'skipper-near' });\n    }\n    if (previousPage < pages - 1) {\n      const skipperStep = Math.ceil((intervalEnd - previousPage) / 3);\n      if (skipperStep > 0) {\n        intervalEnd = previousPage + skipperStep;\n        pageList.splice(ixPage + 1, 0, { index: intervalEnd, role: 'skipper-far' });\n      }\n    }\n  }\n\n  // Last page\n  if (page !== pages) {\n    pageList.push({ index: pages, role: 'last' });\n  }\n\n  // Fill remaining slots up (should be always maxSize buttons).\n  let ixPrevFiller = pageList.findIndex(p => p.index === page);\n  if (ixPrevFiller === -1) throw new Error('Internal error: Page index not found.');\n  while (pageList.length < numOfLinks && ixPrevFiller > 0) {\n    while (ixPrevFiller > 0) {\n      const baseValue = pageList[ixPrevFiller].index;\n      const prevVal = pageList[ixPrevFiller - 1].index;\n      if (baseValue - prevVal > 1) {\n        pageList.splice(ixPrevFiller, 0, { index: baseValue - 1, role: getFakeRollForFiller(pageList.filter(p => p.role !== 'skipper-far').length) });\n        break;\n      }\n      --ixPrevFiller;\n    }\n  }\n\n  return pageList;\n}\n\nconst PaginationNumbersList: React.FC<IPaginationNumbersListProps> = ({ offset, limit, count, buildUrl }: IPaginationNumbersListProps) => {\n  const numOfPages = Math.ceil(count / limit);\n  const currentPage = Math.ceil(offset / limit) + 1;\n\n  const pageList = useMemo(() => generatePageList(currentPage, numOfPages), [currentPage, numOfPages]);\n\n  const pageListJsx: Array<React.ReactNode> = pageList.map(p => (\n    <PaginationLink title={p.index.toString()} offset={limit * (p.index - 1)} key={p.index.toString()} active={currentPage === p.index} buildUrl={buildUrl} className={p.role} />\n  ));\n\n  return <>{pageListJsx}</>;\n};\n\nconst Pagination: React.FC<IPaginationProps> = ({ offset, limit, count, buildUrl }: IPaginationProps) => {\n  const { formatMessage } = useIntl();\n\n  const next = offset + limit;\n  const previous = offset - limit;\n\n  if (count <= limit) return null;\n\n  return (\n    <nav>\n      <BootstraPagination>\n        <PaginationLink title='←' offset={previous} key='previous' buildUrl={buildUrl} disabled={previous < 0} aria-label={formatMessage(messages.pagination_previous)} />\n        <PaginationNumbersList    offset={offset}   limit={limit}  buildUrl={buildUrl} count={count} />\n        <PaginationLink title='→' offset={next}     key='next'     buildUrl={buildUrl} disabled={next > count} aria-label={formatMessage(messages.pagination_previous)} />\n      </BootstraPagination>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import classNames from 'classnames';\nimport { useMemo } from 'react';\n\nimport { toNumberDefault } from '../../common/utility';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport { PaginationProps } from '../constants/DefaultFilters';\nimport { SearchResult } from '../store/SearchTypes';\nimport ListRecipes from './ListRecipes';\nimport Pagination from './Pagination';\n\nexport interface IResultsProps {\n  pending:  boolean;\n  search:   SearchResult;\n  qs:       Record<string, string>;\n  defaults: Partial<PaginationProps>;\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n  onOpenRecipe: (rec: RecipeList) => void;\n}\n\nconst Results: React.FC<IResultsProps> = ({ pending, search, qs, defaults, buildUrl, onOpenRecipe }: IResultsProps) => {\n  const listJsx = useMemo(() => (\n    <ListRecipes\n        data = {search.recipes}\n        onOpenRecipe = {onOpenRecipe} />\n  ), [search.recipes, onOpenRecipe]);\n\n  const paginationJsx = useMemo(() => (\n    <Pagination\n        limit    = {toNumberDefault(qs.limit, defaults.limit ?? 12)}\n        count    = {search.totalRecipes}\n        offset   = {toNumberDefault(qs.offset, defaults.offset ?? 0)}\n        buildUrl = {buildUrl} />\n  ), [search.totalRecipes, qs, defaults, buildUrl, onOpenRecipe]);\n\n  return (\n    <div className={classNames('results-container', { pending: pending })}>\n      {listJsx}\n      {paginationJsx}\n    </div>\n  );\n};\n\nexport default Results;\n","import { defineMessages, useIntl } from 'react-intl';\n\nimport P from '../../common/components/P';\n\nconst messages = defineMessages({\n  no_results: {\n    id: 'browse.no_results',\n    description: 'No results header',\n    defaultMessage: 'There are no results for your search.',\n  },\n});\n\nconst NoResults: React.FC = () => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <P className='no-results placeholder'>{formatMessage(messages.no_results)}</P>\n  );\n};\n\nexport default NoResults;\n","import { useEffect, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport { RootState } from '../../app/Store';\nimport { useSelector } from '../../common/store/redux';\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport DefaultFilters from '../constants/DefaultFilters';\nimport Results from '../components/Results';\nimport NoResults from '../components/NoResults';\nimport Loading from '../components/Loading';\nimport { SearchResult } from '../store/SearchTypes';\n\nconst messages = defineMessages({\n  search_results_heading: {\n    id: 'browse.results_heading',\n    description: 'Browser search results heading',\n    defaultMessage: 'Results',\n  },\n});\n\nexport interface ISearchResultsProps {\n  qs:       Record<string, string>;\n  qsString: string;\n\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n  onOpenRecipe: (rec: RecipeList) => void;\n}\n\nconst SearchResults: React.FC<ISearchResultsProps> = ({ qs, qsString, buildUrl, onOpenRecipe }: ISearchResultsProps) => {\n  const { formatMessage }  = useIntl();\n\n  const searchState = useSelector((state: RootState) => state.browse.browserSearch);\n  const pending = searchState.meta.pending === PendingState.LOADING;\n\n  const [searchResults, setSearchResults] = useState<SearchResult | undefined>(undefined);\n\n  useEffect(() => {\n    if (searchState.meta.pending === PendingState.COMPLETED) {\n      setSearchResults(searchState.items?.[qsString]);\n    }\n  }, [searchState.meta.pending, searchState.items]);\n\n  useEffect(() => {\n    const res = searchState.items?.[qsString];\n    if (res) {\n      setSearchResults(res);\n    }\n  }, [qsString]);\n\n  return (\n    <>\n      <h2 className='sr-only'>{formatMessage(messages.search_results_heading)}</h2>\n      {pending && !searchResults && <Loading />}\n      {!pending && (searchResults == null || searchResults.recipes.length === 0) && <NoResults />}\n      {searchResults != null && searchResults.recipes.length > 0 && (\n        <Results\n            pending  = {pending}\n            search   = {searchResults}\n            qs       = {qs}\n            defaults = {DefaultFilters}\n            buildUrl = {buildUrl}\n            onOpenRecipe = {onOpenRecipe}\n        />\n      )}\n    </>\n  );\n};\n\nexport default SearchResults;\n","import { handleError, request } from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { BROWSER_SEARCH_STORE, SearchDispatch, SearchResultDto, toSearchResult } from './SearchTypes';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { objToSearchString } from '../../common/utility';\nimport { toBasicAction } from '../../common/store/redux';\n\nconst FILTER_QUERY_PARAMETER_MAPPING: Record<string, string> = {\n  cuisine: 'cuisine__slug',\n  course:  'course__slug',\n  tag:     'tag__slug',\n};\n\nexport const loadRecipes = (filters: Record<string, string>) => (dispatch: SearchDispatch) => {\n  dispatch({ ...toBasicAction(BROWSER_SEARCH_STORE, ACTION.LOADING) });\n\n  const parsedFilters: Record<string, string> = {};\n  Object.keys(filters).forEach(f => {\n    if (filters[f] !== null) {\n      parsedFilters[f in FILTER_QUERY_PARAMETER_MAPPING ? FILTER_QUERY_PARAMETER_MAPPING[f] : f] = filters[f];\n    }\n  });\n\n  request()\n    .get(serverURLs.browse)\n    .query(parsedFilters)\n    .then(res => {\n      const resDto: SearchResultDto = res.body;\n      dispatch({\n        ...toBasicAction(\n          BROWSER_SEARCH_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filters),\n        payload: toSearchResult(resDto),\n      });\n    })\n    .catch(err => { dispatch(handleError(err, BROWSER_SEARCH_STORE)); });\n};\n\nexport const loadRandomRecipes = (filters: Record<string, string>) => (dispatch: SearchDispatch) => {\n  dispatch({ ...toBasicAction(BROWSER_SEARCH_STORE, ACTION.LOADING) });\n\n  const parsedFilters: Record<string, string> = {};\n  Object.keys(filters).forEach(f => {\n    if (filters[f] !== null) {\n      parsedFilters[f in FILTER_QUERY_PARAMETER_MAPPING ? FILTER_QUERY_PARAMETER_MAPPING[f] : f] = filters[f];\n    }\n  });\n\n  request()\n    .get(serverURLs.mini_browse)\n    .query(parsedFilters)\n    .then(res => {\n      const resDto: SearchResultDto = res.body;\n      dispatch({\n        ...toBasicAction(\n          BROWSER_SEARCH_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filters),\n        payload: toSearchResult(resDto),\n      });\n    })\n    .catch(err => { dispatch(handleError(err, BROWSER_SEARCH_STORE)); });\n};\n","import { forwardRef } from 'react';\nimport { Button as BootstrapButton } from 'react-bootstrap';\nimport { Placement } from 'react-bootstrap/esm/types';\n\nimport '../css/button.css';\nimport { CommonProps } from '../types/OverridableComponent';\nimport ConditionalWrapper from './ConditionalWrapper';\nimport Tooltip from './Tooltip';\n\nexport interface IButtonProps extends CommonProps {\n  id:         string;\n  type?:      'button' | 'reset' | 'submit';\n  variant?:   'primary' | 'secondary' | 'danger' | 'outline-primary' | 'outline-secondary' | 'outline-danger' | 'transparent';\n  size?:      'sm' | 'lg';\n  disabled?:  boolean;\n  onClick?:   (event: React.MouseEvent<HTMLButtonElement>) => void;\n\n  tooltip?:   string;\n  tooltipPlacement?: Placement;\n\n  children:   React.ReactNode;\n}\n\nconst Button = forwardRef<HTMLButtonElement, IButtonProps>(({\n  id,\n  tooltip, tooltipPlacement,\n  children, ...rest }: IButtonProps, ref) => (\n    <ConditionalWrapper\n        condition = {Boolean(tooltip)}\n        render = {childr => <Tooltip id={`${id}-tooltip`} tooltip={tooltip} placement={tooltipPlacement}>{childr}</Tooltip>}>\n      <BootstrapButton id={id} aria-label={tooltip || undefined} aria-describedby={undefined} {...rest} ref={ref}>\n        {children}\n      </BootstrapButton>\n    </ConditionalWrapper>\n));\n\nexport default Button;\n","import { useContext, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useLocation, useNavigate } from 'react-router';\n\nimport { AnyComponent } from '../../types/Types';\nimport DynamicHeightContext from '../context/DynamicHeightContext';\nimport ArrayReducerType from '../store/ArrayReducerType';\nimport ItemReducerType from '../store/ItemReducerType';\nimport { getEnv, getRoutePath } from '../utility';\nimport ErrorBoundary from './ErrorBoundary';\n\n/** {@link PageTitleFixer} Props. */\ninterface IPageWrapperProps {\n  /** Page title. */\n  title?:   string;\n  id?:      string;\n  state?:   ItemReducerType<unknown> | ArrayReducerType<unknown>;\n  /** Page component to render. */\n  children: AnyComponent;\n}\n\n/**\n * Strips slashes etc. of the path.\n *\n * Example:\n * location.pathname = /browse/\n * toCleanLocationPath = browse\n *\n * @param path - location.pathname\n *\n * @return Nice path without gibberish.\n */\nfunction toCleanLocationPath(path: string): string {\n  const pathNoHost      = path.startsWith(getEnv('PUBLIC_URL') ?? '') ? path.substring((getEnv('PUBLIC_URL') ?? '').length) : path;\n  const startsWithSlash = pathNoHost.startsWith('/');\n  const endsWithSlash   = pathNoHost.endsWith('/');\n  const pathNoSlashes   = pathNoHost.substring(startsWithSlash ? 1 : 0, endsWithSlash ? pathNoHost.length - 1 : undefined);\n\n  return pathNoSlashes;\n}\n\n/**\n * HOC to properly set the browser title to assure accessibilty.\n */\n const PageWrapper: React.FC<IPageWrapperProps> = ({ title, id, state, children }: IPageWrapperProps) => {\n  const nav = useNavigate();\n  const location = useLocation();\n  const error = state?.meta.error;\n\n  const dynamicHeightContext = useContext(DynamicHeightContext);\n\n  useEffect(() => {\n    // ARIA: Titles should contain the application name and page title.\n    document.title = (`${title != null && title.length > 0 ? `${title} | ` : ''}OwnRecipes`);\n  }, [title]);\n\n  useEffect(() => {\n    if (error && id == null) {\n      const p = getRoutePath('/NotFound');\n      // console.log(`[PageWrapper] nav to \"${p}\"`);\n      nav(p);\n    }\n  }, [id, error]);\n\n  return (\n    <Container id='main-container' as='main' className={toCleanLocationPath(location.pathname)} style={{ marginTop: `${dynamicHeightContext.toolbarHeight}px` }}>\n      <ErrorBoundary verbose printStack>\n        {children}\n      </ErrorBoundary>\n    </Container>\n  );\n};\n\nexport default PageWrapper;\n","import { useCallback } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Button } from 'react-bootstrap';\n\nimport '../css/ratings.css';\n\nimport Icon from '../../common/components/Icon';\nimport ConditionalWrapper from '../../common/components/ConditionalWrapper';\n\nexport interface IRatingsProps {\n  stars: number;\n  onChange?: (stars: number) => void;\n}\n\ninterface IStarProps {\n  stars: number;\n  num:   number;\n  onChange?: (stars: number) => void;\n}\n\nconst Star: React.FC<IStarProps> = ({ stars, num, onChange }: IStarProps) => {\n  const { formatMessage } = useIntl();\n  const messages = defineMessages({\n    star_alt: {\n      id: 'rating_comments.star_alt',\n      description: 'Alt text for star button, for screen reader.',\n      defaultMessage: 'Select to rate item {stars, plural, one {# star} other {# stars}}',\n    },\n  });\n\n  const handleClick = useCallback(() => {\n    onChange?.(num);\n  }, [onChange, num]);\n\n  const isHalfFilled = stars > (num - 1) && stars < num;\n  const icon = isHalfFilled ? 'star-half' : 'star';\n  const variant = num > stars || isHalfFilled ? 'light' : 'filled';\n\n  return (\n    <ConditionalWrapper\n        condition = {onChange != null}\n        render    = {childr => <Button variant='transparent' className='rating' onClick={handleClick}>{childr}</Button>}\n        key={num}>\n      <Icon key={num} icon={icon} variant={variant} size={onChange != null ? '2x' : '1x'} ariaLabel={onChange ? formatMessage(messages.star_alt, { stars: num }) : undefined} />\n    </ConditionalWrapper>\n  );\n};\n\nconst Ratings: React.FC<IRatingsProps> = ({ stars, onChange }: IRatingsProps) => {\n  const { formatMessage } = useIntl();\n  const messages = defineMessages({\n    stars_alt: {\n      id: 'rating_comments.stars_alt',\n      description: 'Alt text for read-only stars (view).',\n      defaultMessage: '{stars} out of 5 stars',\n    },\n  });\n\n  let starss = stars;\n  if (stars > 5) {\n    starss = 5;\n  } else if (stars < 0) {\n    starss = 0;\n  }\n\n  const starsList: Array<React.ReactNode> = Array.from({ length: 5 }, (_, i) => i + 1).map(num => (\n    <Star key={num} stars={starss} num={num} onChange={onChange} />\n  ));\n\n  return (\n    <div className='rating-stars'>\n      <span aria-hidden>{starsList}</span>\n      <span className='sr-only'>{formatMessage(messages.stars_alt, { stars: starss })}</span>\n    </div>\n  );\n};\n\nexport default Ratings;\n","import { handleError, request } from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { Recipe, RecipeAction, RecipeActionTypes, RecipeDispatch, RecipeDto, RECIPE_STORE, toRecipe } from './RecipeTypes';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { toBasicAction } from '../../common/store/redux';\n\nexport const getRecipeSuccess = (recipe: Recipe): RecipeAction => (\n  { ...toBasicAction(RECIPE_STORE, ACTION.GET_SUCCESS), payload: recipe }\n);\n\nexport const load = (recipeSlug: string) => (dispatch: RecipeDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.recipe}${recipeSlug}/`)\n    .then(res => {\n      dispatch(getRecipeSuccess(toRecipe(res.body as RecipeDto)));\n    })\n    .catch(err => dispatch(handleError(err, RECIPE_STORE)));\n};\n\nexport const deleteRecipe = (id: number, recipeSlug: string) => (dispatch: RecipeDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_STORE, ACTION.DELETE_START) });\n  request()\n    .delete(`${serverURLs.recipe}${recipeSlug}/`)\n    .then(() => {\n      dispatch({ ...toBasicAction(RECIPE_STORE, RecipeActionTypes.RECIPE_DELETE), payload: { id: id } });\n    })\n    .catch(err => dispatch(handleError(err, RECIPE_STORE)));\n};\n\nexport const updateServings = (recipeSlug: string, value: number) => (dispatch: RecipeDispatch) => {\n  dispatch({\n    ...toBasicAction(\n      RECIPE_STORE,\n      RecipeActionTypes.RECIPE_INGREDIENT_SERVINGS_UPDATE\n    ),\n    payload: {\n      recipeSlug: recipeSlug,\n      customServings: value,\n    },\n  });\n};\n\nexport const preload = (recipe: Partial<Recipe>) => (dispatch: RecipeDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_STORE, ACTION.PRELOAD), payload: recipe });\n};\n\nexport const reset = () => (dispatch: RecipeDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_STORE, ACTION.RESET) });\n};\n"],"names":["getRecipeImage","recipe","photoThumbnail","images","getResourcePath","concat","Math","floor","random","length","_ref","data","onOpenRecipe","IMAGE_PLACEHOLDER","useMemo","getRecipeImagePlaceholder","recipes","map","link","getRoutePath","slug","_jsx","Col","children","Card","className","classNames","_jsxs","Link","to","onClick","variant","src","alt","placeholder","as","Tooltip","id","tooltip","title","placement","Ratings","stars","rating","info","Row","xs","sm","lg","CircularProgress","limit","ordering","parsedFilter","filters","parsedFilters","Object","keys","forEach","f","includes","messages","defineMessages","filter_active","description","defaultMessage","qsTitle","qs","multiSelect","cssClass","buildUrl","sort","intl","useIntl","formatMessage","dataFormatted","_data$map","res","item","active","split","total","_objectSpread","label","optionallyFormatMessage","filter","sortByLabel","items","_dataFormatted$map","ConditionalWrapper","condition","render","childr","Icon","icon","Accordion","eventKey","reset","filter_course","filter_cuisine","filter_rating","filter_tag","pub_date","show_filters","hide_filters","reset_filters","filter_ordering","x_stars","courses","cuisines","ratings","tags","hasActiveFilter","resetFilterUrl","openFilters","setOpenFilters","_useState","useState","_useState2","_slicedToArray","showMenu","setShowMenu","toggleMenu","useCallback","prev","mobileHeader","Button","type","handleSelect","newOpenFilters","Array","isArray","activeKey","flush","alwaysOpen","onSelect","Filter","r","toString","qsString","dispatch","useDispatch","useSelector","state","browse","browserFilter","qsMergedDefaults","reloadData","dispatchQueue","push","toBasicAction","BROWSE_FILTER_COURSE_STORE","ACTION","request","get","serverURLs","query","then","objToSearchString","payload","body","results","catch","err","handleError","BROWSE_FILTER_CUISINE_STORE","FilterActions","BROWSE_FILTER_RATING_STORE","BROWSE_FILTER_TAGS_STORE","status","delay","_loop","ix","setTimeout","useEffect","search","searchString","URLSearchParams","key","SearchMenu","search_title","input_placeholder","input_clear","value","doSearch","formData","setFormData","previousSearch","useRef","current","handleChange","attr","val","newState","_","handleClearInput","clearInput","InputAdornment","position","size","_Fragment","Input","name","required","inputAdornmentStart","inputAdornmentEnd","undefined","onChange","debounceTimeout","search_summary_results","search_summary_results_pagination","search_summary_sort_by","sort_by_pub_date","sort_by_rating","sort_by_title","toSortSlug","startsWith","substring","_search$totalRecipes","_DefaultFilters$limit","resultsCountD","totalRecipes","offset","toNumberDefault","DefaultFilters","withPagination","currentSort","handleSortByClick","event","sortSlug","preventDefault","dropdownItems","Dropdown","P","offsetLast","min","resultsCount","disabled","_qs$search","isInit","qsSearchResult","SearchBar","SearchSummary","Loading","SearchMenuContainer","SearchResults","mergeDefaultFilters","defaultFilters","params","filterS","String","buildSearchString","route","qsBuilder","str","buildSearchUrl","arguments","nav","useNavigate","_useSearchParams","useSearchParams","searchParams","browserSearch","fromEntries","qsMergedString","SearchActions","handleBuildUrl","handleOpenRecipe","rec","RecipeActions","PageWrapper","Search","PaginationLink","forwardRef","ref","rest","_objectWithoutProperties","_excluded","handleClick","pagination_previous","pagination_next","PaginationNumbersList","count","numOfPages","ceil","currentPage","pageListJsx","page","pages","pageList","i","index","role","intervalEnd","previousPage","skipperStep","round","ixPage","splice","numOfGeneratedLinks","ixPrevFiller","findIndex","p","Error","baseValue","generatePageList","_ref2","next","previous","BootstraPagination","pending","defaults","listJsx","ListRecipes","paginationJsx","_defaults$limit","_defaults$offset","Pagination","no_results","search_results_heading","searchState","meta","PendingState","searchResults","setSearchResults","_searchState$items","_searchState$items2","NoResults","Results","FILTER_QUERY_PARAMETER_MAPPING","cuisine","course","tag","loadRecipes","BROWSER_SEARCH_STORE","resDto","toSearchResult","loadRandomRecipes","tooltipPlacement","Boolean","BootstrapButton","toCleanLocationPath","path","_getEnv","_getEnv2","pathNoHost","getEnv","startsWithSlash","endsWithSlash","endsWith","location","useLocation","error","dynamicHeightContext","useContext","DynamicHeightContext","document","Container","pathname","style","marginTop","toolbarHeight","ErrorBoundary","verbose","printStack","Star","num","star_alt","isHalfFilled","ariaLabel","stars_alt","starss","starsList","from","getRecipeSuccess","RECIPE_STORE","load","recipeSlug","toRecipe","deleteRecipe","delete","RecipeActionTypes","updateServings","customServings","preload"],"sourceRoot":""}