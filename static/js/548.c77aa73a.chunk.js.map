{"version":3,"file":"static/js/548.c77aa73a.chunk.js","mappings":"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","sources":["account/components/LoginAlert.tsx","account/components/LoginForm.tsx","account/components/SignUpInfo.tsx","account/containers/LoginPage.tsx","common/components/PageWrapper.tsx","common/components/Input/Checkbox.tsx","common/components/ReduxForm/ReCheckbox.tsx","common/components/ReduxForm/ReInitialValuesResetter.tsx","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["import { defineMessages, useIntl } from 'react-intl';\n\nimport Alert from '../../common/components/Alert';\n\nexport interface ILoginAlert {\n  submitError: boolean;\n}\n\nconst LoginAlert: React.FC<ILoginAlert> = ({ submitError }: ILoginAlert) => {\n  const { formatMessage } = useIntl();\n\n  const messages = defineMessages({\n    errorTitle: {\n      id: 'login.alert.error_title',\n      description: 'Fail to login header',\n      defaultMessage: 'Login failed',\n    },\n    errorMessage: {\n      id: 'login.alert.incorrect_credentials',\n      description: 'Fail to login message',\n      defaultMessage: 'Incorrect username or password.',\n    },\n  });\n\n  if (!submitError) return null;\n\n  return (\n    <Alert severity='danger' title={formatMessage(messages.errorTitle)}>\n      {formatMessage(messages.errorMessage)}\n    </Alert>\n  );\n};\n\nexport default LoginAlert;\n","import { useMemo } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Form as ReduxForm, FormSpy } from 'react-final-form';\n\nimport '../css/login.css';\n\nimport Icon from '../../common/components/Icon';\nimport InitialValuesResetter from '../../common/components/ReduxForm/ReInitialValuesResetter';\nimport ReInput from '../../common/components/ReduxForm/ReInput';\nimport ReCheckbox from '../../common/components/ReduxForm/ReCheckbox';\nimport LoginAlert from './LoginAlert';\n\nexport interface ILoginFormProps {\n  onSubmit: (username: string, password: string, remember: boolean) => void;\n}\n\ntype LoginFormData = {\n  username: string;\n  password: string;\n  remember: boolean;\n}\n\nconst LoginForm: React.FC<ILoginFormProps> = ({ onSubmit }: ILoginFormProps) => {\n  const intl = useIntl();\n\n  const { formatMessage } = intl;\n  const messages = defineMessages({\n    please_sign_in: {\n      id: 'login.please_sign_in',\n      description: 'Please sign in header',\n      defaultMessage: 'Sign In',\n    },\n    username: {\n      id: 'login.username',\n      description: 'Username placeholder',\n      defaultMessage: 'Username',\n    },\n    password: {\n      id: 'login.password',\n      description: 'Password placeholder',\n      defaultMessage: 'Password',\n    },\n    remember: {\n      id: 'login.remember',\n      description: 'Remember checkbox',\n      defaultMessage: 'Remember me for 14 days',\n    },\n    sign_in: {\n      id: 'login.sign_in',\n      description: 'Sign in button',\n      defaultMessage: 'Sign in',\n    },\n  });\n\n  const handleSubmit = (form: LoginFormData) => onSubmit(form.username, form.password, form.remember);\n\n  const initialValues = useMemo(() => ({ remember: true }), []);\n\n  return (\n    <ReduxForm\n        initialValues = {initialValues}\n        onSubmit = {handleSubmit}\n        subscription = {{}}\n        render = {({ form, handleSubmit: renderSubmit }) => (\n          <Form className='form-signin' onSubmit={renderSubmit}>\n            <InitialValuesResetter form={form} initialValues={initialValues} />\n            <FormSpy subscription={{ submitError: true }}>\n              {({ submitError }) => (\n                <LoginAlert submitError={submitError} />\n              )}\n            </FormSpy>\n\n            <h2 className='form-signin-heading'>{formatMessage(messages.please_sign_in)}</h2>\n            <ReInput\n                name  = 'username'\n                placeholder = {formatMessage(messages.username)}\n                autoComplete = 'username'\n                required\n                inputAdornmentStart = {<Icon icon='person' size='2x' />} />\n            <ReInput\n                name  = 'password'\n                type  = 'password'\n                placeholder = {formatMessage(messages.password)}\n                autoComplete = 'password'\n                required\n                inputAdornmentStart = {<Icon icon='key' size='2x' />} />\n\n            <ReCheckbox\n                name  = 'remember'\n                label = {formatMessage(messages.remember)} />\n\n            <FormSpy subscription={{ submitting: true }}>\n              {({ submitting }) => (\n                <Button variant='primary' type='submit' disabled={submitting}>\n                  {formatMessage(messages.sign_in)}\n                </Button>\n              )}\n            </FormSpy>\n          </Form>\n    )} />\n  );\n};\n\nexport default LoginForm;\n","import { defineMessages, useIntl } from 'react-intl';\n\nimport P from '../../common/components/P';\n\nconst SignUpInfo: React.FC = () => {\n  const { formatMessage } = useIntl();\n\n  const messages = defineMessages({\n    sign_up_info: {\n      id: 'login.sign_up_info',\n      description: 'Info that the sign up is handled by the admin.',\n      defaultMessage: 'Not signed up, yet? OwnRecipes is a private instance. Kindly ask the administrator to sign up an account for you.',\n    },\n  });\n\n  return (\n    <P variant='body2'>\n      {formatMessage(messages.sign_up_info)}\n    </P>\n  );\n};\n\nexport default SignUpInfo;\n","import React, { useCallback } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Modal } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport '../../common/css/modal.css';\nimport '../css/login.css';\n\nimport * as AuthActions from '../store/actions';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport PageWrapper from '../../common/components/PageWrapper';\nimport LoginForm from '../components/LoginForm';\nimport SignUpInfo from '../components/SignUpInfo';\nimport { CombinedStore } from '../../app/Store';\nimport PageSpinner from '../../app/components/PageSpinner';\n\nconst LoginPage: React.FC = () => {\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  const accountMeta = useSelector((state: CombinedStore) => state.account.meta);\n\n  const handleLogin = useCallback(async (username: string, password: string, remember: boolean) => AuthActions.getToken(dispatch, username, password, remember), [dispatch]);\n\n  return (\n    <PageWrapper title={intl.messages['nav.login.title'] as string}>\n      <Modal.Dialog className='form-signin'>\n        <Modal.Header className='form-header'>\n          <h1>OwnRecipes</h1>\n        </Modal.Header>\n        <Modal.Body>\n          <>\n            <div className={classNames('login-form-wrapper', { autologin: [PendingState.LOADING].includes(accountMeta.pending) })}>\n              <LoginForm onSubmit={handleLogin} />\n              <hr />\n              <SignUpInfo />\n            </div>\n            {[PendingState.LOADING].includes(accountMeta.pending) && (\n              <PageSpinner />\n            )}\n          </>\n        </Modal.Body>\n      </Modal.Dialog>\n    </PageWrapper>\n  );\n};\n\nexport default LoginPage;\n","import { useContext, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useLocation, useNavigate } from 'react-router';\n\nimport { AnyComponent } from '../../types/Types';\nimport DynamicHeightContext from '../context/DynamicHeightContext';\nimport ArrayReducerType from '../store/ArrayReducerType';\nimport ItemReducerType from '../store/ItemReducerType';\nimport { getEnv, getResourcePath } from '../utility';\nimport ErrorBoundary from './ErrorBoundary';\n\n/** {@link PageTitleFixer} Props. */\ninterface IPageWrapperProps {\n  /** Page title. */\n  title?:   string;\n  id?:      string;\n  state?:   ItemReducerType<unknown> | ArrayReducerType<unknown>;\n  /** Page component to render. */\n  children: AnyComponent;\n}\n\n/**\n * Strips slashes etc. of the path.\n *\n * Example:\n * location.pathname = /browse/\n * toCleanLocationPath = browse\n *\n * @param path - location.pathname\n *\n * @return Nice path without gibberish.\n */\nfunction toCleanLocationPath(path: string): string {\n  const pathNoHost      = path.startsWith(getEnv('PUBLIC_URL') ?? '') ? path.substring((getEnv('PUBLIC_URL') ?? '').length) : path;\n  const startsWithSlash = pathNoHost.startsWith('/');\n  const endsWithSlash   = pathNoHost.endsWith('/');\n  const pathNoSlashes   = pathNoHost.substring(startsWithSlash ? 1 : 0, endsWithSlash ? pathNoHost.length - 1 : undefined);\n\n  return pathNoSlashes;\n}\n\n/**\n * HOC to properly set the browser title to assure accessibilty.\n */\n const PageWrapper: React.FC<IPageWrapperProps> = ({ title, id, state, children }: IPageWrapperProps) => {\n  const nav = useNavigate();\n  const location = useLocation();\n  const error = state?.meta.error;\n\n  const dynamicHeightContext = useContext(DynamicHeightContext);\n\n  useEffect(() => {\n    // ARIA: Titles should contain the application name and page title.\n    document.title = (`${title != null && title.length > 0 ? `${title} | ` : ''}OwnRecipes`);\n  }, [title]);\n\n  useEffect(() => {\n    if (error && id == null) {\n      nav(getResourcePath('/NotFound'));\n    }\n  }, [id, error]);\n\n  return (\n    <Container className={toCleanLocationPath(location.pathname)} style={{ marginTop: `${dynamicHeightContext.toolbarHeight}px` }}>\n      <ErrorBoundary verbose printStack>\n        {children}\n      </ErrorBoundary>\n    </Container>\n  );\n};\n\nexport default PageWrapper;\n","import { createRef } from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../../css/checkbox.css';\n\nimport BaseInputComponent, { IBaseInputComponentProps } from './BaseInputComponent';\nimport Tooltip from '../Tooltip';\nimport ConditionalWrapper from '../ConditionalWrapper';\nimport Icon from '../Icon';\n\nexport interface ICheckboxProps extends IBaseInputComponentProps {\n  value?: boolean;\n\n  onChange?: (name: string, newValue: boolean) => void;\n}\n\nexport default class Checkbox extends BaseInputComponent<ICheckboxProps> {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private ref = createRef<any>();\n\n  focus(): boolean { // eslint-disable-line react/no-unused-class-component-methods\n    if (this.ref != null && this.ref.current) {\n      this.ref.current.focus();\n      return true;\n    }\n    return false;\n  }\n\n  getLabel(): React.ReactNode | undefined { // eslint-disable-line react/no-unused-class-component-methods\n    if (this.props.label == null) {\n      return null;\n    } else if (this.props.tooltip) {\n      return (\n        <>\n          {this.props.label}\n          &nbsp;\n          <Icon icon='info-circle' className='tooltip-icon' />\n        </>\n      );\n    } else {\n      return this.props.label;\n    }\n  }\n\n  handleChange = () => {\n    // event: React.ChangeEvent<HTMLInputElement>\n    // NOTE: bootstrap will pass as event.target.value always \"on\".\n    if (this.props.readOnly || this.props.disabled) return;\n    if (this.props.onChange) {\n      this.props.onChange(this.props.name, !this.props.value);\n    }\n  };\n\n  render() {\n    // console.log(`[Checkbox] name=${this.props.name}`);\n\n    return (\n      <Form.Group\n          controlId = {this.props.name}\n          className = {this.getFormGroupClassNames()}>\n        <ConditionalWrapper\n            condition = {this.props.tooltip != null}\n            render    = {childr => <Tooltip id={`${this.props.name}-tooltip`} tooltip={this.props.tooltip}>{childr}</Tooltip>}>\n          {this.getHelpText()}\n          {this.getErrorMessage()}\n          <Form.Check\n              name  = {this.props.name}\n              checked = {this.props.value}\n              label = {this.getLabel()}\n\n              required  = {this.props.required}\n              readOnly  = {this.props.readOnly}\n              autoComplete = {this.props.autoComplete}\n              autoFocus = {this.props.autoFocus}\n\n              onChange  = {this.handleChange}\n              onBlur    = {this.props.onBlur}\n              onFocus   = {this.props.onFocus}\n              ref = {this.ref} />\n        </ConditionalWrapper>\n      </Form.Group>\n    );\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { forwardRef } from 'react';\nimport { Field } from 'react-final-form';\nimport { useIntl } from 'react-intl';\n\nimport { formatValidation, requiredValidator } from '../../store/Validation';\nimport Checkbox,  { ICheckboxProps } from '../Input/Checkbox';\n\nexport type IReCheckboxProps = {\n  format?: (value: any, name: string) => boolean;\n  parse?:  (value: any, name: string) => any;\n} & Omit<ICheckboxProps, 'value'>;\n\nconst ReCheckbox = forwardRef<Checkbox, IReCheckboxProps>(({\n    name, required, format, parse,\n    onChange, onFocus, onBlur, ...rest }: IReCheckboxProps, ref) => {\n  const intl = useIntl();\n\n  return (\n    <Field name={name} validate={required ? requiredValidator : undefined} validateFields={[]} format={format} parse={parse}>\n      {fprops => (\n        <Checkbox\n            {...rest}\n            required = {required}\n\n            name     = {fprops.input.name}\n            value    = {fprops.input.value ?? false}\n            errors   = {formatValidation(intl, fprops.meta.error || (!fprops.meta.dirtySinceLastSubmit ? fprops.meta.submitError : undefined))}\n            meta     = {fprops.meta}\n            onChange = {(namee: string, value: boolean) => { fprops.input.onChange(value); onChange?.(namee, value); }}\n            onFocus  = {(event: React.FocusEvent<HTMLElement, Element>) => { fprops.input.onFocus(event); onFocus?.(event); }}\n            onBlur   = {(event: React.FocusEvent<HTMLElement, Element>) => { fprops.input.onBlur(event);  onBlur?.(event); }}\n            ref = {ref} />\n      )}\n    </Field>\n  );\n});\n\nexport default ReCheckbox;\n","import { useEffect } from 'react';\nimport { FormApi } from 'final-form';\n\ninterface IInitialValuesResetterProps<T> {\n  form: FormApi<T, Partial<T>>;\n  initialValues: Partial<T> | undefined;\n}\nconst InitialValuesResetter = <T = {}>({ form, initialValues }: IInitialValuesResetterProps<T>) => {\n  useEffect(() => {\n    if (form && form.restart != null) {\n      // console.log('Reset form');\n      form.restart(initialValues);\n    }\n  }, [initialValues]);\n\n  return null;\n};\n\nexport default InitialValuesResetter;\n","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n\n  baseModalStyle.display = 'block';\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["submitError","formatMessage","useIntl","messages","defineMessages","errorTitle","id","description","defaultMessage","errorMessage","Alert","severity","title","onSubmit","please_sign_in","username","password","remember","sign_in","initialValues","useMemo","form","subscription","render","renderSubmit","handleSubmit","Form","className","ReInput","name","placeholder","autoComplete","required","inputAdornmentStart","Icon","icon","size","type","ReCheckbox","label","submitting","Button","variant","disabled","sign_up_info","P","dispatch","useDispatch","intl","accountMeta","useSelector","state","account","meta","handleLogin","useCallback","AuthActions","PageWrapper","Modal","classNames","autologin","PendingState","includes","pending","PageSpinner","toCleanLocationPath","path","pathNoHost","startsWith","getEnv","substring","length","startsWithSlash","endsWithSlash","endsWith","undefined","children","nav","useNavigate","location","useLocation","error","dynamicHeightContext","useContext","DynamicHeightContext","useEffect","document","getResourcePath","pathname","style","marginTop","toolbarHeight","verbose","printStack","Checkbox","ref","createRef","handleChange","props","readOnly","onChange","value","this","current","focus","tooltip","controlId","getFormGroupClassNames","ConditionalWrapper","condition","childr","Tooltip","getHelpText","getErrorMessage","checked","getLabel","autoFocus","onBlur","onFocus","BaseInputComponent","forwardRef","format","parse","rest","validate","requiredValidator","validateFields","fprops","input","errors","formatValidation","dirtySinceLastSubmit","namee","event","restart","scrollbarSize","recalc","canUseDOM","scrollDiv","createElement","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","createWithBsPrefix","ModalDialog","React","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","_jsx","displayName","ModalHeader","AbstractModalHeader","defaultProps","closeLabel","closeButton","DivStyledAsH4","divWithClassName","Component","show","backdrop","keyboard","enforceFocus","restoreFocus","animation","dialogAs","DialogTransition","Fade","timeout","BackdropTransition","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","onEscapeKeyDown","onShow","onHide","container","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","propsManager","manager","useState","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","useRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","modal","setModalRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","dialog","useWillUnmount","removeEventListener","window","handleDialogMouseDown","handleMouseUp","e","target","handleStaticModalAnimation","transitionEnd","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","backdropProps","baseModalStyle","display","ModalContext","BaseModal","preventDefault","isAppearing","addEventListener","transition","backdropTransition","renderDialog","dialogProps","role","onClick","onMouseUp","onMouseDown","Object","assign","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}