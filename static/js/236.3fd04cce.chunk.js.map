{"version":3,"file":"static/js/236.3fd04cce.chunk.js","mappings":"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","sources":["app/components/InternalErrorDialogFC.tsx","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js"],"sourcesContent":["import { Accordion } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\nimport * as _ from 'lodash-es';\n\nimport '../css/internal_error.css';\n\nimport Modal from '../../common/components/Modal';\nimport P from '../../common/components/P';\nimport Input from '../../common/components/Input/Input';\nimport { InternalError } from '../../internal_error/store/types';\n\nconst messages = defineMessages({\n  errorTitle: {\n    id: 'internal_error.dialog_title',\n    defaultMessage: 'Error',\n  },\n  heading_general: {\n    id: 'internal_error.heading.general',\n    defaultMessage: 'General',\n  },\n  heading_information: {\n    id: 'internal_error.heading.information',\n    defaultMessage: 'Extended information',\n  },\n  request: {\n    id: 'internal_error.request',\n    defaultMessage: 'Request',\n  },\n  response: {\n    id: 'internal_error.response',\n    defaultMessage: 'Response',\n  },\n});\n\nfunction getResponseText(internalError: InternalError | undefined): string | undefined {\n  if (internalError == null || internalError.response == null) return undefined;\n  const resp: string | undefined = _.get(internalError.response, 'text');\n  if (resp == null) return undefined;\n  const respS: string = resp;\n\n  const ixBodyOpen  = respS.indexOf('<body>');\n  const ixBodyClose = respS.indexOf('</body>');\n  if (ixBodyOpen === -1 || ixBodyClose === -1 || ixBodyClose < ixBodyOpen) return resp;\n\n  return respS.substring(ixBodyOpen + 6, ixBodyClose).trim();\n}\n\ninterface IInternalErrorDialogFCProps {\n  internalError: InternalError;\n  onClose: () => void;\n}\n\nconst InternalErrorDialogFC: React.FC<IInternalErrorDialogFCProps> = ({\n    internalError, onClose }: IInternalErrorDialogFCProps) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Modal\n        show\n        title = {formatMessage(messages.errorTitle)}\n        onClose = {onClose}\n        noCloseButton\n        size  = 'xl'\n        className = 'internalError'>\n      <InternalErrorDialogContent internalError={internalError} />\n    </Modal>\n  );\n};\n\ninterface IInternalErrorDialogContentProps {\n  internalError: InternalError | undefined;\n}\n\nconst InternalErrorDialogContent: React.FC<IInternalErrorDialogContentProps> = ({\n    internalError }: IInternalErrorDialogContentProps) => {\n  const { formatMessage } = useIntl();\n\n  const responseText = getResponseText(internalError);\n  if (internalError) {\n    // eslint-disable-next-line no-console\n    console.error(`${internalError.message}\\n\\n${internalError.stack}`);\n  }\n\n  return (\n    <Accordion defaultActiveKey='0' flush alwaysOpen>\n      <Accordion.Item eventKey='0'>\n        <Accordion.Header>{formatMessage(messages.heading_general)}</Accordion.Header>\n        <Accordion.Body>\n          <>\n            <P className='caption name'>{`${internalError?.name}:`}</P>\n            <P className='text message'>{internalError?.message}</P>\n          </>\n          {internalError?.response == null && internalError?.url != null && (\n            <>\n              <P className='caption request'>{`${formatMessage(messages.request)}:`}</P>\n              <P className='text request'>{`${internalError?.method} ${internalError?.url}`}</P>\n            </>\n          )}\n        </Accordion.Body>\n      </Accordion.Item>\n\n      {internalError?.response != null && (\n        <Accordion.Item eventKey='1'>\n          <Accordion.Header>{formatMessage(messages.heading_information)}</Accordion.Header>\n          <Accordion.Body>\n            {internalError?.url != null && (\n              <>\n                <P className='caption request'>{`${formatMessage(messages.request)}:`}</P>\n                <P className='text request'>{`${internalError?.method} ${internalError?.url}`}</P>\n              </>\n            )}\n            {responseText != null && (\n              <>\n                <P className='caption response'>{`${formatMessage(messages.response)}:`}</P>\n                <Input\n                    name  = 'response-text'\n                    readOnly\n                    rows  = {responseText == null || responseText.length < 300 ? 4 : 10}\n                    value = {responseText} />\n              </>\n            )}\n          </Accordion.Body>\n        </Accordion.Item>\n      )}\n    </Accordion>\n  );\n};\n\nexport default InternalErrorDialogFC;\n","\"use client\";\n\nimport * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/docs/utilities/transitions#collapse-1).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});"],"names":["messages","defineMessages","errorTitle","id","defaultMessage","heading_general","heading_information","request","response","InternalErrorDialogContent","_ref2","internalError","formatMessage","useIntl","responseText","resp","_","respS","ixBodyOpen","indexOf","ixBodyClose","substring","trim","getResponseText","console","error","concat","message","stack","_jsxs","Accordion","defaultActiveKey","flush","alwaysOpen","children","Item","eventKey","_jsx","Header","Body","_Fragment","P","className","name","url","method","Input","readOnly","rows","length","value","_ref","onClose","Modal","show","title","noCloseButton","size","isAccordionItemSelected","activeEventKey","Array","isArray","includes","context","React","displayName","AccordionCollapse","ref","as","Component","bsPrefix","props","useContext","AccordionContext","useBootstrapPrefix","Collapse","in","classNames","only","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","onClick","accordionOnClick","onSelect","e","eventKeyPassed","filter","k","useAccordionButton","type","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","activeKey","controlledProps","useUncontrolled","prefix","Object","assign","Button"],"sourceRoot":""}