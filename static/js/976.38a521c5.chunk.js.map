{"version":3,"file":"static/js/976.38a521c5.chunk.js","mappings":"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","sources":["browse/components/ListTags.tsx","browse/components/ListRecipes.tsx","browse/store/MiniBrowseActions.ts","browse/containers/MiniBrowse.tsx","common/components/Button.tsx","common/components/Loading.tsx","groceryList/store/GroceryListActions.ts","rating/components/Ratings.tsx","rating/components/RatingView.tsx","rating/components/RatingForm.tsx","rating/components/RatingComment.tsx","rating/components/RatingComments.tsx","rating/components/RatingsHeader.tsx","rating/components/RatingsWrapper.tsx","rating/containers/Ratings.tsx","rating/store/actions.ts","recipe/components/RecipeFooter.tsx","recipe/components/IngredientsHeader.tsx","common/components/ReduxForm/ReSelect.tsx","recipe/components/AddToGroceryListModal.tsx","recipe/components/IngredientsFooter.tsx","recipe/components/IngredientsPanel.tsx","recipe/containers/IngredientsPanelContainer.tsx","common/components/ImageViewer.tsx","recipe/context/CookingModeContext.ts","common/hooks/useWakeLock.ts","recipe/components/CookingModeButton.tsx","recipe/components/RecipeHeader.tsx","recipe/components/DirectionsPanel.tsx","recipe/components/RecipeScheme.tsx","recipe/context/CookingModeContextProvider.tsx","recipe/components/CookingModeHandler.tsx","recipe/containers/RecipeContainer.tsx","recipe/containers/RecipePage.tsx","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Table.js","../node_modules/react-bootstrap/esm/ToastFade.js","../node_modules/react-bootstrap/esm/ToastContext.js","../node_modules/react-bootstrap/esm/ToastHeader.js","../node_modules/react-bootstrap/esm/ToastBody.js","../node_modules/react-bootstrap/esm/Toast.js"],"sourcesContent":["import { useMemo } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport '../css/list-tags.css';\n\nimport Icon from '../../common/components/Icon';\nimport { optionallyFormatMessage } from '../../common/utility';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport Chip from '../../common/components/Chip';\n\nexport interface IListTagsProps {\n  recipe: RecipeList;\n}\n\ntype renderTagType = {\n  tag: string;\n  icon: string;\n  variant: 'light' | 'filled';\n}\n\nconst RENDER_TAGS: Array<renderTagType> = [\n  {\n    tag: 'easy',\n    icon: 'bar-chart',\n    variant: 'light',\n  },\n  {\n    tag: 'vegetarian',\n    icon: 'tree',\n    variant: 'light',\n  },\n  {\n    tag: 'vegan',\n    icon: 'tree',\n    variant: 'filled',\n  },\n];\n\nconst ListTags: React.FC<IListTagsProps> = ({\n    recipe }: IListTagsProps) => {\n  const intl = useIntl();\n\n  const renderTagsJsx: Array<React.ReactElement> = useMemo(() => {\n    if (!recipe.oTags) return [];\n\n    const res: Array<React.ReactElement> = [];\n\n    const recipeTags = { ...recipe.oTags };\n    if (recipeTags.vegetarian && recipeTags.vegan) {\n      delete recipeTags.vegetarian;\n    }\n\n    RENDER_TAGS.forEach(t => {\n      if (recipeTags?.[t.tag]) {\n        res.push(\n          <Chip key={`${recipe.id}-${t.tag}`}>\n            <Icon icon={t.icon} variant={t.variant} />\n            {optionallyFormatMessage(intl, 'tag.', t.tag)}\n          </Chip>\n        );\n      }\n    });\n\n    return res;\n  }, [recipe.oTags, intl.locale]);\n\n  if (renderTagsJsx.length === 0) return null;\n\n  return (\n    <div className='tags-list'>\n      {renderTagsJsx}\n    </div>\n  );\n};\n\nexport default ListTags;\n","import { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport '../css/list-recipes.css';\n\nimport ListTags from './ListTags';\nimport Ratings from '../../rating/components/Ratings';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport { getRecipeImagePlaceholder, getResourcePath, getRoutePath } from '../../common/utility';\nimport Tooltip from '../../common/components/Tooltip';\n\nexport interface IListRecipes {\n  data:   Array<RecipeList> | undefined;\n  lg?:    3 | 4;\n  onOpenRecipe: (rec: RecipeList) => void;\n}\n\nfunction hashCode(str: string): number {\n  // Code by Barak (https://stackoverflow.com/a/8831937).\n\n  let hash = 0;\n  for (let i = 0; i < str.length; ++i) {\n    const char = str.charCodeAt(i);\n    // eslint-disable-next-line no-bitwise\n    hash = ((hash << 5) - hash) + char;\n    // eslint-disable-next-line no-bitwise\n    hash &= hash;\n  }\n\n  return hash;\n}\n\nfunction getRecipeImage(recipe: RecipeList) {\n  if (recipe.photoThumbnail) {\n    return recipe.photoThumbnail ?? getRecipeImagePlaceholder();\n  } else {\n    const images = ['fish', 'fried-eggs', 'pizza', 'soup', 'steak'];\n    const recipeImageHash = Math.abs(hashCode(recipe.title));\n    return getResourcePath(`/images/${images[recipeImageHash % 5]}.jpg`);\n  }\n}\n\nconst ListRecipes: React.FC<IListRecipes> = ({ data, lg = 4, onOpenRecipe }: IListRecipes) => {\n  const IMAGE_PLACEHOLDER = useMemo(() => getRecipeImagePlaceholder(), []);\n  const PLACEHOLDER_STYLE = useMemo(() => ({ background: `url(${IMAGE_PLACEHOLDER}) 100% center / cover` }), [IMAGE_PLACEHOLDER]);\n\n  const recipes = data?.map(recipe => {\n    const link = getRoutePath(`/recipe/${recipe.slug}`);\n    return (\n      <Col key={recipe.id}>\n        <Card className={classNames('recipe')}>\n          <Link to={link} onClick={() => onOpenRecipe(recipe)}>\n            <Card.Img variant='top' src={getRecipeImage(recipe)} alt='' style={PLACEHOLDER_STYLE} />\n            <Ratings stars={recipe.rating} count={recipe.ratingCount} collapsed />\n            <Card.Title as='h3'><Tooltip id={recipe.slug} tooltip={recipe.title} placement='bottom' className='card-title-tooltip'>{recipe.title}</Tooltip></Card.Title>\n            {recipe.oTags && <ListTags recipe={recipe} />}\n            <Card.Text>{recipe.info}</Card.Text>\n          </Link>\n        </Card>\n      </Col>\n    );\n  });\n\n  return (\n    <Row xs={1} sm={2} lg={lg} className='g-3 recipes-list'>\n      {recipes}\n    </Row>\n  );\n};\n\nexport default ListRecipes;\n","import request from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { toBasicAction } from '../../common/store/redux';\nimport { handleError } from '../../common/requestUtils';\nimport { toRecipeList } from '../../recipe/store/RecipeTypes';\nimport { MiniBrowseDispatch, MINI_BROWSE_STORE } from './MiniBrowseTypes';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const loadMiniBrowse = (filter: string) => (dispatch: MiniBrowseDispatch) => {\n  dispatch({ ...toBasicAction(MINI_BROWSE_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.mini_browse}${filter ? `&${filter}` : ''}`)\n    .then(res => {\n        dispatch({\n          ...toBasicAction(\n            MINI_BROWSE_STORE,\n            ACTION.GET_SUCCESS\n          ),\n          payload: res.body.results?.map(toRecipeList),\n        });\n    })\n    .catch(err => dispatch(handleError(err, MINI_BROWSE_STORE)));\n};\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useLocation, useParams } from 'react-router';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/browse.css';\n\nimport { RootState } from '../../app/Store';\nimport Icon from '../../common/components/Icon';\nimport Button from '../../common/components/Button';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport { Recipe, RecipeList } from '../../recipe/store/RecipeTypes';\nimport * as RecipeActions from '../../recipe/store/RecipeActions';\nimport ListRecipes from '../components/ListRecipes';\nimport * as MiniBrowseActions from '../store/MiniBrowseActions';\n\nconst messages = defineMessages({\n  shuffleSuggestionsButton: {\n    id: 'browse.shuffle_suggestions_button_title',\n    description: 'Title/tooltip of the icon button to shuffle the suggestions.',\n    defaultMessage: 'Shuffle suggestions',\n  },\n});\n\ninterface IMiniBrowseProps {\n  heading: string;\n  count: number;\n  filters?: Record<string, string>;\n}\n\nfunction buildUrlFilter(count: number, filters: Record<string, string> | undefined): string {\n  const searchParams = new URLSearchParams(filters);\n  searchParams.append('limit', count.toString());\n  return searchParams.toString();\n}\n\nconst MiniBrowse: React.FC<IMiniBrowseProps> = ({ heading, count, filters }: IMiniBrowseProps) => {\n  const { formatMessage }  = useIntl();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const params = useParams();\n\n  const slug = params.recipe;\n\n  const miniBrowseItems = useSelector((state: RootState) => state.browse.browserMini.items);\n  const differentMiniBrowseItems = useMemo(() => miniBrowseItems?.filter(itm => itm.slug !== slug), [slug, miniBrowseItems]);\n  const recipeSlug = params.recipe ?? '';\n\n  useEffect(() => {\n    dispatch(MiniBrowseActions.loadMiniBrowse(buildUrlFilter(count, filters)));\n  }, [location]);\n\n  const handleShuffleClick = useCallback(() => {\n    dispatch(MiniBrowseActions.loadMiniBrowse(buildUrlFilter(count, filters)));\n  }, [buildUrlFilter, count, filters]);\n\n  const handleOpenRecipe = useCallback((rec: RecipeList) => {\n    if (recipeSlug !== rec.slug) {\n      dispatch(RecipeActions.preload(rec as Recipe));\n    }\n  }, [recipeSlug]);\n\n  if (differentMiniBrowseItems != null && differentMiniBrowseItems.length === 0) return null;\n\n  return (\n    <>\n      <h2 id='suggestions-heading'>{heading}</h2>\n      <Button id='shuffle-suggestions-button' variant='outline-primary' onClick={handleShuffleClick} className='print-hidden' tooltip={formatMessage(messages.shuffleSuggestionsButton)}>\n        <Icon icon='arrow-repeat' variant='light' />\n      </Button>\n      <ListRecipes data={differentMiniBrowseItems} onOpenRecipe={handleOpenRecipe} />\n    </>\n  );\n};\n\nexport default MiniBrowse;\n","import { forwardRef } from 'react';\nimport { Button as BootstrapButton } from 'react-bootstrap';\nimport { Placement } from 'react-bootstrap/esm/types';\n\nimport '../css/button.css';\nimport { CommonProps } from '../types/OverridableComponent';\nimport ConditionalWrapper from './ConditionalWrapper';\nimport Tooltip from './Tooltip';\n\nexport interface IButtonProps extends CommonProps {\n  id:         string;\n  type?:      'button' | 'reset' | 'submit';\n  variant?:   'primary' | 'secondary' | 'danger' | 'outline-primary' | 'outline-secondary' | 'outline-danger' | 'transparent';\n  size?:      'sm' | 'lg';\n  disabled?:  boolean;\n  onClick?:   (event: React.MouseEvent<HTMLButtonElement>) => void;\n\n  tooltip?:   string;\n  tooltipPlacement?: Placement;\n\n  children:   React.ReactNode;\n}\n\nconst Button = forwardRef<HTMLButtonElement, IButtonProps>(({\n  id,\n  tooltip, tooltipPlacement,\n  children, ...rest }: IButtonProps, ref) => (\n    <ConditionalWrapper\n        condition = {Boolean(tooltip)}\n        render = {childr => <Tooltip id={`${id}-tooltip`} tooltip={tooltip} placement={tooltipPlacement}>{childr}</Tooltip>}>\n      <BootstrapButton id={id} aria-label={tooltip || undefined} aria-describedby={undefined} {...rest} ref={ref}>\n        {children}\n      </BootstrapButton>\n    </ConditionalWrapper>\n));\n\nexport default Button;\n","import CircularProgress from './CircularProgress';\n\ninterface ILoadingProps {\n  message?: string;\n}\n\nconst Loading = ({ message }: ILoadingProps) => (\n  <div className='spinner'>\n    {message && <h3 className='no-results'>{ message }</h3>}\n    <CircularProgress />\n  </div>\n);\n\nexport default Loading;\n","import request from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { Ingredient, SubRecipe } from '../../recipe/store/RecipeTypes';\nimport { AnyDispatch, toBasicAction } from '../../common/store/redux';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { handleError, handleFormError } from '../../common/requestUtils';\nimport { GroceryList, GroceryListAction, GroceryListActionTypes, GroceryListBulkAdd, GroceryListCreate, GroceryListDispatch, GroceryListDto, GroceryListUpdate, GROCERY_LIST_STORE, toGroceryList } from './GroceryListTypes';\nimport { GroceryListItemDto, toGroceryListItem } from './GroceryListItemTypes';\n\nexport const getGroceryListSuccess = (groceryList: GroceryList): GroceryListAction => (\n  { ...toBasicAction(GROCERY_LIST_STORE, ACTION.GET_SUCCESS), payload: groceryList }\n);\n\nexport const load = (listId: string) => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.list}${listId}/`)\n    .then(res => {\n      dispatch(getGroceryListSuccess(toGroceryList(res.body as GroceryListDto)));\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_STORE)));\n};\n\nexport const create = async (dispatch: AnyDispatch, item: GroceryListCreate) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.CREATE_START) });\n\n  return request()\n    .post(serverURLs.list)\n    .send(item)\n    .then(res => {\n      const groceryList = toGroceryList(res.body);\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_STORE,\n          ACTION.CREATE_SUCCESS\n        ),\n        payload: groceryList,\n      });\n    })\n    .catch(err => handleFormError(dispatch, err, GROCERY_LIST_STORE));\n};\n\nexport const update = async (dispatch: AnyDispatch, slug: string, item: Partial<GroceryListUpdate>) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.UPDATE_START) });\n\n  return request()\n    .patch(`${serverURLs.list}${slug}/`)\n    .send(item)\n    .then(res => {\n      const groceryList = toGroceryList(res.body);\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_STORE,\n          ACTION.UPDATE_SUCCESS\n        ),\n        payload: groceryList,\n      });\n    })\n    .catch(err => handleFormError(dispatch, err, GROCERY_LIST_STORE));\n};\n\nexport const remove = (id: number, slug: string) => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.DELETE_START) });\n\n  request()\n    .delete(`${serverURLs.list}${slug}/`)\n    .then(() => {\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_STORE,\n          ACTION.DELETE_SUCCESS\n        ),\n        payload: { id: id },\n      });\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_STORE)));\n};\n\nfunction format(i: Ingredient | SubRecipe, formatter: FormatterFunc) {\n  const quantityS = i.quantity && i.quantity !== '0' ? i.quantity : undefined;\n  const formatted = formatter(i.measurement, i.quantity);\n  return [quantityS, formatted, i.title].filter(Boolean).join(' ');\n}\n\ntype FormatterFunc = (measurement: string | undefined, quantity: string | undefined) => string;\n\nexport const bulkAdd = async (dispatch: AnyDispatch, list: number, data: GroceryListBulkAdd, formatter: FormatterFunc) => {\n  const checkedIngredients = data.ingredientGroups.flatMap(ig => ig.ingredients.map(i => ({ list: list, title: format(i, formatter) })));\n  const checkedSubRecipe = data.subrecipes.map(sr => ({ list: list, title: format(sr, formatter) }));\n  const allItems = checkedIngredients.concat(checkedSubRecipe);\n\n  if (allItems.length > 0) {\n    dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.UPDATE_START) });\n    return request()\n      .post(serverURLs.bulk_list_item)\n      .send(allItems)\n      .then(res => {\n        dispatch({ ...toBasicAction(GROCERY_LIST_STORE, GroceryListActionTypes.BULK_ADD), payload: res.body.map((i: GroceryListItemDto) => toGroceryListItem(list, i)) });\n        dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.UPDATE_SUCCESS) });\n      })\n      .catch(err => dispatch(handleError(err, GROCERY_LIST_STORE)));\n  } else {\n    return null;\n  }\n};\n\nexport const preload = (list: Partial<GroceryList>) => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.PRELOAD), payload: list });\n};\n\nexport const reset = () => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.RESET) });\n};\n","import { useCallback, useMemo } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport classNames from 'classnames';\nimport { Button } from 'react-bootstrap';\n\nimport '../css/ratings.css';\n\nimport Icon from '../../common/components/Icon';\nimport ConditionalWrapper from '../../common/components/ConditionalWrapper';\n\nconst messages = defineMessages({\n  star_alt: {\n    id: 'rating_comments.star_alt',\n    description: 'Alt text for star button, for screen reader.',\n    defaultMessage: 'Select to rate item {stars, plural, one {# star} other {# stars}}',\n  },\n  stars_alt: {\n    id: 'rating_comments.stars_alt',\n    description: 'Alt text for read-only stars (view).',\n    defaultMessage: '{stars} out of 5 stars',\n  },\n  rating_count: {\n    id: 'rating_comments.rating_count',\n    description: 'Rating count (view).',\n    defaultMessage: '{count} ratings',\n  },\n});\n\nexport interface IRatingsProps {\n  stars:      number;\n  count?:     number;\n  showCount?: boolean;\n  collapsed?: boolean;\n  onChange?:  (stars: number) => void;\n}\n\ninterface IStarProps {\n  stars: number;\n  num:   number;\n  onChange?: (stars: number) => void;\n}\n\nconst Star: React.FC<IStarProps> = ({ stars, num, onChange }: IStarProps) => {\n  const { formatMessage } = useIntl();\n\n  const handleClick = useCallback(() => {\n    onChange?.(num);\n  }, [onChange, num]);\n\n  const isHalfFilled = stars > (num - 1) && stars < num;\n  const icon = isHalfFilled ? 'star-half' : 'star';\n  const variant = num > stars || isHalfFilled ? 'light' : 'filled';\n\n  return (\n    <ConditionalWrapper\n        condition = {onChange != null}\n        render    = {childr => <Button variant='transparent' className='rating' onClick={handleClick}>{childr}</Button>}\n        key={num}>\n      <Icon key={num} icon={icon} variant={variant} size={onChange != null ? '2x' : '1x'} ariaLabel={onChange ? formatMessage(messages.star_alt, { stars: num }) : undefined} />\n    </ConditionalWrapper>\n  );\n};\n\ninterface ICollapsedStarProps {\n  stars: number;\n}\n\nconst CollapsedStar: React.FC<ICollapsedStarProps> = ({ stars }: ICollapsedStarProps) => {\n  const isHalfFilled = stars > 0 && stars < 4;\n  const icon = isHalfFilled ? 'star-half' : 'star';\n  const variant = stars === 0 || isHalfFilled ? 'light' : 'filled';\n\n  return (\n    <Icon key={stars} icon={icon} variant={variant} size='1x' />\n  );\n};\n\nconst Ratings: React.FC<IRatingsProps> = ({ stars, count, showCount = true, collapsed = false, onChange }: IRatingsProps) => {\n  const { formatMessage } = useIntl();\n\n  let starss = stars;\n  if (stars > 5) {\n    starss = 5;\n  } else if (stars < 0) {\n    starss = 0;\n  }\n\n  const starsList: React.ReactNode | Array<React.ReactNode> = useMemo(() => {\n    if (collapsed) {\n      return <CollapsedStar stars={starss} />;\n    } else {\n      return Array.from({ length: 5 }, (_, i) => i + 1).map(num => (\n        <Star key={num} stars={starss} num={num} onChange={onChange} />\n      ));\n    }\n  }, [starss, collapsed, onChange]);\n\n  const starsText = stars > 0 ? `${stars}/5` : '';\n  const ratingCount = (showCount && (stars === 0 || count) && !onChange) ? (count ?? 0) : undefined;\n\n  return (\n    <div className='rating-stars'>\n      <span className={classNames('stars-icons', { active: stars > 0 })} aria-hidden>{starsList}</span>\n      {starsText   && <span className='rating-text'  aria-hidden>{starsText}</span>}\n      <span className='sr-only'>{formatMessage(messages.stars_alt, { stars: starss })}</span>\n      {ratingCount != null && (\n        <span className='rating-count'>\n          {`(${collapsed ? ratingCount : formatMessage(messages.rating_count, { count: ratingCount })})`}\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default Ratings;\n","import { useCallback, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport { Rating } from '../store/types';\nimport Icon from '../../common/components/Icon';\nimport P from '../../common/components/P';\nimport Button from '../../common/components/Button';\nimport Tooltip from '../../common/components/Tooltip';\nimport { CommonProps } from '../../common/types/OverridableComponent';\nimport Modal from '../../common/components/Modal';\nimport { Toolbar } from '../../common/components/Toolbar';\nimport Ratings from './Ratings';\n\nconst messages = defineMessages({\n  edited_by: {\n    id: 'rating.edited_by',\n    description: 'The rating was edited by ...',\n    defaultMessage: 'Edited by',\n  },\n  edit_button: {\n    id: 'rating_comments.edit_button',\n    description: 'Label of the edit comment icon button',\n    defaultMessage: 'Edit comment',\n  },\n  delete_button: {\n    id: 'rating_comments.delete_button',\n    description: 'Label of the delete comment icon button',\n    defaultMessage: 'Delete comment',\n  },\n  confirm_delete_message: {\n    id: 'rating_comments.confirm_delete',\n    description: 'Are you sure you want to delete this comment?',\n    defaultMessage: 'Are you sure you want to delete this comment?',\n  },\n});\n\ninterface IRatingFCProps {\n  rating: Rating;\n}\n\nexport const RatingEditor: React.FC<IRatingFCProps> = ({ rating }: IRatingFCProps) => {\n  const { formatMessage, locale } = useIntl();\n\n  if (rating.update_date && new Date(rating.update_date).getTime() > 0 && rating.update_username) {\n    const editorS = `${formatMessage(messages.edited_by)}: ${rating.update_username}`;\n    const editDateS = new Date(rating.update_date).toLocaleString(locale);\n    const tooltipJsx = (\n      <div className='d-flex-column'>\n        <div>{editorS}</div>\n        <div>{editDateS}</div>\n      </div>\n    );\n    return (\n      <Tooltip id={`${rating.id}-editor-tooltip`} tooltip={tooltipJsx}>\n        <Icon icon='pencil' className='subtitle2' size='1x' style={{ marginLeft: '5px' }} ariaLabel={`${formatMessage(messages.edited_by)}: ${rating.update_username}. ${editDateS}`} />\n      </Tooltip>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport const RatingTimestamp: React.FC<IRatingFCProps> = ({ rating }: IRatingFCProps) => {\n  const { locale } = useIntl();\n  if (rating.update_date && new Date(rating.update_date).getTime() > 0 && rating.update_username === rating.pub_username) {\n    return <Link className='subtitle2 rating-timestamp' to={`#rating-${rating.id}`}>{new Date(rating.update_date).toLocaleString(locale)}</Link>;\n  } else if (rating.pub_date && new Date(rating.pub_date).getTime() > 0) {\n    return <Link className='subtitle2 rating-timestamp' to={`#rating-${rating.id}`}>{new Date(rating.pub_date).toLocaleString(locale)}</Link>;\n  } else {\n    return null;\n  }\n};\n\nconst RatingCommentComment: React.FC<IRatingFCProps> = ({ rating }: IRatingFCProps) => {\n  const markup: Array<React.ReactNode> = [];\n\n  const pList = rating.comment.split('\\n').filter(Boolean);\n  pList.forEach((p, index) => {\n    markup.push(\n      // eslint-disable-next-line react/no-array-index-key\n      <P key={`${index}-p`}>\n        {p}\n      </P>\n    );\n  });\n\n  return (\n    <>\n      {markup}\n    </>\n  );\n};\n\nexport interface IRatingToolbarProps extends IRatingFCProps, CommonProps {\n  onEdit?: () => void;\n  onDelete?: () => void;\n}\n\nexport const RatingToolbar: React.FC<IRatingToolbarProps> = ({\n    rating, onEdit, onDelete,\n    className, ...rest }: IRatingToolbarProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState<boolean>(false);\n\n  const handleDeleteClick = useCallback(() => { setShowDeleteConfirm(true); }, []);\n  const handleDeleteClose  = useCallback(() => { setShowDeleteConfirm(false); }, []);\n  const handleDeleteAccept = useCallback(() => { onDelete?.(); }, []);\n\n  return (\n    <>\n      <Toolbar position='end' className={classNames('rating-toolbar', className)} {...rest}>\n        {onEdit && (\n          <Button id={`edit-${rating.id}`} variant='outline-primary' className='rating-edit-button' size='sm' tooltip={formatMessage(messages.edit_button)} onClick={onEdit}>\n            <Icon icon='pencil' />\n          </Button>\n        )}\n        {onDelete && (\n          <Button id={`delete-${rating.id}`} variant='outline-danger' className='rating-delete-button' size='sm' tooltip={formatMessage(messages.delete_button)} onClick={handleDeleteClick}>\n            <Icon icon='trash' />\n          </Button>\n        )}\n      </Toolbar>\n\n      <Modal\n          show = {showDeleteConfirm}\n          title = {intl.messages['recipe.confirm_delete_title'] as string}\n          acceptTitle = {intl.messages['recipe.confirm_delete_accept'] as string}\n          onAccept = {handleDeleteAccept}\n          onClose  = {handleDeleteClose}\n          acceptButtonProps = {{ variant: 'danger' }}>\n        {formatMessage(messages.confirm_delete_message)}\n      </Modal>\n    </>\n  );\n};\n\nconst RatingView: React.FC<IRatingFCProps> = ({ rating }: IRatingFCProps) => (\n  <>\n    <Row className='rating-header'>\n      <Col xs>\n        <Ratings stars={rating.rating || 0} />\n        <div className='rating-username'>{rating.pub_username}</div>\n      </Col>\n      <Col xs='auto'>\n        <RatingTimestamp rating={rating} />\n        <RatingEditor rating={rating} />\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={12}>\n        <RatingCommentComment rating={rating} />\n      </Col>\n    </Row>\n  </>\n);\n\nexport default RatingView;\n","import { useCallback, useState } from 'react';\nimport { Button, Col, Form, Row } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Field, Form as ReduxForm, FormSpy } from 'react-final-form';\n\nimport { Rating, RatingCreate, RatingUpdate } from '../store/types';\nimport InitialValuesResetter from '../../common/components/ReduxForm/ReInitialValuesResetter';\nimport ReInput from '../../common/components/ReduxForm/ReInput';\nimport { requiredValidator, ValidationResult } from '../../common/store/Validation';\nimport ReFormStatus from '../../common/components/ReduxForm/ReFormStatus';\nimport Ratings from './Ratings';\nimport { RatingEditor, RatingTimestamp } from './RatingView';\nimport classNames from 'classnames';\nimport { Toolbar } from '../../common/components/Toolbar';\n\nconst messages = defineMessages({\n  edit_rating_title: {\n    id: 'rating.form.edit.title',\n    description: 'Fieldset legend for editing a rating',\n    defaultMessage: 'Comment by {username}',\n  },\n  new_rating_title: {\n    id: 'rating.form.create.title',\n    description: 'Fieldset legend for creating a new rating',\n    defaultMessage: 'Your new rating',\n  },\n  rating_label: {\n    id: 'rating.form.rating_label',\n    description: 'Rating label',\n    defaultMessage: 'Rating',\n  },\n  rating_comment_label: {\n    id: 'rating.form.rating_comment_label',\n    description: 'Rating label',\n    defaultMessage: 'Comments',\n  },\n  rating_comment_placeholder: {\n    id: 'rating.form.rating_comment_placeholder',\n    description: 'Rating placeholder',\n    defaultMessage: 'Leave a comment.',\n  },\n  submit: {\n    id: 'rating.form.submit',\n    description: 'Submit recipe button',\n    defaultMessage: 'Comment',\n  },\n});\n\nexport interface IRatingFormProps {\n  rating?: Rating;\n\n  addRating?: (rating: RatingCreate) => Promise<ValidationResult>;\n  editRating?: (rating: RatingUpdate) => Promise<ValidationResult>;\n  onSubmitSuccess: () => void;\n  onCancel: () => void;\n}\n\nexport interface IFormDataProps {\n  rating:  number;\n  comment: string;\n}\n\nconst RatingForm: React.FC<IRatingFormProps> = ({ rating, addRating, editRating, onSubmitSuccess, onCancel }: IRatingFormProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const [initialValues] = useState<Partial<IFormDataProps>>(rating ?? { rating: 0, comment: '' });\n\n  const handleSubmit = useCallback(async (form: IFormDataProps) => {\n    if (rating) {\n      const res: RatingUpdate = {\n        ...form,\n        id: rating.id,\n      };\n      return editRating?.(res);\n    } else {\n      const res: RatingCreate = form;\n      return addRating?.(res);\n    }\n  }, [addRating, rating?.id]);\n\n  return (\n    <ReduxForm\n        initialValues = {initialValues}\n        onSubmit = {handleSubmit}\n        subscription = {{}}\n        render = {({ form, handleSubmit: renderSubmit }) => (\n          <Form onSubmit={renderSubmit} className={classNames('rating-form', { create: !rating, edit: rating })}>\n            <ReFormStatus onSubmitSuccess={onSubmitSuccess} />\n\n            <InitialValuesResetter form={form} initialValues={initialValues} />\n            {rating && (\n              <div className='d-flex' style={{ alignItems: 'center', justifyContent: 'end' }}>\n                <RatingTimestamp rating={rating} />\n                <RatingEditor rating={rating} />\n              </div>\n            )}\n            <fieldset>\n              <legend className='rating-form-heading'>\n                {!rating && (\n                  formatMessage(messages.new_rating_title)\n                )}\n                {rating && (\n                  formatMessage(messages.edit_rating_title, { username: rating.pub_username })\n                )}\n              </legend>\n              <Row>\n                <Col className='form-group required'>\n                  <div className='form-label'>{formatMessage(messages.rating_label)}</div>\n                  <Field name='rating' validate={requiredValidator} validateFields={[]}>\n                    {fprops => (\n                      <Ratings\n                          stars = {fprops.input.value}\n                          onChange = {(value: number) => { fprops.input.onChange(value); }} />\n                    )}\n                  </Field>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <ReInput\n                      name   = 'comment'\n                      rows   = {4}\n                      label  = {formatMessage(messages.rating_comment_label)}\n                      placeholder = {formatMessage(messages.rating_comment_placeholder)}\n                      maxLength = {1000}\n                      required />\n                </Col>\n              </Row>\n              <Row>\n                <Col xs={12}>\n                  <Toolbar>\n                    <FormSpy subscription={{ values: true, submitting: true }}>\n                      {({ values, submitting }) => (\n                        <Button type='submit' variant='primary' disabled={!values.rating || !values.comment || submitting}>\n                          {formatMessage(messages.submit)}\n                        </Button>\n                      )}\n                    </FormSpy>\n                    <Button variant='outline-primary' onClick={onCancel}>\n                      {intl.messages['modal.close'] as string}\n                    </Button>\n                  </Toolbar>\n                </Col>\n              </Row>\n            </fieldset>\n          </Form>\n        )} />\n  );\n};\n\nexport default RatingForm;\n","import { useCallback, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport classNames from 'classnames';\n\nimport { Rating, RatingUpdate } from '../store/types';\nimport PageScroller from '../../common/components/PageScroller';\nimport RatingForm from './RatingForm';\nimport { ValidationResult } from '../../common/store/Validation';\nimport RatingView, { RatingToolbar } from './RatingView';\nimport { isDemoMode } from '../../common/utility';\n\nexport interface IRatingCommentProps {\n  rating:     Rating;\n  onEdit?:    (upd: RatingUpdate) => Promise<ValidationResult>;\n  onDelete?:  (ratingId: number) => Promise<ValidationResult>;\n}\n\nconst RatingComment: React.FC<IRatingCommentProps> = ({\n    rating, onEdit, onDelete }: IRatingCommentProps) => {\n  const { hash } = useLocation();\n  const hashId = (hash ?? '').replace('#', '');\n\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const handleEditModeReset = useCallback(() => { setEditMode(false); }, []);\n\n  const handleEditClick    = useCallback(() => { setEditMode(true); }, []);\n  const handleDeleteClick  = useCallback(() => onDelete?.(rating.id), [rating.id]);\n\n  const ratingContainerId = `rating-${rating.id}`;\n\n  return (\n    <div id={ratingContainerId} className={classNames('rating-comment', { 'perma-link-active': ratingContainerId === hashId })}>\n      <PageScroller uriFragmentId={ratingContainerId} />\n      {!editMode && (\n        <RatingView\n            rating = {rating}\n            />\n      )}\n      {editMode && (\n        <RatingForm\n            rating = {rating}\n            editRating = {onEdit}\n            onSubmitSuccess = {handleEditModeReset}\n            onCancel = {handleEditModeReset}\n            />\n      )}\n      {!editMode && !isDemoMode() && (\n        <RatingToolbar\n            rating = {rating}\n            onEdit = {onEdit ? handleEditClick : undefined}\n            onDelete = {onDelete ? handleDeleteClick : undefined}\n            />\n      )}\n    </div>\n  );\n};\n\nexport default RatingComment;\n","import { useCallback } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Col, Row } from 'react-bootstrap';\n\nimport { Rating, RatingUpdate } from '../store/types';\nimport P from '../../common/components/P';\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport CircularProgress from '../../common/components/CircularProgress';\nimport { ValidationResult } from '../../common/store/Validation';\nimport UserRole from '../../common/types/UserRole';\nimport RatingComment from './RatingComment';\n\nconst messages = defineMessages({\n  no_comments: {\n    id: 'rating_comments.no_comments',\n    description: 'Placeholder for no comments',\n    defaultMessage: '(No comments yet. Be the first!)',\n  },\n});\n\nexport interface IRatingCommentsProps {\n  ratings:    Array<Rating> | undefined;\n  userId:     number | undefined;\n  userRole:   UserRole | undefined;\n  pending:    PendingState;\n\n  editRating:   (rating: RatingUpdate) => Promise<ValidationResult>;\n  removeRating: (rating: number) => Promise<ValidationResult>;\n}\n\nconst RatingComments: React.FC<IRatingCommentsProps> = ({\n    ratings, userId, userRole, pending, editRating, removeRating }: IRatingCommentsProps) => {\n  const { formatMessage } = useIntl();\n\n  const handleEdit         = useCallback((upd: RatingUpdate) => editRating(upd), [editRating]);\n  const handleDeleteAccept = useCallback((ratingId: number) => removeRating(ratingId), [removeRating]);\n\n  const isUserAdmin = userRole != null && [UserRole.STAFF, UserRole.ADMIN].includes(userRole);\n\n  const ratingsList = ratings?.map(rating => (\n    <RatingComment\n        key = {rating.id}\n        rating = {rating}\n        onEdit   = {(rating.author === userId || isUserAdmin) ? handleEdit : undefined}\n        onDelete = {(rating.author === userId || isUserAdmin) ? handleDeleteAccept : undefined} />\n  )) ?? [];\n\n  return (\n    <>\n      {pending === PendingState.LOADING && <CircularProgress variant='three-bounce' />}\n      {ratingsList.length === 0 && (\n        <Row key='be-the-first'><Col><P className='placeholder'>{formatMessage(messages.no_comments)}</P></Col></Row>\n      )}\n      {ratingsList}\n    </>\n  );\n};\n\nexport default RatingComments;\n","import { Button, Card, Col, Row } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport HeaderLink from '../../common/components/HeaderLink';\nimport UserRole from '../../common/types/UserRole';\n\nconst messages = defineMessages({\n  title: {\n    id: 'recipe.comments.title',\n    description: 'Comments heading',\n    defaultMessage: 'Comments ({count})',\n  },\n  new_rating_button: {\n    id: 'recipe.comments.new_rating',\n    description: 'Label for the new rating button',\n    defaultMessage: 'New rating',\n  },\n});\n\nexport interface IRatingsHeaderProps {\n  commentsCount: number;\n  userRole:  UserRole | undefined;\n  showNewRating: boolean;\n  onShowNewRating: () => void;\n}\n\nconst RatingsHeader: React.FC<IRatingsHeaderProps> = ({ commentsCount, userRole, showNewRating, onShowNewRating }: IRatingsHeaderProps) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Card.Header>\n      <Row>\n        <Col className='ratings-heading-col'>\n          <h2 id='ratings-heading'>\n            {formatMessage(messages.title, { count: commentsCount })}\n            <HeaderLink linkFor='ratings-heading' />\n          </h2>\n        </Col>\n        {userRole != null && [UserRole.USER, UserRole.STAFF, UserRole.ADMIN].includes(userRole) && (\n          <Col xs='auto' style={showNewRating ? { visibility : 'hidden' } : undefined}>\n            <Button variant='outline-primary' onClick={onShowNewRating}>{formatMessage(messages.new_rating_button)}</Button>\n          </Col>\n        )}\n      </Row>\n    </Card.Header>\n  );\n};\n\nexport default RatingsHeader;\n","import { useCallback, useState } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport '../css/recipe-rating-wrapper.css';\n\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport UserRole from '../../common/types/UserRole';\nimport { ValidationResult } from '../../common/store/Validation';\nimport { Rating, RatingCreate, RatingUpdate } from '../store/types';\nimport RatingComments from './RatingComments';\nimport RatingForm from './RatingForm';\nimport RatingsHeader from './RatingsHeader';\n\nexport interface IRatingsWrapperProps {\n  ratings:    Array<Rating> | undefined;\n  userId:     number | undefined;\n  userRole:   UserRole | undefined;\n  pending:    PendingState;\n\n  addRating:    (rating: RatingCreate) => Promise<ValidationResult>;\n  editRating:   (rating: RatingUpdate) => Promise<ValidationResult>;\n  removeRating: (ratingId: number) => Promise<ValidationResult>;\n}\n\nconst RatingsWrapper: React.FC<IRatingsWrapperProps> = ({ ratings, userId, userRole, pending, addRating, editRating, removeRating }: IRatingsWrapperProps) => {\n  const [showNewRating, setShowNewRating] = useState<boolean>(false);\n\n  const handleNewRatingUndisplay = useCallback(() => {\n    setShowNewRating(false);\n  }, []);\n\n  return (\n    <Card className='rating-panel' as='article'>\n      <RatingsHeader commentsCount={ratings?.length ?? 0} userRole={userRole} showNewRating={showNewRating} onShowNewRating={() => setShowNewRating(true)} />\n      <Card.Body>\n        {showNewRating && userRole != null && [UserRole.USER, UserRole.STAFF, UserRole.ADMIN].includes(userRole) && (\n          <RatingForm addRating={addRating} editRating={editRating} onSubmitSuccess={handleNewRatingUndisplay} onCancel={handleNewRatingUndisplay} />\n        )}\n        <RatingComments ratings={ratings} pending={pending} userId={userId} userRole={userRole} editRating={editRating} removeRating={removeRating} />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default RatingsWrapper;\n","import { useCallback, useEffect } from 'react';\n\nimport RatingsWrapper from '../components/RatingsWrapper';\nimport * as RatingsActions from '../store/actions';\nimport { RatingCreate, RatingUpdate } from '../store/types';\nimport { RootState } from '../../app/Store';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport ErrorBoundary from '../../common/components/ErrorBoundary';\n\nconst Ratings: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const account = useSelector((state: RootState) => state.account.item);\n  const recipe  = useSelector((state: RootState) => state.recipe.item);\n  const ratingsState = useSelector((state: RootState) => state.ratings);\n\n  const recipeSlug = recipe?.slug;\n  const recipeRating = recipe?.rating;\n\n  const addRating  = useCallback(async (rating: RatingCreate) => RatingsActions.add(dispatch, recipeSlug ?? '', rating), [recipeSlug]);\n  const editRating = useCallback(async (rating: RatingUpdate) => RatingsActions.update(dispatch, recipeSlug ?? '', rating), [recipeSlug]);\n  const removeRatingCallback = useCallback((ratingId: number) => dispatch(RatingsActions.remove(recipeSlug ?? '', ratingId)), [recipeSlug]);\n\n  useEffect(() => {\n    if (recipeSlug == null || recipeRating == null || recipeRating === 0) return;\n    dispatch(RatingsActions.load(recipeSlug));\n  }, [recipeSlug, recipeRating]);\n\n  if (recipeSlug == null) return null;\n  const ratings = recipeSlug != null && ratingsState.items != null ? ratingsState.items[recipeSlug] : undefined;\n\n  return (\n    <ErrorBoundary verbose printStack>\n      <RatingsWrapper\n          userId     = {account?.id}\n          userRole   = {account?.role}\n          ratings    = {ratings}\n          pending    = {ratingsState.meta.pending}\n\n          addRating  = {addRating}\n          editRating = {editRating}\n          removeRating = {removeRatingCallback} />\n    </ErrorBoundary>\n  );\n};\n\nexport default Ratings;\n","import request from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport ReduxHelper, { ACTION } from '../../common/store/ReduxHelper';\nimport { AnyDispatch, toBasicAction } from '../../common/store/redux';\nimport { handleError, handleFormError } from '../../common/requestUtils';\nimport { RatingCreate, RatingDispatch, RatingsDispatch, RATINGS_STORE, RATING_STORE, toRating, RatingUpdate } from './types';\n\nexport const load = (recipeSlug: string) => (dispatch: RatingsDispatch) => {\n  dispatch({ ...toBasicAction(RATINGS_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.ratings}?recipe__slug=${recipeSlug}`)\n    .then(res => dispatch({\n      ...toBasicAction(\n        RATINGS_STORE,\n        ACTION.GET_SUCCESS\n      ),\n      id: recipeSlug,\n      payload: ReduxHelper.transformEntities(res.body.results, toRating),\n    }))\n    .catch(err => dispatch(handleError(err, RATINGS_STORE)));\n};\n\nexport const add = async (dispatch: AnyDispatch, recipeSlug: string, rating: RatingCreate) => {\n  dispatch({ ...toBasicAction(RATING_STORE, ACTION.CREATE_START) });\n  return request()\n    .post(serverURLs.ratings)\n    .send({\n      recipe:  recipeSlug,\n      rating:  rating.rating,\n      comment: rating.comment,\n    })\n    .then(res => {\n      dispatch({\n        ...toBasicAction(\n          RATING_STORE,\n          ACTION.CREATE_SUCCESS\n        ),\n        payload: {\n          recipe: recipeSlug,\n          rating:   toRating(res.body),\n        },\n      });\n      return null;\n    })\n    .catch(err => handleFormError(dispatch, err, RATINGS_STORE));\n};\n\nexport const update = async (dispatch: AnyDispatch, recipeSlug: string, rating: RatingUpdate) => {\n  dispatch({ ...toBasicAction(RATING_STORE, ACTION.UPDATE_START) });\n  return request()\n    .patch(`${serverURLs.ratings}${rating.id}/`)\n    .send({\n      rating:  rating.rating,\n      comment: rating.comment,\n    })\n    .then(res => {\n      dispatch({\n        ...toBasicAction(\n          RATING_STORE,\n          ACTION.UPDATE_SUCCESS\n        ),\n        payload: {\n          recipe: recipeSlug,\n          rating: toRating(res.body),\n        },\n      });\n      return null;\n    })\n    .catch(err => handleFormError(dispatch, err, RATINGS_STORE));\n};\n\nexport const remove = (recipeSlug: string, id: number) => (dispatch: RatingDispatch) => {\n  dispatch({ ...toBasicAction(RATING_STORE, ACTION.DELETE_START) });\n  request()\n    .delete(`${serverURLs.ratings}${id}/`)\n    .then(() => dispatch({\n      ...toBasicAction(\n        RATING_STORE,\n        ACTION.DELETE_SUCCESS\n      ),\n      payload: {\n        ratingId: id,\n        recipe:   recipeSlug,\n      },\n    }))\n    .catch(err => dispatch(handleError(err, RATINGS_STORE)));\n};\n","import { useIntl } from 'react-intl';\n\nimport { RootState } from '../../app/Store';\nimport { useSelector } from '../../common/store/redux';\nimport { Recipe } from '../store/RecipeTypes';\nimport MiniBrowse from '../../browse/containers/MiniBrowse';\nimport ErrorBoundary from '../../common/components/ErrorBoundary';\nimport { getEnvAsBoolean } from '../../common/utility';\n\nexport interface IRecipeFooterProps {\n  recipe?: Recipe;\n}\n\nfunction getFilters(recipe: Recipe): Record<string, string> | undefined {\n  const res: Record<string, string> = {};\n  if (recipe.course) {\n    res.course__slug = recipe.course.title;\n  }\n  if (recipe.cuisine) {\n    res.cuisine__slug = recipe.cuisine.title;\n  }\n  return Object.keys(res).length > 0 ? res : undefined;\n}\n\nconst RecipeFooter: React.FC<IRecipeFooterProps> = ({ recipe }: IRecipeFooterProps) => {\n  const intl = useIntl();\n\n  const miniBrowseMeta = useSelector((state: RootState) => state.browse.browserMini.meta);\n  const disableRecipeDiscovery = useSelector((state: RootState) => state.settings.disableRecipeDiscovery) || getEnvAsBoolean('REACT_APP_DISABLE_RECIPE_DISCOVERY') || false;\n\n  if (!miniBrowseMeta.hasConnection || miniBrowseMeta.error || disableRecipeDiscovery\n      || !recipe?.author) return null;\n\n  return (\n    <ErrorBoundary verbose printStack>\n      <hr />\n      <article className='recipe-footer'>\n        <MiniBrowse\n            heading = {intl.messages['nav.home.recommended_recipes_title'] as string}\n            count = {4}\n            filters = {getFilters(recipe)} />\n      </article>\n    </ErrorBoundary>\n  );\n};\n\nexport default RecipeFooter;\n","import { useCallback, useMemo } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Button, Form } from 'react-bootstrap';\nimport { Form as ReduxForm } from 'react-final-form';\n\nimport { Recipe } from '../store/RecipeTypes';\nimport { PendingState, ReducerMeta } from '../../common/store/GenericReducerType';\nimport Icon from '../../common/components/Icon';\nimport InitialValuesResetter from '../../common/components/ReduxForm/ReInitialValuesResetter';\nimport ReInput from '../../common/components/ReduxForm/ReInput';\nimport HeaderLink from '../../common/components/HeaderLink';\nimport { ValidationResult } from '../../common/store/Validation';\n\nexport interface IIngredientsHeaderProps {\n  recipe:      Recipe | undefined;\n  recipeMeta:  ReducerMeta;\n\n  updateServings: (servings: number) => Promise<ValidationResult>;\n}\n\nconst messages = defineMessages({\n  ingredients: {\n    id: 'recipe.ingredients',\n    description: 'Ingredients',\n    defaultMessage: 'Ingredients',\n  },\n  ingredients_for_servings: {\n    id: 'recipe.ingredients_for_servings',\n    description: 'Ingredients for[ n servings]',\n    defaultMessage: 'Ingredients for',\n  },\n  servings: {\n    id: 'recipe.servings',\n    description: 'Servings',\n    defaultMessage: 'Servings',\n  },\n  servings_input_tooltip: {\n    id: 'recipe.servings_input_tooltip',\n    description: 'Accessible tooltip for the (change) servings input',\n    defaultMessage: 'Amount of servings',\n  },\n  servings_update_button: {\n    id: 'recipe.servings_update_button',\n    description: 'Label for the button to change the servings',\n    defaultMessage: 'Update servings',\n  },\n});\n\nexport interface IFormDataProps {\n  servings: number;\n}\n\nconst IngredientsHeader: React.FC<IIngredientsHeaderProps> = ({\n    recipe, recipeMeta, updateServings }: IIngredientsHeaderProps) => {\n  const { formatMessage } = useIntl();\n\n  const customServings = recipe?.customServings;\n\n  const handleSubmit = useCallback(async (form: IFormDataProps) => updateServings(form.servings), [updateServings]);\n\n  const initialValues: Partial<IFormDataProps> = useMemo(() => ({\n    servings: customServings,\n  }), [customServings]);\n\n  const pending  = recipeMeta.pending;\n  const servings = recipe?.customServings ?? 0;\n  const hasNoIngredients = pending === PendingState.COMPLETED\n      && recipe?.subrecipes != null && recipe.subrecipes.length === 0\n      && recipe?.ingredientGroups != null && recipe.ingredientGroups.length === 0;\n\n  return (\n    <>\n      {(hasNoIngredients || servings === 0) && (\n        <h2 id='ingredients-heading'>\n          {formatMessage(messages.ingredients)}\n          <HeaderLink linkFor='ingredients-heading' />\n        </h2>\n      )}\n      {!hasNoIngredients && servings > 0 && (\n        <div className='ingredients-for-servings-row'>\n          <h2 id='ingredients-heading'>\n            {formatMessage(messages.ingredients_for_servings)}\n            <HeaderLink linkFor='ingredients-heading' />\n            <span className='print-only'>{`: ${recipe?.customServings ?? ''} ${formatMessage(messages.servings)}`}</span>\n          </h2>\n          <div className='custom-servings print-hidden'>\n            <ReduxForm\n                initialValues = {initialValues}\n                onSubmit = {handleSubmit}\n                subscription = {{}}\n                render = {({ form, handleSubmit: renderSubmit }) => (\n                  <Form onSubmit={renderSubmit} className='custom-servings'>\n                    <InitialValuesResetter form={form} initialValues={initialValues} />\n                    <ReInput\n                        name  = 'servings'\n                        type  = 'number'\n                        aria-label = {formatMessage(messages.servings_input_tooltip)}\n                        min   = {0}\n                        max   = {1000}\n                        autoComplete = 'off' />\n                    <Button type='submit' variant='primary' aria-label={formatMessage(messages.servings_update_button)}>\n                      <Icon icon='arrow-repeat' variant='light' />\n                      {formatMessage(messages.servings)}\n                    </Button>\n                  </Form>\n                )} />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default IngredientsHeader;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { forwardRef } from 'react';\nimport { Field } from 'react-final-form';\nimport { useIntl } from 'react-intl';\n\nimport { formatValidation, requiredValidator } from '../../store/Validation';\nimport { ISelectProps, Select } from '../Input/Select';\n\nexport interface IReSelectProps extends ISelectProps {\n  format?: (value: any, name: string) => string;\n  parse?:  (value: any, name: string) => any;\n}\n\nconst ReSelect = forwardRef<Select, IReSelectProps>(({\n    name, required, data, format, parse,\n    onChange, onFocus, onBlur, ...rest }: IReSelectProps, ref) => {\n  const intl = useIntl();\n\n  return (\n    <Field name={name} validate={required ? requiredValidator : undefined} validateFields={[]} format={format} parse={parse}>\n      {fprops => (\n        <Select\n            {...rest}\n            required = {required}\n\n            name     = {fprops.input.name}\n            value    = {fprops.input.value}\n            data     = {data}\n            errors   = {formatValidation(intl, fprops.meta.error || (!fprops.meta.dirtySinceLastSubmit ? fprops.meta.submitError : undefined))}\n            meta     = {fprops.meta}\n            onChange = {(namee: string, value: string | undefined) => { fprops.input.onChange(value); onChange?.(namee, value); }}\n            onFocus  = {(event: React.FocusEvent<HTMLElement, Element>) => { fprops.input.onFocus(event); onFocus?.(event); }}\n            onBlur   = {(event: React.FocusEvent<HTMLElement, Element>) => { fprops.input.onBlur(event);  onBlur?.(event); }}\n            ref = {ref} />\n      )}\n    </Field>\n  );\n});\n\nexport default ReSelect;\n","import { forwardRef, RefObject, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Col, Form, Row } from 'react-bootstrap';\nimport { Form as ReduxForm } from 'react-final-form';\nimport { FormApi } from 'final-form';\n\nimport '../css/add_to_grocery_list_modal.css';\n\nimport { RootState } from '../../app/Store';\nimport Modal from '../../common/components/Modal';\nimport { ValidationResult } from '../../common/store/Validation';\nimport { Ingredient, IngredientGroup, SubRecipe } from '../store/RecipeTypes';\nimport ReFormStatus from '../../common/components/ReduxForm/ReFormStatus';\nimport InitialValuesResetter from '../../common/components/ReduxForm/ReInitialValuesResetter';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport Checkbox from '../../common/components/Input/Checkbox';\nimport useCrash from '../../common/hooks/useCrash';\nimport Icon from '../../common/components/Icon';\nimport Button from '../../common/components/Button';\nimport P from '../../common/components/P';\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport { GroceryList, GroceryListBulkAdd, GroceryListCreate } from '../../groceryList/store/GroceryListTypes';\nimport * as GroceryListsActions from '../../groceryList/store/GroceryListsActions';\nimport * as GroceryListActions from '../../groceryList/store/GroceryListActions';\nimport ReSelect from '../../common/components/ReduxForm/ReSelect';\nimport MeasurementContext from '../../common/context/MeasurementContext';\nimport IngredientGroups from './IngredientGroups';\nimport SubRecipes from './SubRecipes';\nimport { formatMeasurement } from './Ingredients';\n\nexport interface IAddToGroceryListModalProps {\n  show: boolean;\n  subrecipes: Array<SubRecipe> | undefined;\n  ingredients: Array<IngredientGroup> | undefined;\n  onSaveSuccess: () => void;\n  onClose: () => void;\n}\n\ninterface AddToGroceryListData {\n  list: number;\n  ingredients: Array<{ slug: string, title: string, ingredients: Array<number> }>;\n  subrecipes: Array<number>;\n}\n\nconst AddToGroceryListModal: React.FC<IAddToGroceryListModalProps> = ({\n    show, subrecipes, ingredients, onSaveSuccess, onClose }: IAddToGroceryListModalProps) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  const measurementContext = useContext(MeasurementContext);\n  const formatMeasurementCb = useCallback((measurement: string | undefined, quantity: string | undefined) => formatMeasurement(intl, measurementContext, measurement, quantity), [measurementContext, intl]);\n\n  const bulkAdd = useCallback(async (list: number, data: GroceryListBulkAdd) => GroceryListActions.bulkAdd(dispatch, list, data, formatMeasurementCb), []);\n  const createList = useCallback(async (item: GroceryListCreate) => GroceryListActions.create(dispatch, item), []);\n\n  const groceryListsState = useSelector((state: RootState) => state.groceryLists);\n  const { items: lists } = groceryListsState;\n  useEffect(() => {\n    dispatch(GroceryListsActions.load());\n  }, []);\n\n  const bulkAddPending = useSelector((state: RootState) => state.groceryList.meta.pending);\n\n  const submitRef = useRef<HTMLButtonElement>(null);\n\n  const handleEditSubmit = useCallback(() => {\n    submitRef.current?.click();\n  }, [submitRef.current]);\n  const handleSubmit = useCallback(async (form: AddToGroceryListData) => {\n    const allIngredients = ingredients?.flatMap(ig => ig.ingredients) ?? [];\n    const allSubrecipes  = subrecipes != null ? [...subrecipes] : [];\n\n    const addIngredientGroups: Array<IngredientGroup> = [];\n    form.ingredients.forEach(ig => {\n      const addIngredients: Array<Ingredient> = ig.ingredients.map(i => allIngredients.find(ii => ii.id === i)).filter(Boolean) as Array<Ingredient>;\n      if (ig.ingredients.length > 0) {\n        addIngredientGroups.push({ slug: ig.slug, title: ig.title, ingredients: addIngredients });\n      }\n    });\n\n    const addSubrecipes: Array<SubRecipe> = allSubrecipes.filter(s => form.subrecipes.includes(s.child_recipe_id));\n\n    const bulkAddData: GroceryListBulkAdd = {\n      ingredientGroups: addIngredientGroups,\n      subrecipes: addSubrecipes,\n    };\n\n    return bulkAdd(form.list, bulkAddData);\n  }, [ingredients, subrecipes, bulkAdd]);\n  const handleSubmitSuccess = useCallback(() => {\n    onSaveSuccess();\n    onClose();\n  }, [onSaveSuccess, onClose]);\n  const handleModalClose = useCallback((autoClose: boolean) => {\n    if (!autoClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  if (!show || lists == null || subrecipes == null || ingredients == null) return null;\n\n  return (\n    <Modal\n        show = {show}\n        title = {intl.messages['recipe.recipe_ingredient_button.add_groceries'] as string}\n        onAccept = {handleEditSubmit}\n        acceptButtonProps = {{ disabled: lists.length === 0 || bulkAddPending === PendingState.SAVING }}\n        onClose  = {handleModalClose}\n        className = 'add-to-grocery-list-modal'>\n      <AddToGroceryListForm\n          lists = {lists}\n          subrecipes = {subrecipes}\n          ingredients = {ingredients}\n          onSubmit = {handleSubmit}\n          onSubmitSuccess = {handleSubmitSuccess}\n          onAddList = {createList}\n          submitRef = {submitRef} />\n    </Modal>\n  );\n};\n\ninterface IAddToGroceryListProps {\n  lists:       Array<GroceryList>;\n  subrecipes:  Array<SubRecipe>;\n  ingredients: Array<IngredientGroup>;\n  onSubmit: (upd: AddToGroceryListData) => Promise<ValidationResult>;\n  onSubmitSuccess: () => void;\n  onAddList: (item: GroceryListCreate) => Promise<ValidationResult>;\n  submitRef: RefObject<HTMLButtonElement>;\n}\n\ninterface IAddToGroceryListFormDataProps {\n  list: string;\n  subrecipes:  Record<string, boolean>;\n  ingredients: Record<string, Record<string, boolean>>;\n}\n\nfunction initializeCheckboxes(cbs: Array<string>): Record<string, boolean> {\n  const res: Record<string, boolean> = {};\n  cbs.forEach(cb => {\n    res[cb] = true;\n  });\n  return res;\n}\n\nfunction initializeInredientGroupsCheckboxes(igs: Array<IngredientGroup>): Record<string, Record<string, boolean>> {\n  const res: Record<string, Record<string, boolean>> = {};\n  igs.forEach(ig => {\n    res[ig.slug] = { ...initializeCheckboxes(ig.ingredients.flatMap(i => `cb-${i.id}`)) };\n  });\n  return res;\n}\n\nfunction uniquify<T>(arr: Array<T>): Array<T> {\n  return Array.from(new Set(arr));\n}\n\nconst AddToGroceryListForm = forwardRef<HTMLFormElement, IAddToGroceryListProps>(({\n    lists, subrecipes, ingredients, onSubmit, onSubmitSuccess, onAddList, submitRef }: IAddToGroceryListProps, ref) => {\n  const crash = useCrash();\n\n  const [initialValues] = useState<Partial<IAddToGroceryListFormDataProps>>({\n    list: lists.length > 0 ? lists[lists.length - 1].id.toString() : undefined,\n    ingredients: initializeInredientGroupsCheckboxes(ingredients),\n    subrecipes: {\n      ...initializeCheckboxes(subrecipes.flatMap(sr => `cb-${sr.child_recipe_id}`)),\n    },\n  });\n  // console.log(`initialValues=${JSON.stringify(initialValues, undefined, 2)}`);\n\n  const handleSubmit = useCallback(async (form: IAddToGroceryListFormDataProps): Promise<ValidationResult> => {\n    /*\n      form is something like:\n\n      list: 2,\n      ingredients: {\n        default: {\n          cb-123: true,\n          cb-124: true,\n        },\n        dough: {\n          cb-223: true,\n          cb-625: true,\n        },\n      subrecipe-cb-451: true,\n    */\n\n    const addSubrecipes: Array<number> = [];\n    Object.keys(form.subrecipes).forEach(s => {\n      if (form.subrecipes[s]) {\n        addSubrecipes.push(parseInt(s.substring(s.indexOf('-') + 1)));\n      }\n    });\n    const addIngredientGroups: Array<{ slug: string, title: string, ingredients: Array<number> }> = [];\n    Object.keys(form.ingredients ?? {}).forEach(igSlug => {\n      const addIgIngredients: Set<number> = new Set();\n      const ig = ingredients.find(igg => igg.slug === igSlug);\n      if (!ig) { crash(`Invalid state: There is not IngredientGroup for slug \"${igSlug}\"`); return; }\n      const igIngredients = form.ingredients[igSlug];\n      Object.keys(igIngredients).forEach(i => {\n        if (igIngredients[i]) {\n          addIgIngredients.add(parseInt(i.substring(i.indexOf('-') + 1)));\n        }\n      });\n      if (Object.keys(igIngredients).length > 0) {\n        addIngredientGroups.push({ slug: ig.slug, title: ig.title, ingredients: Array.from(addIgIngredients) });\n      }\n    });\n\n    const upd: AddToGroceryListData = {\n      list:        parseInt(form.list),\n      ingredients: addIngredientGroups,\n      subrecipes:  uniquify(addSubrecipes),\n    };\n    return onSubmit(upd);\n  }, [ingredients, onSubmit]);\n\n  return (\n    <ReduxForm\n        initialValues = {initialValues}\n        onSubmit = {handleSubmit}\n        subscription = {{}}\n        render = {({ form, handleSubmit: renderSubmit }) => (\n          <Form onSubmit={renderSubmit} ref={ref}>\n            <ReFormStatus onSubmitSuccess={onSubmitSuccess} />\n            <InitialValuesResetter form={form} initialValues={initialValues} />\n\n            <ListRow\n                lists = {lists}\n                form = {form}\n                onAddList = {onAddList} />\n\n            {lists.length > 0 && (\n              <>\n                <Row className='additional-checkbox-row'>\n                  <Col>\n                    <ToggleAllCheckbox\n                        name = 'toggle-all'\n                        form = {form}\n                        />\n                  </Col>\n                </Row>\n\n                <Row className='ingredients-and-subrecipes'>\n                  <Col>\n                    <SubRecipes\n                        subRecipes = {subrecipes}\n                        selectable\n                        />\n                    <IngredientGroups\n                        groups = {ingredients}\n                        hasSubrecipes = {subrecipes != null && subrecipes.length > 0}\n                        selectable\n                        />\n                  </Col>\n                </Row>\n              </>\n            )}\n            <button type='submit' ref={submitRef} className='visibility-hidden'>Submit</button>\n          </Form>\n        )} />\n  );\n});\n\nconst messages = defineMessages({\n  list: {\n    id: 'grocery_list.form.list',\n    defaultMessage: 'List',\n  },\n  new_text: {\n    id: 'grocery_list.item.new_text',\n    defaultMessage: 'Create a new grocery list to get started.',\n  },\n  new_list_title: {\n    id: 'grocery_list.item.new_title',\n    defaultMessage: 'My grocery list',\n  },\n});\n\ninterface IListRowProps {\n  lists: Array<GroceryList>;\n  form: FormApi<IAddToGroceryListFormDataProps, Partial<IAddToGroceryListFormDataProps>>;\n  onAddList: (item: GroceryListCreate) => Promise<ValidationResult>;\n}\n\nconst ListRow: React.FC<IListRowProps> = ({\n    lists, form, onAddList }: IListRowProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const [addedNewList, setAddedNewList] = useState<boolean>(false);\n  const prevListIds = useRef<Array<number> | undefined>();\n\n  const handleAddListClick = useCallback(() => {\n    const newListTitle = `${formatMessage(messages.new_list_title)}`;\n    const suffixes = lists\n        .filter(l => l.title.startsWith(newListTitle))\n        .map(l => parseInt(l.title.substring(newListTitle.length)))\n        .filter(i => !Number.isNaN(i) || i < 0)\n        .sort((a, b) => a - b);\n    const suffix = suffixes.length > 0 ? (suffixes[suffixes.length - 1] + 1) : 1;\n\n    prevListIds.current = lists.map(l => l.id);\n    onAddList({ title: `${newListTitle} ${suffix}` })\n        .then(() => {\n          setAddedNewList(true);\n        });\n  }, [lists, onAddList, formatMessage]);\n\n  useEffect(() => {\n    if (prevListIds.current == null) return;\n    const newIds = lists.map(l => l.id);\n\n    const newList = newIds.find(i => !prevListIds.current?.includes(i));\n    if (!newList) return;\n    form.change('list', newList.toString());\n\n    prevListIds.current = [];\n  }, [lists]);\n\n  return (\n    <Row>\n      <Col className='input-with-button'>\n        {lists.length === 0 && (\n          <>\n            <P>{formatMessage(messages.new_text)}</P>\n            <Button id='add-list-button' type='button' onClick={handleAddListClick} variant='primary' className='add-list-button'>\n              {intl.messages['nav.grocery_list_create'] as string}\n            </Button>\n          </>\n        )}\n        {lists.length > 0 && (\n          <>\n            <ReSelect\n                name   = 'list'\n                label  = {formatMessage(messages.list)}\n                data   = {lists.map(l => ({ value: l.id.toString(), label: l.title }))}\n                readOnly = {lists.length === 0}\n                disabled = {lists.length === 0} />\n            {!addedNewList && (\n              <Button id='add-list-button' type='button' onClick={handleAddListClick} variant='transparent' className='add-list-button' tooltip={intl.messages['nav.grocery_list_create'] as string}>\n                <Icon icon='plus-lg' variant='light' size='2x' />\n              </Button>\n            )}\n          </>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\ninterface IToggleAllCheckboxProps {\n  name: string;\n  form: FormApi<IAddToGroceryListFormDataProps, Partial<IAddToGroceryListFormDataProps>>;\n}\n\nconst ToggleAllCheckbox: React.FC<IToggleAllCheckboxProps> = ({\n    name, form }: IToggleAllCheckboxProps) => {\n  const intl = useIntl();\n  const [value, setValue] = useState<boolean>(true);\n\n  const handleChange = useCallback((_name: string, newValue: boolean) => {\n    setValue(newValue);\n\n    const registeredFields = form.getRegisteredFields();\n\n    const ingredientGroupsCbs = registeredFields.filter(f => f.startsWith('ingredients.') && f.includes('cb-'));\n    const subrecipesCbs = registeredFields.filter(f => f.startsWith('subrecipes.') && f.includes('cb-'));\n\n    const allCbs = [...ingredientGroupsCbs, ...subrecipesCbs];\n    allCbs.forEach(cbKey => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      form.change(cbKey as any, newValue);\n    });\n  }, [form]);\n\n  return (\n    <Checkbox\n        name   = {name}\n        label  = {intl.messages['grocery_list.items.toggle_all'] as string}\n        value  = {value}\n        onChange = {handleChange} />\n  );\n};\n\nexport default AddToGroceryListModal;\n","import { useCallback, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\n\nimport '../css/ingredients_footer.css';\n\nimport { getRoutePath, isDemoMode } from '../../common/utility';\nimport Icon from '../../common/components/Icon';\nimport ConditionalWrapper from '../../common/components/ConditionalWrapper';\nimport { IngredientGroup, SubRecipe } from '../store/RecipeTypes';\nimport AddToGroceryListModal from './AddToGroceryListModal';\nimport Toast from '../../common/components/Toast';\n\nconst messages = defineMessages({\n  add_groceries: {\n    id: 'recipe.recipe_ingredient_button.add_groceries',\n    description: 'Add groceries to list',\n    defaultMessage: 'Add to grocery list',\n  },\n  add_groceries_success_toast: {\n    id: 'recipe.recipe_ingredient_button.success_toast',\n    description: 'Add groceries to list success toast',\n    defaultMessage: 'Groceries added to the list.',\n  },\n});\n\nexport interface IIngredientsFooterProps {\n  subrecipes: Array<SubRecipe> | undefined;\n  ingredients: Array<IngredientGroup> | undefined;\n  isAuthenticated: boolean;\n}\n\nconst IngredientsFooter: React.FC<IIngredientsFooterProps> = ({\n    isAuthenticated, subrecipes, ingredients }: IIngredientsFooterProps) => {\n  const { formatMessage } = useIntl();\n\n  const [showGroceriesModal, setShowGroceriesModal] = useState<boolean>(false);\n  const handleAddGroceries = useCallback(() => {\n    setShowGroceriesModal(true);\n  }, []);\n  const handleGroceriesModalClose = useCallback(() => {\n    setShowGroceriesModal(false);\n  }, []);\n\n  const [showGroceriesSuccessToast, setShowGroceriesSuccessToast] = useState<boolean>(false);\n  const handleAddToGroceryListSuccess = useCallback(() => {\n    setShowGroceriesSuccessToast(true);\n  }, []);\n  const handleCloseAddGroceryListToast = useCallback(() => {\n    setShowGroceriesSuccessToast(false);\n  }, []);\n\n  return (\n    <div className='ingredients-footer print-hidden'>\n      <ConditionalWrapper\n          condition = {!isAuthenticated}\n          render = {childr => <Link to={getRoutePath('/login')}>{childr}</Link>}>\n        <Button onClick={handleAddGroceries} variant='primary' disabled={isDemoMode()}>\n          <Icon icon='clipboard2-check' />\n          {formatMessage(messages.add_groceries)}\n        </Button>\n      </ConditionalWrapper>\n\n      <AddToGroceryListModal\n          show = {showGroceriesModal}\n          subrecipes = {subrecipes}\n          ingredients = {ingredients}\n          onClose = {handleGroceriesModalClose}\n          onSaveSuccess = {handleAddToGroceryListSuccess}\n          />\n\n      <Toast\n          show = {showGroceriesSuccessToast}\n          variant = 'success'\n          anchorOrigin = {{ horizontal: 'center', vertical: 'bottom' }}\n          onClose = {handleCloseAddGroceryListToast}>\n        {formatMessage(messages.add_groceries_success_toast)}\n      </Toast>\n    </div>\n  );\n};\n\nexport default IngredientsFooter;\n","import { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/ingredients_panel.css';\n\nimport { Recipe } from '../store/RecipeTypes';\nimport { PendingState, ReducerMeta } from '../../common/store/GenericReducerType';\nimport P from '../../common/components/P';\nimport Loading from '../../common/components/Loading';\nimport { ValidationResult } from '../../common/store/Validation';\nimport SubRecipes from './SubRecipes';\nimport IngredientGroups from './IngredientGroups';\nimport IngredientsHeader from './IngredientsHeader';\nimport IngredientFooter from './IngredientsFooter';\n\nconst messages = defineMessages({\n  no_ingredients: {\n    id: 'recipe.recipe_ingredient_button.no_ingredients',\n    description: 'No ingredients provided message',\n    defaultMessage: '(This recipe has no ingredients.)',\n  },\n});\n\nexport interface IIngredientsPanelProps {\n  recipe:      Recipe | undefined;\n  recipeMeta:  ReducerMeta;\n  userId:      number | undefined;\n\n  updateServings: (servings: number) => Promise<ValidationResult>;\n}\n\nconst IngredientsPanel: React.FC<IIngredientsPanelProps> = ({ recipe, recipeMeta, userId, updateServings }: IIngredientsPanelProps) => {\n  const { formatMessage } = useIntl();\n\n  const pending = recipeMeta.pending;\n  const hasNoIngredients = pending === PendingState.COMPLETED\n      && recipe?.subrecipes != null && recipe.subrecipes.length === 0\n      && recipe?.ingredientGroups != null && recipe.ingredientGroups.length === 0;\n\n  return (\n    <article className='ingredients-panel'>\n      <IngredientsHeader recipe={recipe} recipeMeta={recipeMeta} updateServings={updateServings} />\n      {pending === PendingState.LOADING && recipe?.ingredientGroups == null && <Loading />}\n      {hasNoIngredients && (\n        <P className='placeholder'>{formatMessage(messages.no_ingredients)}</P>\n      )}\n      {!hasNoIngredients && (\n        <>\n          <div className='ingredient-groups'>\n            <SubRecipes\n                withHeaderLink\n                subRecipes = {recipe?.subrecipes}\n                />\n            <IngredientGroups\n                withHeaderLink\n                groups  = {recipe?.ingredientGroups}\n                hasSubrecipes = {recipe?.subrecipes != null && recipe?.subrecipes.length > 0}\n                />\n          </div>\n          <IngredientFooter\n              subrecipes = {recipe?.subrecipes}\n              ingredients = {recipe?.ingredientGroups}\n              isAuthenticated = {userId != null} />\n        </>\n      )}\n    </article>\n  );\n};\n\nexport default IngredientsPanel;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport '../css/ingredients_panel.css';\n\nimport { useDispatch } from '../../common/store/redux';\nimport { Recipe } from '../store/RecipeTypes';\nimport { updateServings } from '../store/RecipeActions';\nimport { ReducerMeta } from '../../common/store/GenericReducerType';\nimport IngredientsPanel from '../components/IngredientsPanel';\n\nexport interface IIngredientsPanelContainerProps {\n  recipe:      Recipe | undefined;\n  recipeMeta:  ReducerMeta;\n  userId:      number | undefined;\n}\n\nconst IngredientsPanelContainer: React.FC<IIngredientsPanelContainerProps> = ({ recipe, recipeMeta, userId }: IIngredientsPanelContainerProps) => {\n  const dispatch = useDispatch();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const recipeSlug = recipe?.slug ?? '';\n\n  const handleUpdateServings = useCallback((servings: number) => {\n    setSearchParams({ ...searchParams, servings: String(servings) });\n    return dispatch(updateServings(recipeSlug, servings));\n  }, [searchParams, recipeSlug]);\n\n  const locationServings = useMemo(() => {\n    const serv = searchParams.get('servings');\n    if (!serv) return undefined;\n    const servNumber = Number.parseFloat(serv);\n    if (Number.isNaN(servNumber)) return undefined;\n    return servNumber;\n  }, [searchParams]);\n\n  const customServings = recipe?.customServings;\n\n  useEffect(() => {\n    if (locationServings && locationServings !== customServings) {\n      handleUpdateServings(locationServings);\n    }\n  }, [handleUpdateServings, locationServings, customServings]);\n\n  return (\n    <IngredientsPanel\n        recipe     = {recipe}\n        recipeMeta = {recipeMeta}\n        userId     = {userId}\n        updateServings = {handleUpdateServings}\n        />\n  );\n};\n\nexport default IngredientsPanelContainer;\n","import { Children, forwardRef, isValidElement, useCallback, useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport '../css/image_viewer.css';\n\nimport { CommonProps } from '../types/OverridableComponent';\nimport { ModalHeaderCloseButton } from './Modal';\nimport { IImageProps } from './Image';\nimport Icon from './Icon';\nimport ErrorBoundary from './ErrorBoundary';\n\nexport interface IImageViewerProps extends CommonProps {\n  children: React.ReactElement<IImageProps>; // | Array<React.ReactElement<IImageProps>>;\n}\n\nconst ImageViewer = forwardRef<HTMLButtonElement, IImageViewerProps>(({\n    className, children, ...rest }: IImageViewerProps, ref) => {\n  const [openModal, setOpenModal] = useState<boolean>(false);\n\n  const handleOpenModal  = useCallback(() => { setOpenModal(true); }, []);\n  const handleCloseModal = useCallback(() => { setOpenModal(false); }, []);\n\n  return (\n    <ErrorBoundary verbose={false} printStack={false}>\n      <Button\n          type = 'button'\n          className = {classNames('image-viewer', className)}\n          onClick = {handleOpenModal}\n          {...rest}\n          ref = {ref}\n          >\n        {children}\n      </Button>\n\n      <Modal\n          show = {openModal}\n          fullscreen\n          onHide = {handleCloseModal}\n          className = 'image-viewer-dialog'\n          >\n        <ErrorBoundary verbose printStack>\n          <ImageViewerContent\n              onClose = {handleCloseModal}>\n            {children}\n          </ImageViewerContent>\n        </ErrorBoundary>\n      </Modal>\n    </ErrorBoundary>\n  );\n});\n\ninterface IImageViewerContentProps extends CommonProps {\n  onClose: () => void;\n\n  children: React.ReactElement<IImageProps>; // | Array<React.ReactElement<IImageProps>>;\n}\n\nconst ImageViewerContent = forwardRef<HTMLDivElement, IImageViewerContentProps>(({\n    onClose, children, ...rest }: IImageViewerContentProps, ref) => {\n  // This is a good spot to generate some kind of list, if more than 1 image is provided.\n  let nextSrc = '';\n  Children.forEach(children, element => {\n    if (!isValidElement(element)) return;\n\n    const { src } = element.props;\n    nextSrc = src;\n  });\n  const nextTitle = nextSrc.includes('/') ? nextSrc.substring(nextSrc.lastIndexOf('/') + 1) : nextSrc;\n\n  return (\n    <>\n      <Modal.Header {...rest} ref={ref}>\n        <Modal.Title>{nextTitle}</Modal.Title>\n        <a title={nextTitle} download={nextTitle} href={nextSrc} className='btn btn-transparent close-button download-button' aria-label='Download'>\n          <Icon icon='download' variant='light' size='2x' />\n        </a>\n        <ModalHeaderCloseButton onClose={onClose} />\n      </Modal.Header>\n      <Modal.Body>\n        {children}\n      </Modal.Body>\n    </>\n  );\n});\n\nexport default ImageViewer;\n","import { createContext } from 'react';\n\nexport interface ICookingModeContext {\n  cookingMode: boolean;\n  setCookingMode: (active: boolean) => void;\n}\n\nconst CookingModeContext = createContext<ICookingModeContext | null>(null);\n\nexport default CookingModeContext;\n","// Coded by Joris (https://github.com/jorisre/react-screen-wake-lock)\n\nimport { useCallback, useRef, useState } from 'react';\n\nexport interface IWakeLockOptions {\n  onError?: (error: Error) => void;\n  onRequest?: () => void;\n  onRelease?: EventListener;\n}\n\ntype WakeLockType = 'screen';\n\nexport const useWakeLock = ({\n  onError,\n  onRequest,\n  onRelease,\n}: IWakeLockOptions | undefined = {}) => {\n  const [released, setReleased] = useState<boolean | undefined>();\n  const wakeLock = useRef<WakeLockSentinel | null>(null);\n\n  // https://caniuse.com/mdn-api_wakelock\n  const isSupported = typeof window !== 'undefined' && 'wakeLock' in navigator;\n\n  const request = useCallback(\n    async (type: WakeLockType = 'screen') => {\n      const isWakeLockAlreadyDefined = wakeLock.current != null;\n      if (!isSupported) {\n        // eslint-disable-next-line no-console\n        console.warn('Calling the \"request\" function has no effect, Wake Lock Screen API isn\\'t supported.');\n        return;\n      }\n      if (isWakeLockAlreadyDefined) {\n        // eslint-disable-next-line no-console\n        console.warn('Calling \"request\" multiple times without \"release\" has no effect.');\n        return;\n      }\n\n      try {\n        wakeLock.current = await navigator.wakeLock.request(type);\n\n        wakeLock.current.onrelease = (e: Event) => {\n          // Default to `true` - `released` API is experimental: https://caniuse.com/mdn-api_wakelocksentinel_released\n          setReleased((wakeLock.current && wakeLock.current.released) ?? true);\n          if (onRelease) {\n            onRelease(e);\n          }\n          wakeLock.current = null;\n        };\n\n        onRequest?.();\n        setReleased((wakeLock.current && wakeLock.current.released) ?? false);\n      } catch (error) {\n        if (onError) {\n          onError(error as Error);\n        } else {\n          // eslint-disable-next-line no-console\n          console.error((error as Error)?.message);\n        }\n      }\n    },\n    [isSupported, onRequest, onError, onRelease]\n  );\n\n  const release = useCallback(async () => {\n    const isWakeLockUndefined = wakeLock.current == null;\n    if (!isSupported) {\n      // eslint-disable-next-line no-console\n      console.warn('Calling the \"release\" function has no effect, Wake Lock Screen API isn\\'t supported.');\n      return;\n    }\n    if (isWakeLockUndefined) {\n      // eslint-disable-next-line no-console\n      console.warn('Calling `release` before `request` has no effect.');\n      return;\n    }\n\n    if (wakeLock.current) {\n      await wakeLock.current.release();\n    }\n  }, [isSupported]);\n\n  return {\n    isSupported: isSupported,\n    request:     request,\n    released:    released,\n    release:     release,\n    type:        (wakeLock.current && wakeLock.current.type) || undefined,\n  };\n};\n","import { useCallback, useContext } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/recipe_header.css';\n\nimport Icon from '../../common/components/Icon';\nimport CookingModeContext from '../context/CookingModeContext';\nimport { useWakeLock } from '../../common/hooks/useWakeLock';\nimport Button from '../../common/components/Button';\n\nconst messages = defineMessages({\n  activate_cooking_mode_tooltip: {\n    id: 'recipe.activate_cooking_mode_tooltip',\n    description: 'Tooltip displayed when hovering the activate cooking mode button',\n    defaultMessage: 'Keep display awake.',\n  },\n  deactivate_cooking_mode_tooltip: {\n    id: 'recipe.deactivate_cooking_mode_tooltip',\n    description: 'Tooltip displayed when hovering the deactivate cooking mode button',\n    defaultMessage: 'Release the display wake lock.',\n  },\n});\n\nconst CookingModeButton: React.FC = () => {\n  const { formatMessage } = useIntl();\n\n  const { isSupported } = useWakeLock();\n  const cookingModeContext = useContext(CookingModeContext);\n  const isCookingMode = cookingModeContext?.cookingMode ?? false;\n\n  const handleClick = useCallback(() => {\n    cookingModeContext?.setCookingMode(!isCookingMode);\n  }, [cookingModeContext?.setCookingMode, isCookingMode]);\n\n  if (!isSupported) return null;\n\n  return (\n    <Button id='cooking-mode-toggle' variant={isCookingMode ? 'primary' : 'outline-primary'} onClick={handleClick} tooltip={formatMessage(isCookingMode ? messages.deactivate_cooking_mode_tooltip : messages.activate_cooking_mode_tooltip)}>\n      <Icon icon='stopwatch' variant={isCookingMode ? 'filled' : 'light'} />\n    </Button>\n  );\n};\n\nexport default CookingModeButton;\n","import { useCallback, useMemo, useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/recipe_header.css';\n\nimport { Recipe } from '../store/RecipeTypes';\nimport { getRoutePath, optionallyFormatMessage } from '../../common/utility';\nimport Icon from '../../common/components/Icon';\nimport Chip from '../../common/components/Chip';\nimport Ratings from '../../rating/components/Ratings';\nimport P from '../../common/components/P';\nimport Modal from '../../common/components/Modal';\nimport WidthHeightRatio from '../../common/components/WidthHeightRatio';\nimport Image from '../../common/components/Image';\nimport ImageViewer from '../../common/components/ImageViewer';\nimport Button from '../../common/components/Button';\nimport NavButton from '../../common/components/NavButton';\nimport { Toolbar } from '../../common/components/Toolbar';\nimport CookingModeButton from './CookingModeButton';\nimport Tooltip from '../../common/components/Tooltip';\n\nconst editorMessages = defineMessages({\n  edited_by: {\n    id: 'recipe.edited_by',\n    description: 'The recipe was edited by ...',\n    defaultMessage: 'Edited by',\n  },\n});\n\ninterface IRecipeEditorProps {\n  recipe: Recipe;\n}\n\nexport const RecipeEditor: React.FC<IRecipeEditorProps> = ({ recipe }: IRecipeEditorProps) => {\n  const { formatMessage, locale } = useIntl();\n\n  if (recipe.update_date && new Date(recipe.update_date).getTime() > 0 && recipe.update_username) {\n    const editorS = `${formatMessage(editorMessages.edited_by)}: ${recipe.update_username}`;\n    const editDateS = new Date(recipe.update_date).toLocaleString(locale);\n    const tooltipJsx = (\n      <div className='d-flex-column'>\n        <div>{editorS}</div>\n        <div>{editDateS}</div>\n      </div>\n    );\n    return (\n      <Tooltip id={`${recipe.id}-editor-tooltip`} tooltip={tooltipJsx}>\n        <Icon icon='pencil' size='1x' style={{ marginLeft: '5px', marginRight: 0 }} ariaLabel={`${formatMessage(editorMessages.edited_by)}: ${recipe.update_username}. ${editDateS}`} />\n      </Tooltip>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport const RecipeTimestamp: React.FC<IRecipeEditorProps> = ({ recipe }: IRecipeEditorProps) => {\n  const { locale } = useIntl();\n  if (recipe.update_date && new Date(recipe.update_date).getTime() > 0 && recipe.update_username === recipe.pub_username) {\n    return (\n      <>\n        <Icon icon='calendar' />\n        {new Date(recipe.update_date).toLocaleDateString(locale)}\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Icon icon='calendar' />\n        {new Date(recipe.pub_date).toLocaleDateString(locale)}\n      </>\n    );\n  }\n};\n\nconst messages = defineMessages({\n  edit_tooltip: {\n    id: 'recipe.edit_tooltip',\n    description: 'Tooltip displayed when hovering the edit recipe icon button',\n    defaultMessage: 'Edit this recipe',\n  },\n  delete_tooltip: {\n    id: 'recipe.delete_tooltip',\n    description: 'Tooltip displayed when hovering the delete recipe icon button',\n    defaultMessage: 'Delete this recipe',\n  },\n  print_tooltip: {\n    id: 'recipe.print_tooltip',\n    description: 'Tooltip displayed when hovering the print icon button',\n    defaultMessage: 'Print this recipe',\n  },\n  recipe_comments: {\n    id: 'recipe.comments',\n    description: 'Button to comments',\n    defaultMessage: 'Comments',\n  },\n  prep_time: {\n    id: 'recipe.prep_time',\n    description: 'Preparation time',\n    defaultMessage: 'Prep time',\n  },\n  cooking_time: {\n    id: 'recipe.cooking_time',\n    description: 'Cooking time',\n    defaultMessage: 'Cooking time',\n  },\n  minutes: {\n    id: 'recipe.minutes',\n    description: 'minutes',\n    defaultMessage: '{count, plural, one {# minute} other {# minutes}}',\n  },\n  source: {\n    id: 'recipe.source',\n    description: 'Source of the recipe',\n    defaultMessage: 'Source',\n  },\n  created_by: {\n    id: 'recipe.created_by',\n    description: 'Created by',\n    defaultMessage: 'Created by',\n  },\n  last_updated: {\n    id: 'recipe.last_updated',\n    description: 'Last Updated',\n    defaultMessage: 'Last Updated',\n  },\n  confirm_delete_title: {\n    id: 'recipe.confirm_delete_title',\n    description: 'Confirm deletion - dialog title',\n    defaultMessage: 'Confirm deletion',\n  },\n  confirm_delete_message: {\n    id: 'recipe.confirm_delete',\n    description: 'Are you sure you want to delete this recipe?',\n    defaultMessage: 'Are you sure you want to delete this recipe?',\n  },\n  confirm_delete_accept: {\n    id: 'recipe.confirm_delete_accept',\n    description: 'Confirm deletion - Accept button title',\n    defaultMessage: 'Delete',\n  },\n});\n\nexport interface IRecipeHeaderProps {\n  recipe:   Recipe | undefined;\n  editable: boolean;\n\n  onEditRecipe: () => void;\n  deleteRecipe: () => void;\n  // onAddToMenuClick: () => void;\n}\n\nconst RecipeHeader: React.FC<IRecipeHeaderProps> = ({\n    recipe, editable, onEditRecipe, deleteRecipe }: IRecipeHeaderProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const handleEditClick    = useCallback(() => { onEditRecipe(); }, [onEditRecipe]);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState<boolean>(false);\n  const handleDeleteClick  = useCallback(() => { setShowDeleteConfirm(true); }, []);\n  const handleDeleteAccept = useCallback(() => { deleteRecipe(); }, [deleteRecipe]);\n  const handleDeleteClose  = useCallback(() => { setShowDeleteConfirm(false); }, []);\n\n  const editLink = editable ? (\n    <NavButton\n        id='edit-recipe-button'\n        variant = 'outline-primary'\n        tooltip={formatMessage(messages.edit_tooltip)}\n        to={getRoutePath(`/recipe/edit/${recipe?.slug}`)}\n        onClick={handleEditClick}\n        size='sm'>\n      <Icon icon='pencil' />\n    </NavButton>\n  ) : null;\n\n  const deleteLink = editable ? (\n    <Button id='trash-recipe-button' variant='outline-danger' size='sm' onClick={handleDeleteClick} tooltip={formatMessage(messages.delete_tooltip)}>\n      <Icon icon='trash' />\n    </Button>\n  ) : null;\n\n  const source = useMemo(() => {\n    if (recipe?.source) {\n      let hostname = '';\n      if (recipe?.source && recipe.source.match(/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/g)) {\n        // Get Host name of a URL\n        const a = document.createElement('a');\n        a.href = recipe.source;\n        hostname = a.hostname;\n      }\n\n      return (\n        <div>\n          {`${formatMessage(messages.source)}: `}\n          {hostname.length > 0 && (\n            <>\n              <a href={recipe.source} target='_blank' rel='noreferrer' className='print-hidden'>{hostname}</a>\n              <a href={recipe.source} target='_blank' rel='noreferrer' className='print-only'>{recipe.source}</a>\n            </>\n          )}\n          {hostname.length === 0 && recipe.source}\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }, [recipe?.source]);\n\n  const printButton = (\n    <Button id='print-recipe-button' variant='outline-primary' onClick={window.print} tooltip={formatMessage(messages.print_tooltip)}>\n      <Icon icon='printer' />\n    </Button>\n  );\n\n  const optionButtons = (\n    <div className='options print-hidden'>\n      <Toolbar position='end'>\n        {editable && (\n          <>\n            {editLink}\n            {deleteLink}\n          </>\n        )}\n        {/*\n          <Button variant='outline-primary' tooltip='Add receipt to menu' onClick={onAddToMenuClick}>\n            <Icon icon='calendar' />\n          </Button>\n        */}\n        <CookingModeButton />\n        {printButton}\n      </Toolbar>\n    </div>\n  );\n\n  const chips = recipe != null ? (\n    <>\n      <div className='recipe-header-chips'>\n        {recipe.prepTime != null && recipe.prepTime > 0 && (\n          <Chip color='secondary'>\n            <Icon icon='clock' />\n            {`${formatMessage(messages.prep_time)}: `}\n            {` ${formatMessage(messages.minutes, { count: recipe.prepTime })}`}\n          </Chip>\n        )}\n        {recipe.cookTime != null && recipe.cookTime > 0 && (\n          <Chip color='secondary'>\n            <Icon icon='clock' />\n            {`${formatMessage(messages.cooking_time)}: `}\n            {` ${formatMessage(messages.minutes, { count: recipe.cookTime })}`}\n          </Chip>\n        )}\n        {recipe.course != null && recipe.course.title != null && recipe.course.title.length > 0 && (\n          <Chip color='secondary'>\n            <Icon icon='bar-chart' />\n            {optionallyFormatMessage(intl, 'course.', recipe.course.title)}\n          </Chip>\n        )}\n        {recipe.cuisine != null && recipe.cuisine.title != null && recipe.cuisine.title.length > 0 && (\n          <Chip color='secondary'>\n            <Icon icon='globe' variant='light' />\n            {optionallyFormatMessage(intl, 'cuisine.', recipe.cuisine.title)}\n          </Chip>\n        )}\n      </div>\n      <div className='recipe-header-chips'>\n        <Chip color='secondary'>\n          <RecipeTimestamp recipe={recipe} />\n          <RecipeEditor recipe={recipe} />\n        </Chip>\n        <Chip color='secondary'>\n          <Icon icon='person' />\n          {recipe?.pub_username ?? ''}\n        </Chip>\n      </div>\n      {recipe.tags != null && recipe.tags.length > 0 && (\n        <div className='recipe-header-chips'>\n          {recipe.tags.map(t => (\n            <Chip key={String(t.title)} color='secondary'>\n              {optionallyFormatMessage(intl, 'tag.', t.title)}\n            </Chip>\n          ))}\n        </div>\n      )}\n    </>\n  ) : null;\n\n  return (\n    <>\n      <article className='recipe-header'>\n        <h1 className='d-block d-xl-none'>{recipe?.title}</h1>\n\n        <Row className='flex-row-reverse justify-content-center'>\n          {recipe != null && recipe.photo && (\n            <>\n              <Col xl={6} lg={12} className='img-wrapper print-hidden'>\n                <WidthHeightRatio height={66.67} width={100}>\n                  <ImageViewer>\n                    <Image\n                        src = {recipe.photo}\n                        alt = ''\n                        className='img-responsive print-hidden' />\n                  </ImageViewer>\n                </WidthHeightRatio>\n                {optionButtons}\n              </Col>\n              <Col sm={7} xs={12} className='col-sm-push-5 print-only'>\n                <WidthHeightRatio height={66.67} width={100} className='print-only print-image'>\n                  <ImageViewer>\n                    <Image\n                        src = {recipe.photoThumbnail ?? recipe.photo}\n                        alt = '' />\n                  </ImageViewer>\n                </WidthHeightRatio>\n              </Col>\n            </>\n          )}\n          {recipe != null && !recipe.photo && (\n            optionButtons\n          )}\n\n          <Col xl={6} lg={12} className='info-wrapper'>\n            <h1 className='d-none d-xl-block'>{recipe?.title}</h1>\n            <P>{recipe?.info}</P>\n            <Ratings stars={recipe?.rating ?? 0} showCount={false} />\n            {chips}\n            {source}\n          </Col>\n        </Row>\n      </article>\n\n      <Modal\n          show        = {showDeleteConfirm}\n          title       = {formatMessage(messages.confirm_delete_title)}\n          acceptTitle = {formatMessage(messages.confirm_delete_accept)}\n          acceptButtonProps = {{ variant: 'danger' }}\n          onAccept    = {handleDeleteAccept}\n          onClose     = {handleDeleteClose}\n          className   = 'delete'>\n        {formatMessage(messages.confirm_delete_message)}\n      </Modal>\n    </>\n  );\n};\n\nexport default RecipeHeader;\n","import { defineMessages, useIntl } from 'react-intl';\nimport classNames from 'classnames';\n\nimport '../css/directions.css';\n\nimport { IngredientGroup } from '../store/RecipeTypes';\nimport P from '../../common/components/P';\nimport { PendingState, ReducerMeta } from '../../common/store/GenericReducerType';\nimport Loading from '../../common/components/Loading';\nimport HeaderLink from '../../common/components/HeaderLink';\nimport Directions from './Directions';\n\nconst messages = defineMessages({\n  directions: {\n    id: 'recipe.directions',\n    description: 'Directions',\n    defaultMessage: 'Directions',\n  },\n  no_directions: {\n    id: 'recipe.directions.no_directions',\n    description: 'No directions provided message',\n    defaultMessage: '(This recipe has no directions.)',\n  },\n});\n\nexport interface IDirectionsPanelProps {\n  directions: string;\n  recipeMeta: ReducerMeta;\n  ingredients: Array<IngredientGroup>;\n}\n\nconst DirectionsPanel: React.FC<IDirectionsPanelProps> = ({\n    directions: directionsString, recipeMeta, ingredients }: IDirectionsPanelProps) => {\n  const { formatMessage } = useIntl();\n\n  const pending = recipeMeta.pending;\n  const hasNoData = pending === PendingState.COMPLETED\n      && directionsString.trim().length <= 1; // Ignore single fake char.\n\n  const isMultiDirections = directionsString.includes(':\\n');\n\n  return (\n    <article className={classNames('directions-panel', { 'multi-directions': isMultiDirections })}>\n      <h2 id='directions-heading'>\n        {formatMessage(messages.directions)}\n        <HeaderLink linkFor='directions-heading' />\n      </h2>\n      {pending === PendingState.LOADING && directionsString === '' && <Loading />}\n      {hasNoData && (\n        <P className='placeholder'>{formatMessage(messages.no_directions)}</P>\n      )}\n      {!hasNoData && (\n        <div className='direction-groups'>\n          <Directions directions={directionsString} ingredients={ingredients} />\n        </div>\n      )}\n    </article>\n  );\n};\n\nexport default DirectionsPanel;\n","import { Col, Row } from 'react-bootstrap';\n\nimport '../css/recipe.css';\n\nimport { Recipe } from '../store/RecipeTypes';\nimport { ReducerMeta } from '../../common/store/GenericReducerType';\nimport IngredientsPanelContainer from '../containers/IngredientsPanelContainer';\nimport RecipeHeader from './RecipeHeader';\nimport DirectionsPanel from './DirectionsPanel';\n\ninterface IRecipeSchemeProps {\n  recipe:       Recipe | undefined;\n  recipeMeta:   ReducerMeta;\n  userId:       number | undefined;\n  editable:     boolean;\n\n  onEditRecipe: () => void;\n  deleteRecipe: () => void;\n\n  // lists: Array<any>;\n  // onAddToMenuClick: () => void;\n}\n\nconst RecipeScheme: React.FC<IRecipeSchemeProps> = ({ recipe, recipeMeta, userId, editable, onEditRecipe, deleteRecipe }: IRecipeSchemeProps) => (\n  <div className='recipe-details'>\n    <RecipeHeader\n        recipe = {recipe}\n        editable = {editable}\n        onEditRecipe = {onEditRecipe}\n        // onAddToMenuClick={props.onAddToMenuClick}\n        deleteRecipe = {deleteRecipe} />\n\n    <hr />\n\n    <Row>\n      <Col xl={4} lg={12}>\n        <IngredientsPanelContainer\n            recipe     = {recipe}\n            recipeMeta = {recipeMeta}\n            userId     = {userId}\n            />\n      </Col>\n      <hr className='d-block d-xl-none' />\n      <Col xl={8} lg={12}>\n        <DirectionsPanel\n            directions  = {recipe?.directions ?? ''}\n            recipeMeta  = {recipeMeta}\n            ingredients = {recipe?.ingredientGroups ?? []} />\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default RecipeScheme;\n","import { useCallback, useMemo, useState } from 'react';\n\nimport CookingModeContext, { ICookingModeContext } from './CookingModeContext';\n\n/** {@link CookingModeContextProvider} Props. */\ninterface ICookingModeContextProviderProps {\n  /** App container that should have access to the providers. */\n  children?: React.ReactNode | React.ReactElement;\n}\n\n/**\n * {@link CookingModeContext} Provider.\n *\n * @param props - {@link ICookingModeContextProviderProps}.\n */\nconst CookingModeContextProvider: React.FC<ICookingModeContextProviderProps> = ({\n    children }: ICookingModeContextProviderProps) => {\n  const [isCookingMode, setIsCookingMode] = useState<boolean>(false);\n\n  const updateCookingMode = useCallback((active: boolean) => { setIsCookingMode(active); }, []);\n\n  const value: ICookingModeContext = useMemo(() => ({\n    cookingMode:    isCookingMode,\n    setCookingMode: updateCookingMode,\n  }), [isCookingMode]);\n\n  return (\n    <CookingModeContext.Provider value={value}>\n      {children}\n    </CookingModeContext.Provider>\n   );\n};\n\nexport default CookingModeContextProvider;\n","import { useCallback, useContext, useEffect, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/recipe_header.css';\n\nimport { useWakeLock } from '../../common/hooks/useWakeLock';\nimport usePageVisibility from '../../common/hooks/pageVisibility/usePageVisibility';\n\nimport Toast from '../../common/components/Toast';\nimport Modal from '../../common/components/Modal';\nimport CookingModeContext from '../context/CookingModeContext';\n\nconst messages = defineMessages({\n  activated_cooking_mode_toast: {\n    id: 'recipe.activated_cooking_mode_toast',\n    description: 'Toast displayed when activating the cooking mode button',\n    defaultMessage: 'Your display will stay awake now.\\nHappy cooking!',\n  },\n  still_cooking_modal_title: {\n    id: 'recipe.still_cooking_modal_title',\n    description: 'Title of the modal to ask to continue keeping the display awake.',\n    defaultMessage: 'Still cooking?',\n  },\n  still_cooking_modal_text: {\n    id: 'recipe.still_cooking_modal_text',\n    description: 'Body text of the modal to ask to continue keeping the display awake.',\n    defaultMessage: 'Do you want to continue keeping the display awake?',\n  },\n  still_cooking_modal_yes: {\n    id: 'recipe.still_cooking_modal_yes',\n    description: 'Yes button.',\n    defaultMessage: 'Yes',\n  },\n  still_cooking_modal_no: {\n    id: 'recipe.still_cooking_modal_no',\n    description: 'no button.',\n    defaultMessage: 'No',\n  },\n});\n\nconst CookingModeHandler: React.FC = () => {\n  const { formatMessage } = useIntl();\n\n  const cookingModeContext = useContext(CookingModeContext);\n  const isCookingMode = cookingModeContext?.cookingMode ?? false;\n\n  let timer: NodeJS.Timeout | undefined;\n\n  const [showCookingModeToast, setShowCookingModeToast] = useState<boolean>(false);\n  const [askIfStillActive, setAskIfStillActive] = useState<boolean>(false);\n\n  const { isSupported, request, release, released } = useWakeLock();\n\n  const isPageVisible = usePageVisibility();\n  useEffect(() => {\n    if (!isSupported || !isCookingMode) return;\n\n    if (!isPageVisible) {\n      if (released === false) {\n        release();\n      }\n    } else {\n      request();\n    }\n  }, [isPageVisible]);\n\n  useEffect(() => {\n    if (!isCookingMode) {\n      clearTimer();\n      if (released === false) {\n        release();\n      }\n    } else if (isSupported) {\n      request()\n        .then(() => {\n          renewTimer();\n          setTimeout(() => {\n            setShowCookingModeToast(true);\n          }, 1);\n        });\n    }\n  }, [isCookingMode]);\n\n  // componentWillUnmount\n  useEffect(() => () => {\n    clearTimer(false);\n    if (released === false) {\n      release();\n    }\n  }, []);\n\n  const pauseLock = () => {\n    release();\n    setAskIfStillActive(true);\n  };\n\n  const renewTimer = () => {\n    clearTimer();\n    timer = setTimeout(() => {\n      pauseLock();\n    }, 1000 * 60 * 30);\n  };\n\n  const clearTimer = (resetState = true) => {\n    if (resetState) {\n      setShowCookingModeToast(false);\n      setAskIfStillActive(false);\n    }\n    if (timer != null) {\n      clearTimeout(timer);\n      timer = undefined;\n    }\n  };\n\n  const handleStillActive = useCallback(() => {\n    request()\n      .then(() => {\n        renewTimer();\n      });\n  }, [request, renewTimer]);\n\n  const handleNotActiveAnymore = useCallback((autoClose: boolean) => {\n    if (!autoClose) {\n      cookingModeContext?.setCookingMode(false);\n    }\n  }, [cookingModeContext?.setCookingMode]);\n\n  return (\n    <>\n      <Toast\n          show = {isCookingMode && showCookingModeToast}\n          autoHide = {10000}\n          anchorOrigin = {{ horizontal: 'center', vertical: 'bottom' }}\n          onClose = {() => setShowCookingModeToast(false)}>\n        {formatMessage(messages.activated_cooking_mode_toast)}\n      </Toast>\n\n      <Modal\n          show = {askIfStillActive}\n          title = {formatMessage(messages.still_cooking_modal_title)}\n          acceptTitle = {formatMessage(messages.still_cooking_modal_yes)}\n          closeTitle = {formatMessage(messages.still_cooking_modal_no)}\n          onAccept = {handleStillActive}\n          onClose = {handleNotActiveAnymore}>\n        {formatMessage(messages.still_cooking_modal_text)}\n      </Modal>\n    </>\n  );\n};\n\nexport default CookingModeHandler;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router';\n\nimport '../css/recipe.css';\n\nimport Loading from '../../common/components/Loading';\nimport RecipeScheme from '../components/RecipeScheme';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport * as RecipeActions from '../store/RecipeActions';\nimport * as RecipeFormActions from '../../recipe_form/store/actions';\n// import MenuItemModal from '../../menu/components/modals/MenuItemModal';\n// import * as MenuItemActions from '../../menu/actions/MenuItemActions';\n// import { fetchRecipeList } from '../../menu/actions/RecipeListActions';\n// import { menuItemValidation } from '../../menu/actions/validation';\nimport { RootState } from '../../app/Store';\nimport { Recipe } from '../store/RecipeTypes';\nimport { getRoutePath } from '../../common/utility';\nimport useCrash from '../../common/hooks/useCrash';\nimport CookingModeContextProvider from '../context/CookingModeContextProvider';\nimport CookingModeHandler from '../components/CookingModeHandler';\nimport UserRole from '../../common/types/UserRole';\n\nconst RecipeContainer: React.FC = () => {\n  const dispatch = useDispatch();\n  const nav = useNavigate();\n  const crash = useCrash();\n\n  const userId = useSelector((state: RootState) => state.account.item?.id);\n  const userRole = useSelector((state: RootState) => state.account.item?.role);\n  const recipeState = useSelector((state: RootState) => state.recipe);\n  const recipe      = recipeState.item;\n  const recipeMeta  = recipeState.meta;\n  const prevRecipe  = useRef<Recipe | undefined>();\n\n  // const [showItemModal, setShowItemModal] = useState<boolean>(false);\n  const [isDeleting, setIsDeleting] = useState<boolean>(false);\n\n  const handlePreloadRecipe = useCallback(() => {\n    if (recipe == null) { crash('Invalid state: recipe may not be null'); return; }\n    dispatch(RecipeFormActions.preload(recipe));\n  }, [recipe]);\n\n  // const menuItemSave = useCallback(() => { /* dispatch(MenuItemActions.save() */ }, []);\n  const deleteRecipe = useCallback(() => {\n    if (recipe == null) { crash('Invalid state: recipe may not be null'); return; }\n    setIsDeleting(true);\n    dispatch(RecipeActions.deleteRecipe(recipe.id, recipe.slug));\n  }, [recipe]);\n\n  // Handle deletion\n  useEffect(() => {\n    if (prevRecipe.current == null) {\n      prevRecipe.current = recipe;\n    } else if (isDeleting && prevRecipe.current != null && recipe == null) {\n      nav(getRoutePath('/browser'));\n    }\n  }, [recipe]);\n\n  if (recipe != null) {\n    return (\n      <CookingModeContextProvider>\n        {/* TODO Menu\n        <MenuItemModal\n            id={0}\n            show={showItemModal}\n            onHide={() => setShowItemModal(false)}\n            recipe={recipe.id}\n            title={recipe.title}\n            onSave={menuItemSave}\n            fetchRecipeList={fetchRecipeList}\n            validation={menuItemValidation} /> */}\n        <RecipeScheme\n            recipe       = {recipe}\n            recipeMeta   = {recipeMeta}\n            userId       = {userId}\n            editable     = {recipe.author === userId || userRole === UserRole.STAFF || userRole === UserRole.ADMIN}\n\n            onEditRecipe = {handlePreloadRecipe}\n            deleteRecipe = {deleteRecipe} />\n        <CookingModeHandler />\n      </CookingModeContextProvider>\n    );\n  } else {\n    return (<Loading message='Loading' />);\n  }\n};\n\nexport default RecipeContainer;\n","import { useEffect, useMemo } from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport * as _ from 'lodash-es';\n\nimport { RootState } from '../../app/Store';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport Ratings from '../../rating/containers/Ratings';\nimport PageWrapper from '../../common/components/PageWrapper';\nimport RecipeFooter from '../components/RecipeFooter';\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport { getResourcePath } from '../../common/utility';\nimport * as RecipeActions from '../store/RecipeActions';\nimport RecipeContainer from './RecipeContainer';\n\nconst RecipePage: React.FC = () => {\n  const params = useParams();\n  const nav = useNavigate();\n  const dispatch = useDispatch();\n\n  const recipeState  = useSelector((state: RootState) => state.recipe);\n  const recipeMeta  = recipeState.meta;\n\n  const paramsRecipe = params.recipe;\n  // Load Recipe\n  useEffect(() => {\n    if (paramsRecipe) {\n      dispatch(RecipeActions.load(paramsRecipe));\n    }\n  }, [paramsRecipe]);\n\n  // If recipe not found, redirect to NotFound-Page\n  useEffect(() => {\n    if (_.get(recipeMeta.error, 'status') === 404) {\n      nav(getResourcePath('/NotFound'));\n    }\n  }, [recipeMeta.error]);\n\n  // componentWillUnmount\n  useEffect(() => () => {\n    dispatch(RecipeActions.reset());\n  }, []);\n\n  const ratings = useMemo(() => <Ratings />, [recipeState.item?.id, recipeState.meta.pending]);\n  const footer  = useMemo(() => <RecipeFooter recipe={recipeState.item} />, [recipeState.item?.id, recipeState.item?.author]);\n\n  return (\n    <PageWrapper title={recipeState.item?.title}>\n      <RecipeContainer />\n      {recipeState.meta.pending === PendingState.COMPLETED && ratings}\n      {recipeState.meta.pending === PendingState.COMPLETED && footer}\n    </PageWrapper>\n  );\n};\n\nexport default RecipePage;\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","import * as React from 'react';\nimport { ENTERING, EXITING } from 'react-transition-group/Transition';\nimport Fade from './Fade';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'showing',\n  [EXITING]: 'showing show'\n};\nconst ToastFade = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(Fade, {\n  ...props,\n  ref: ref,\n  transitionClasses: fadeStyles\n}));\nToastFade.displayName = 'ToastFade';\nexport default ToastFade;","\"use client\";\n\nimport * as React from 'react';\nconst ToastContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onClose() {}\n});\nexport default ToastContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CloseButton from './CloseButton';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst ToastHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = true,\n  className,\n  children,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast-header');\n  const context = useContext(ToastContext);\n  const handleClick = useEventCallback(e => {\n    context == null ? void 0 : context.onClose == null ? void 0 : context.onClose(e);\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    className: classNames(bsPrefix, className),\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick,\n      \"data-dismiss\": \"toast\"\n    })]\n  });\n});\nToastHeader.displayName = 'ToastHeader';\nexport default ToastHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ToastBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nToastBody.displayName = 'ToastBody';\nexport default ToastBody;","\"use client\";\n\nimport * as React from 'react';\nimport { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport ToastFade from './ToastFade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Toast = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  transition: Transition = ToastFade,\n  show = true,\n  animation = true,\n  delay = 5000,\n  autohide = false,\n  onClose,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  bg,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast');\n\n  // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n  const delayRef = useRef(delay);\n  const onCloseRef = useRef(onClose);\n  useEffect(() => {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  const autohideTimeout = useTimeout();\n  const autohideToast = !!(autohide && show);\n  const autohideFunc = useCallback(() => {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(() => {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  const toastContext = useMemo(() => ({\n    onClose\n  }), [onClose]);\n  const hasAnimation = !!(Transition && animation);\n  const toast = /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(bsPrefix, className, bg && `bg-${bg}`, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  });\n  return /*#__PURE__*/_jsx(ToastContext.Provider, {\n    value: toastContext,\n    children: hasAnimation && Transition ? /*#__PURE__*/_jsx(Transition, {\n      in: show,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: onExited,\n      unmountOnExit: true,\n      children: toast\n    }) : toast\n  });\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});"],"names":["RENDER_TAGS","tag","icon","variant","_ref","recipe","intl","useIntl","renderTagsJsx","useMemo","oTags","res","recipeTags","vegetarian","vegan","forEach","t","push","_jsxs","Chip","children","_jsx","Icon","optionallyFormatMessage","concat","id","locale","length","className","getRecipeImage","_recipe$photoThumbnai","photoThumbnail","getRecipeImagePlaceholder","images","recipeImageHash","Math","abs","str","hash","i","charCodeAt","hashCode","title","getResourcePath","data","lg","onOpenRecipe","IMAGE_PLACEHOLDER","PLACEHOLDER_STYLE","background","recipes","map","link","getRoutePath","slug","Col","Card","classNames","Link","to","onClick","Img","src","alt","style","Ratings","stars","rating","count","ratingCount","collapsed","Title","as","Tooltip","tooltip","placement","ListTags","Text","info","Row","xs","sm","loadMiniBrowse","filter","dispatch","toBasicAction","MINI_BROWSE_STORE","ACTION","GET_START","request","get","serverURLs","mini_browse","then","_res$body$results","GET_SUCCESS","payload","body","results","toRecipeList","catch","err","handleError","messages","defineMessages","shuffleSuggestionsButton","description","defaultMessage","buildUrlFilter","filters","searchParams","URLSearchParams","append","toString","_params$recipe","heading","formatMessage","useDispatch","location","useLocation","params","useParams","miniBrowseItems","useSelector","state","browse","browserMini","items","differentMiniBrowseItems","itm","recipeSlug","useEffect","MiniBrowseActions","handleShuffleClick","useCallback","handleOpenRecipe","rec","RecipeActions","_Fragment","Button","ListRecipes","forwardRef","ref","tooltipPlacement","rest","ConditionalWrapper","condition","Boolean","render","childr","BootstrapButton","undefined","message","CircularProgress","load","listId","GROCERY_LIST_STORE","list","groceryList","toGroceryList","create","async","item","CREATE_START","post","send","CREATE_SUCCESS","handleFormError","update","UPDATE_START","patch","UPDATE_SUCCESS","remove","DELETE_START","delete","DELETE_SUCCESS","format","formatter","quantity","measurement","join","bulkAdd","checkedIngredients","ingredientGroups","flatMap","ig","ingredients","checkedSubRecipe","subrecipes","sr","allItems","bulk_list_item","GroceryListActionTypes","BULK_ADD","toGroceryListItem","reset","RESET","star_alt","stars_alt","rating_count","Star","num","onChange","handleClick","isHalfFilled","size","ariaLabel","CollapsedStar","_ref2","_ref3","showCount","starss","starsList","Array","from","_","starsText","active","edited_by","edit_button","delete_button","confirm_delete_message","RatingEditor","update_date","Date","getTime","update_username","editorS","editDateS","toLocaleString","tooltipJsx","marginLeft","RatingTimestamp","pub_username","pub_date","RatingCommentComment","markup","comment","split","p","index","P","RatingToolbar","_ref4","onEdit","onDelete","showDeleteConfirm","setShowDeleteConfirm","useState","handleDeleteClick","handleDeleteClose","handleDeleteAccept","Toolbar","position","Modal","show","acceptTitle","onAccept","onClose","acceptButtonProps","_ref5","edit_rating_title","new_rating_title","rating_label","rating_comment_label","rating_comment_placeholder","submit","addRating","editRating","onSubmitSuccess","onCancel","initialValues","handleSubmit","form","ReduxForm","onSubmit","subscription","renderSubmit","Form","edit","ReFormStatus","InitialValuesResetter","alignItems","justifyContent","username","Field","name","validate","requiredValidator","validateFields","fprops","input","value","ReInput","rows","label","placeholder","maxLength","required","FormSpy","values","submitting","type","disabled","hashId","replace","editMode","setEditMode","handleEditModeReset","handleEditClick","ratingContainerId","PageScroller","uriFragmentId","RatingView","RatingForm","isDemoMode","no_comments","_ratings$map","ratings","userId","userRole","pending","removeRating","handleEdit","upd","ratingId","isUserAdmin","UserRole","STAFF","ADMIN","includes","ratingsList","RatingComment","author","PendingState","LOADING","new_rating_button","commentsCount","showNewRating","onShowNewRating","Header","HeaderLink","linkFor","USER","visibility","_ratings$length","setShowNewRating","handleNewRatingUndisplay","RatingsHeader","Body","RatingComments","account","ratingsState","recipeRating","RATING_STORE","toRating","RATINGS_STORE","RatingsActions","removeRatingCallback","ReduxHelper","transformEntities","ErrorBoundary","verbose","printStack","RatingsWrapper","role","meta","getFilters","course","course__slug","cuisine","cuisine__slug","Object","keys","miniBrowseMeta","disableRecipeDiscovery","settings","getEnvAsBoolean","hasConnection","error","MiniBrowse","ingredients_for_servings","servings","servings_input_tooltip","servings_update_button","_recipe$customServing","_recipe$customServing2","recipeMeta","updateServings","customServings","hasNoIngredients","COMPLETED","min","max","autoComplete","parse","onFocus","onBlur","Select","errors","formatValidation","dirtySinceLastSubmit","submitError","namee","event","initializeCheckboxes","cbs","cb","initializeInredientGroupsCheckboxes","igs","AddToGroceryListForm","lists","onAddList","submitRef","crash","useCrash","child_recipe_id","_form$ingredients","addSubrecipes","s","parseInt","substring","indexOf","addIngredientGroups","igSlug","addIgIngredients","Set","find","igg","igIngredients","add","arr","ListRow","ToggleAllCheckbox","SubRecipes","subRecipes","selectable","IngredientGroups","groups","hasSubrecipes","new_text","new_list_title","addedNewList","setAddedNewList","prevListIds","useRef","handleAddListClick","newListTitle","suffixes","l","startsWith","Number","isNaN","sort","a","b","suffix","current","newList","_prevListIds$current","change","ReSelect","readOnly","setValue","handleChange","_name","newValue","registeredFields","getRegisteredFields","f","cbKey","Checkbox","onSaveSuccess","measurementContext","useContext","MeasurementContext","formatMeasurementCb","formatMeasurement","GroceryListActions","createList","groceryListsState","groceryLists","GroceryListsActions","bulkAddPending","handleEditSubmit","_submitRef$current","click","_ingredients$flatMap","allIngredients","allSubrecipes","addIngredients","ii","bulkAddData","handleSubmitSuccess","handleModalClose","autoClose","SAVING","add_groceries","add_groceries_success_toast","isAuthenticated","showGroceriesModal","setShowGroceriesModal","handleAddGroceries","handleGroceriesModalClose","showGroceriesSuccessToast","setShowGroceriesSuccessToast","handleAddToGroceryListSuccess","handleCloseAddGroceryListToast","AddToGroceryListModal","Toast","anchorOrigin","horizontal","vertical","no_ingredients","IngredientsHeader","Loading","withHeaderLink","IngredientFooter","_recipe$slug","setSearchParams","useSearchParams","handleUpdateServings","String","locationServings","serv","servNumber","parseFloat","IngredientsPanel","ImageViewer","openModal","setOpenModal","handleOpenModal","handleCloseModal","fullscreen","onHide","ImageViewerContent","nextSrc","Children","element","isValidElement","props","nextTitle","lastIndexOf","download","href","ModalHeaderCloseButton","createContext","useWakeLock","onError","onRequest","onRelease","arguments","released","setReleased","wakeLock","isSupported","window","navigator","isWakeLockAlreadyDefined","console","warn","onrelease","e","release","isWakeLockUndefined","activate_cooking_mode_tooltip","deactivate_cooking_mode_tooltip","CookingModeButton","_cookingModeContext$c","cookingModeContext","CookingModeContext","isCookingMode","cookingMode","setCookingMode","editorMessages","RecipeEditor","marginRight","RecipeTimestamp","toLocaleDateString","edit_tooltip","delete_tooltip","print_tooltip","recipe_comments","prep_time","cooking_time","minutes","source","created_by","last_updated","confirm_delete_title","confirm_delete_accept","_recipe$pub_username","_recipe$rating","editable","onEditRecipe","deleteRecipe","editLink","NavButton","deleteLink","hostname","match","document","createElement","target","rel","printButton","print","optionButtons","chips","prepTime","color","cookTime","tags","photo","xl","WidthHeightRatio","height","width","Image","directions","no_directions","directionsString","hasNoData","trim","isMultiDirections","Directions","_recipe$directions","_recipe$ingredientGro","RecipeHeader","IngredientsPanelContainer","DirectionsPanel","setIsCookingMode","updateCookingMode","Provider","activated_cooking_mode_toast","still_cooking_modal_title","still_cooking_modal_text","still_cooking_modal_yes","still_cooking_modal_no","CookingModeHandler","timer","showCookingModeToast","setShowCookingModeToast","askIfStillActive","setAskIfStillActive","isPageVisible","usePageVisibility","renewTimer","setTimeout","clearTimer","clearTimeout","handleStillActive","handleNotActiveAnymore","autoHide","closeTitle","RecipeContainer","nav","useNavigate","_state$account$item","_state$account$item2","recipeState","prevRecipe","isDeleting","setIsDeleting","handlePreloadRecipe","RecipeFormActions","CookingModeContextProvider","RecipeScheme","RecipePage","_recipeState$item","_recipeState$item2","_recipeState$item3","_recipeState$item4","paramsRecipe","footer","RecipeFooter","PageWrapper","CardBody","React","bsPrefix","Component","useBootstrapPrefix","displayName","CardFooter","CardHeader","prefix","contextValue","cardHeaderBsPrefix","CardHeaderContext","CardImg","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","bg","text","border","assign","Subtitle","Footer","ImgOverlay","striped","bordered","borderless","hover","responsive","decoratedBsPrefix","classes","table","responsiveClass","fadeStyles","ENTERING","EXITING","ToastFade","Fade","transitionClasses","ToastHeader","closeLabel","closeVariant","closeButton","context","ToastContext","useEventCallback","CloseButton","ToastBody","transition","Transition","animation","delay","autohide","onEntered","onExit","onExiting","onEnter","onEntering","onExited","delayRef","onCloseRef","autohideTimeout","useTimeout","autohideToast","autohideFunc","set","toastContext","hasAnimation","toast","in","unmountOnExit"],"sourceRoot":""}