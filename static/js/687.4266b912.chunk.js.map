{"version":3,"file":"static/js/687.4266b912.chunk.js","mappings":"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","sources":["browse/components/ListRecipes.tsx","browse/store/MiniBrowseActions.ts","browse/containers/MiniBrowse.tsx","common/components/Loading.tsx","common/components/Modal.tsx","rating/components/Ratings.tsx","rating/components/RatingComments.tsx","rating/components/NewRating.tsx","rating/components/RatingsHeader.tsx","rating/components/RatingsWrapper.tsx","rating/store/actions.ts","rating/containers/Ratings.tsx","recipe/components/RecipeFooter.tsx","common/components/Chip.tsx","common/components/ImageViewer.tsx","recipe/context/CookingModeContext.ts","common/hooks/useWakeLock.ts","recipe/components/CookingModeButton.tsx","recipe/components/RecipeHeader.tsx","recipe/components/IngredientsHeader.tsx","recipe/components/IngredientsPanel.tsx","recipe/components/DirectionsPanel.tsx","recipe/components/RecipeScheme.tsx","recipe/context/CookingModeContextProvider.tsx","common/components/pageVisibility/utils.ts","common/components/pageVisibility/usePageVisibility.ts","recipe/components/CookingModeHandler.tsx","recipe/containers/RecipeContainer.tsx","recipe/containers/RecipePage.tsx","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Table.js","../node_modules/react-bootstrap/esm/ToastFade.js","../node_modules/react-bootstrap/esm/ToastContext.js","../node_modules/react-bootstrap/esm/ToastHeader.js","../node_modules/react-bootstrap/esm/ToastBody.js","../node_modules/react-bootstrap/esm/Toast.js"],"sourcesContent":["import { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport '../css/list-recipes.css';\n\nimport Ratings from '../../rating/components/Ratings';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport { getRecipeImagePlaceholder, getResourcePath, getRoutePath } from '../../common/utility';\nimport Tooltip from '../../common/components/Tooltip';\n\nexport interface IListRecipes {\n  data:   Array<RecipeList> | undefined;\n  onOpenRecipe: (rec: RecipeList) => void;\n}\n\nconst ListRecipes: React.FC<IListRecipes> = ({ data, onOpenRecipe }: IListRecipes) => {\n  const IMAGE_PLACEHOLDER = useMemo(() => getRecipeImagePlaceholder(), []);\n\n  const getRecipeImage = (recipe: RecipeList) => {\n    if (recipe.photoThumbnail) {\n      return recipe.photoThumbnail;\n    } else {\n      const images = ['fish', 'fried-eggs', 'pizza', 'soup', 'steak'];\n      return getResourcePath(`/images/${images[Math.floor(Math.random() * images.length)]}.jpg`);\n    }\n  };\n\n  const recipes = data?.map(recipe => {\n    const link = getRoutePath(`/recipe/${recipe.slug}`);\n    return (\n      <Col key={recipe.id}>\n        <Card className={classNames('recipe', 'print-hidden')}>\n          <Link to={link} onClick={() => onOpenRecipe(recipe)}>\n            <Card.Img variant='top' src={getRecipeImage(recipe)} alt='' placeholder={IMAGE_PLACEHOLDER} />\n            <Tooltip id={recipe.slug} tooltip={recipe.title} placement='bottom' className='card-title-tooltip'><Card.Title as='h3'>{recipe.title}</Card.Title></Tooltip>\n            <div><Ratings stars={recipe.rating} /></div>\n            <Card.Text>{recipe.info}</Card.Text>\n          </Link>\n        </Card>\n      </Col>\n    );\n  });\n\n  return (\n    <Row xs={1} sm={2} lg={4} className='g-4 recipes-list'>\n      {recipes}\n    </Row>\n  );\n};\n\nexport default ListRecipes;\n","import { handleError, request } from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { MiniBrowseDispatch, MINI_BROWSE_STORE } from './MiniBrowseTypes';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { RecipeListDto, toRecipeList } from '../../recipe/store/RecipeTypes';\nimport { toBasicAction } from '../../common/store/redux';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const loadMiniBrowse = (filter: string) => (dispatch: MiniBrowseDispatch) => {\n  dispatch({ ...toBasicAction(MINI_BROWSE_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.mini_browse}${filter ? `&${filter}` : ''}`)\n    .then(res => {\n        dispatch({\n          ...toBasicAction(\n            MINI_BROWSE_STORE,\n            ACTION.GET_SUCCESS\n          ),\n          payload: res.body.results?.map((dto: RecipeListDto) => toRecipeList(dto)),\n        });\n    })\n    .catch(err => dispatch(handleError(err, MINI_BROWSE_STORE)));\n};\n","import { useEffect, useMemo } from 'react';\nimport { useLocation, useParams } from 'react-router';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Button } from 'react-bootstrap';\n\nimport '../css/browse.css';\n\nimport { CombinedStore } from '../../app/Store';\nimport { Recipe, RecipeList } from '../../recipe/store/RecipeTypes';\nimport * as RecipeActions from '../../recipe/store/RecipeActions';\nimport ListRecipes from '../components/ListRecipes';\nimport * as MiniBrowseActions from '../store/MiniBrowseActions';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport Icon from '../../common/components/Icon';\nimport Tooltip from '../../common/components/Tooltip';\n\ninterface IMiniBrowseProps {\n  heading: string;\n  count: number;\n  filters?: Record<string, string>;\n}\n\nfunction buildUrlFilter(count: number, filters: Record<string, string> | undefined): string {\n  const searchParams = new URLSearchParams(filters);\n  searchParams.append('limit', String(count));\n  return searchParams.toString();\n}\n\nconst MiniBrowse: React.FC<IMiniBrowseProps> = ({ heading, count, filters }: IMiniBrowseProps) => {\n  const { formatMessage }  = useIntl();\n  const messages = defineMessages({\n    shuffleSuggestionsButton: {\n      id: 'browse.shuffle_suggestions_button_title',\n      description: 'Title/tooltip of the icon button to shuffle the suggestions.',\n      defaultMessage: 'Shuffle suggestions',\n    },\n  });\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const params = useParams();\n\n  const slug = params.recipe;\n\n  const miniBrowseItems = useSelector((state: CombinedStore) => state.browse.miniBrowse.items);\n  const differentMiniBrowseItems = useMemo(() => miniBrowseItems?.filter(itm => itm.slug !== slug), [slug, miniBrowseItems]);\n\n  useEffect(() => {\n    dispatch(MiniBrowseActions.loadMiniBrowse(buildUrlFilter(count, filters)));\n  }, [location]);\n\n  const handleShuffleClick = () => {\n    dispatch(MiniBrowseActions.loadMiniBrowse(buildUrlFilter(count, filters)));\n  };\n\n  const handleOpenRecipe = (rec: RecipeList) => {\n    const recipeSlug = params.recipe ?? '';\n    if (recipeSlug !== rec.slug) {\n      dispatch(RecipeActions.preload(rec as Recipe));\n    }\n  };\n\n  if (differentMiniBrowseItems != null && differentMiniBrowseItems.length === 0) return null;\n\n  return (\n    <>\n      <h2 id='suggestions-heading'>{heading}</h2>\n      <Tooltip id='shuffle tooltip' tooltip={formatMessage(messages.shuffleSuggestionsButton)}>\n        <Button id='shuffle-suggestions-button' variant='outline-primary' aria-label={formatMessage(messages.shuffleSuggestionsButton)} onClick={handleShuffleClick}>\n          <Icon icon='arrow-repeat' variant='light' />\n        </Button>\n      </Tooltip>\n      <ListRecipes data={differentMiniBrowseItems} onOpenRecipe={handleOpenRecipe} />\n    </>\n  );\n};\n\nexport default MiniBrowse;\n","import CircularProgress from './CircularProgress';\n\ninterface ILoadingProps {\n  message?: string;\n}\n\nconst Loading = ({ message }: ILoadingProps) => (\n  <div className='spinner'>\n    {message && <h3 className='no-results'>{ message }</h3>}\n    <CircularProgress />\n  </div>\n);\n\nexport default Loading;\n","import { defineMessages, useIntl } from 'react-intl';\nimport { Button, Modal as BootstrapModal } from 'react-bootstrap';\n\nimport '../css/modal.css';\n\nimport Icon from './Icon';\nimport classNames from 'classnames';\nimport ErrorBoundary from './ErrorBoundary';\n\nexport interface IModalHeaderCloseButtonProps {\n  onClose: (event: React.MouseEvent) => void;\n  className?: string;\n}\n\nexport const ModalHeaderCloseButton: React.FC<IModalHeaderCloseButtonProps> = ({\n  onClose, className, ...rest }: IModalHeaderCloseButtonProps) => (\n    <Button type='button' onClick={onClose} variant='transparent' className={classNames('close-button', className)} aria-label='Close' {...rest}>\n      <Icon icon='x' variant='light' size='2x' />\n    </Button>\n);\n\nexport interface IModalProps {\n  show: boolean;\n  title: string;\n\n  acceptTitle?: React.ReactNode;\n  closeTitle?: React.ReactNode;\n\n  onAccept?: () => void;\n  onClose?: (autoClose: boolean) => void;\n  noCloseButton?: boolean;\n\n  size?: 'sm' | 'lg' | 'xl';\n\n  className?: string;\n  acceptButtonProps?: Partial<unknown>;\n  children: React.ReactNode;\n}\n\nconst Modal: React.FC<IModalProps> = ({\n    show, title,\n    acceptTitle, closeTitle,\n    onAccept, onClose, noCloseButton,\n    size, className, acceptButtonProps, children }: IModalProps) => {\n  const { formatMessage } = useIntl();\n  const messages = defineMessages({\n    accept: {\n      id: 'modal.accept',\n      description: 'Default modal accept button',\n      defaultMessage: 'Accept',\n    },\n    close: {\n      id: 'modal.close',\n      description: 'Default modal close button',\n      defaultMessage: 'Close',\n    },\n  });\n\n  const handleClose = () => {\n    if (onClose) {\n      onClose(false);\n    }\n  };\n\n  const handleAccept = () => {\n    if (onClose) {\n      onClose(true);\n    }\n    if (onAccept) {\n      onAccept();\n    }\n  };\n\n  const hasButton = onAccept != null || (onClose != null && !noCloseButton);\n\n  return (\n    <BootstrapModal\n        show = {show}\n        backdrop = 'static'\n        size = {size ?? 'lg'}\n        centered\n        onHide = {handleClose}\n        keyboard = {false}\n        className = {className}>\n      <BootstrapModal.Header>\n        <BootstrapModal.Title>{title}</BootstrapModal.Title>\n        {onClose != null && (\n          <ModalHeaderCloseButton onClose={handleClose} />\n        )}\n      </BootstrapModal.Header>\n\n      <BootstrapModal.Body>\n        <ErrorBoundary verbose printStack>\n          {children}\n        </ErrorBoundary>\n      </BootstrapModal.Body>\n\n      {hasButton && (\n        <BootstrapModal.Footer>\n          {onClose != null && !noCloseButton && (\n            <Button variant='outline-primary' onClick={handleClose}>\n              {closeTitle ?? formatMessage(messages.close)}\n            </Button>\n          )}\n          {onAccept != null && (\n            <Button variant='primary' onClick={handleAccept} {...acceptButtonProps}>\n              {acceptTitle ?? formatMessage(messages.accept)}\n            </Button>\n          )}\n        </BootstrapModal.Footer>\n      )}\n    </BootstrapModal>\n  );\n};\n\nexport default Modal;\n","import { Button } from 'react-bootstrap';\n\nimport '../css/ratings.css';\n\nimport Icon from '../../common/components/Icon';\nimport ConditionalWrapper from '../../common/components/ConditionalWrapper';\n\nexport interface IRatingsProps {\n  stars: number;\n  onChange?: (stars: number) => void;\n}\n\ninterface IStarProps {\n  stars: number;\n  num:   number;\n  onChange?: (stars: number) => void;\n}\n\nconst Star: React.FC<IStarProps> = ({ stars, num, onChange }: IStarProps) => {\n  const handleClick = () => {\n    if (onChange) {\n      onChange(num);\n    }\n  };\n\n  const isHalfFilled = stars > (num - 1) && stars < num;\n  const icon = isHalfFilled ? 'star-half' : 'star';\n  const variant = num > stars || isHalfFilled ? 'light' : 'filled';\n\n  return (\n    <ConditionalWrapper\n        condition={onChange != null}\n        render    = {childr => <Button variant='transparent' className='rating' onClick={handleClick}>{childr}</Button>}\n        key={num}>\n      <Icon key={num} icon={icon} variant={variant} size={onChange != null ? '2x' : '1x'} />\n    </ConditionalWrapper>\n  );\n};\n\nconst Ratings: React.FC<IRatingsProps> = ({ stars, onChange }: IRatingsProps) => {\n  let starss = stars;\n  if (stars > 5) {\n    starss = 5;\n  } else if (stars < 0) {\n    starss = 0;\n  }\n\n  const starsList: Array<React.ReactNode> = Array.from({ length: 5 }, (_, i) => i + 1).map(num => (\n    <Star key={num} stars={starss} num={num} onChange={onChange} />\n  ));\n\n  return (\n    <div className='rating-stars'>\n      {starsList}\n    </div>\n  );\n};\n\nexport default Ratings;\n","import React, { useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Button, Col, Row } from 'react-bootstrap';\n\nimport { Rating } from '../store/types';\nimport Icon from '../../common/components/Icon';\nimport P from '../../common/components/P';\nimport Modal from '../../common/components/Modal';\nimport Ratings from './Ratings';\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport CircularProgress from '../../common/components/CircularProgress';\n\nexport interface IRatingCommentsProps {\n  recipeSlug: string;\n  ratings:    Array<Rating> | undefined;\n  userId:     number | undefined;\n  pending:    PendingState;\n\n  removeRating: (recipe: string, rating: number) => void;\n}\n\ninterface IRatingTimestampProps {\n  rating: Rating;\n}\n\nconst RatingTimestamp: React.FC<IRatingTimestampProps> = ({ rating }: IRatingTimestampProps) => {\n  const intl = useIntl();\n  if (rating.updateDate && new Date(rating.updateDate).getTime() > 0) {\n    return <div className='rating-timestamp'>{new Date(rating.updateDate).toLocaleString(intl.locale)}</div>;\n  } else if (rating.pubDate && new Date(rating.pubDate).getTime() > 0) {\n    return <div className='rating-timestamp'>{new Date(rating.pubDate).toLocaleString(intl.locale)}</div>;\n  } else {\n    return null;\n  }\n};\n\nconst RatingComments: React.FC<IRatingCommentsProps> = ({ recipeSlug, ratings, userId, pending, removeRating }: IRatingCommentsProps) => {\n  const intl = useIntl();\n\n  const messages = defineMessages({\n    no_comments: {\n      id: 'rating_comments.no_comments',\n      description: 'Placeholder for no comments',\n      defaultMessage: '(No comments yet. Be the first!)',\n    },\n    confirm_delete_message: {\n      id: 'rating_comments.confirm_delete',\n      description: 'Are you sure you want to delete this comment?',\n      defaultMessage: 'Are you sure you want to delete this comment?',\n    },\n  });\n\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState<number | undefined>();\n  const handleDeleteClick  = (rating: number) => { setShowDeleteConfirm(rating); };\n  const handleDeleteAccept = () => { removeRating(recipeSlug, showDeleteConfirm ?? 0); };\n  const handleDeleteClose  = () => { setShowDeleteConfirm(undefined); };\n\n  const ratingsList = ratings?.map((rating, index) => (\n    <React.Fragment key={rating.id}>\n      <Row>\n        {index > 0 && (\n          <Col xs={12}>\n            <hr />\n          </Col>\n        )}\n      </Row>\n      <Row>\n        <Col xs>\n          <Ratings stars={rating.rating || 0} />\n          <div className='rating-username'>{rating.userName}</div>\n        </Col>\n        <Col xs='auto'>\n          <RatingTimestamp rating={rating} />\n          {rating.userId === userId && (\n            <Button variant='outline-danger' className='rating-delete-button' size='sm' onClick={() => handleDeleteClick(rating.id)}>\n              <Icon icon='trash' />\n            </Button>\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={12}>\n          <span>\n            {rating.comment}\n          </span>\n        </Col>\n      </Row>\n    </React.Fragment>\n  )) ?? [];\n\n  const beTheFirst = (\n    <Row key='be-the-first'><Col><P className='placeholder'>{intl.formatMessage(messages.no_comments)}</P></Col></Row>\n  );\n\n  return (\n    <>\n      {pending === PendingState.LOADING && <CircularProgress variant='three-bounce' />}\n      {ratingsList.length === 0 && beTheFirst}\n      {ratingsList}\n\n      <Modal\n          show = {showDeleteConfirm != null}\n          title = {intl.messages['recipe.confirm_delete_title'] as string}\n          acceptTitle = {intl.messages['recipe.confirm_delete_accept'] as string}\n          onAccept = {handleDeleteAccept}\n          onClose  = {handleDeleteClose}\n          acceptButtonProps = {{ variant: 'danger' }}>\n        {intl.formatMessage(messages.confirm_delete_message)}\n      </Modal>\n    </>\n  );\n};\n\nexport default RatingComments;\n","import React, { useState } from 'react';\nimport { Button, Col, Form, Row } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Field, Form as ReduxForm, FormSpy } from 'react-final-form';\n\nimport { RatingCreate } from '../store/types';\nimport InitialValuesResetter from '../../common/components/ReduxForm/ReInitialValuesResetter';\nimport ReInput from '../../common/components/ReduxForm/ReInput';\nimport { requiredValidator } from '../../common/store/Validation';\nimport ReFormStatus from '../../common/components/ReduxForm/ReFormStatus';\nimport Ratings from './Ratings';\n\nexport interface INewRatingProps {\n  show: boolean;\n  recipeSlug: string;\n  userId: number;\n\n  addRating: (recipeSlug: string, rating: RatingCreate) => void;\n  onAddRatingSuccess: () => void;\n}\n\nexport interface IFormDataProps {\n  rating:  number;\n  comment: string;\n}\n\nconst NewRating: React.FC<INewRatingProps> = ({ show, recipeSlug, userId, addRating, onAddRatingSuccess }: INewRatingProps) => {\n  const { formatMessage } = useIntl();\n  const messages = defineMessages({\n    new_rating_title: {\n      id: 'newRating.create.title',\n      description: 'Fieldset legend for creating a new rating',\n      defaultMessage: 'Your new rating',\n    },\n    rating_placeholder: {\n      id: 'newRating.create.rating_placeholder',\n      description: 'Rating placeholder',\n      defaultMessage: 'Rate this recipe from 0 to 5',\n    },\n    rating_label: {\n      id: 'newRating.create.rating_label',\n      description: 'Rating label',\n      defaultMessage: 'Rating',\n    },\n    rating_comment_placeholder: {\n      id: 'newRating.create.rating_comment_placeholder',\n      description: 'Rating placeholder',\n      defaultMessage: 'Leave a comment!',\n    },\n    rating_comment_label: {\n      id: 'newRating.create.rating_comment_label',\n      description: 'Rating label',\n      defaultMessage: 'Comments',\n    },\n    submit: {\n      id: 'newRating.create.submit',\n      description: 'Submit recipe button',\n      defaultMessage: 'Comment',\n    },\n  });\n\n  const [initialValues] = useState<Partial<IFormDataProps>>({ rating: 0, comment: '' });\n\n  const handleSubmit = async (form: IFormDataProps) => {\n    const newRating: RatingCreate = {\n      rating:     form.rating,\n      comment:    form.comment,\n      userId:     userId,\n    };\n    return addRating(recipeSlug, newRating);\n  };\n\n  if (!show) return null;\n\n  return (\n    <>\n      <ReduxForm\n          initialValues = {initialValues}\n          onSubmit = {handleSubmit}\n          subscription = {{}}\n          render = {({ form, handleSubmit: renderSubmit }) => (\n            <Form onSubmit={renderSubmit} className='new-rating'>\n              <ReFormStatus onSubmitSuccess={onAddRatingSuccess} />\n\n              <InitialValuesResetter form={form} initialValues={initialValues} />\n              <fieldset>\n                <legend className='new-rating-heading'>{formatMessage(messages.new_rating_title)}</legend>\n                <Row>\n                  <Col className='form-group required'>\n                    <div className='form-label'>{formatMessage(messages.rating_label)}</div>\n                    <Field name='rating' validate={requiredValidator} validateFields={[]}>\n                      {fprops => (\n                        <Ratings\n                            stars = {fprops.input.value}\n                            onChange = {(value: number) => { fprops.input.onChange(value); }} />\n                      )}\n                    </Field>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <ReInput\n                        name   = 'comment'\n                        rows   = {4}\n                        label  = {formatMessage(messages.rating_comment_label)}\n                        placeholder = {formatMessage(messages.rating_comment_placeholder)}\n                        required />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs={12}>\n                    <FormSpy subscription={{ values: true, submitting: true }}>\n                      {({ values, submitting }) => (\n                        <Button type='submit' variant='primary' disabled={!values.rating || !values.comment || submitting}>\n                          {formatMessage(messages.submit)}\n                        </Button>\n                      )}\n                    </FormSpy>\n                  </Col>\n                </Row>\n              </fieldset>\n            </Form>\n          )} />\n      <hr />\n    </>\n  );\n};\n\nexport default NewRating;\n","import { Button, Card, Col, Row } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport UserRole from '../../common/types/UserRole';\n\nexport interface IRatingsHeaderProps {\n  userRole:  UserRole | undefined;\n  showNewRating: boolean;\n  onShowNewRating: () => void;\n}\n\nconst RatingsHeader: React.FC<IRatingsHeaderProps> = ({ userRole, showNewRating, onShowNewRating }: IRatingsHeaderProps) => {\n  const { formatMessage } = useIntl();\n  const messages = defineMessages({\n    title: {\n      id: 'recipe.comments.title',\n      description: 'Comments heading',\n      defaultMessage: 'Comments',\n    },\n    new_rating_button: {\n      id: 'recipe.comments.new_rating',\n      description: 'Label for the new rating button',\n      defaultMessage: 'New rating',\n    },\n  });\n\n  return (\n    <Card.Header>\n      <Row>\n        <Col className='ratings-heading-col'>\n          <h2>{formatMessage(messages.title)}</h2>\n        </Col>\n        {!showNewRating && userRole != null && [UserRole.USER, UserRole.STAFF, UserRole.ADMIN].includes(userRole) && (\n          <Col xs='auto'>\n            <Button variant='outline-primary' onClick={onShowNewRating}>{formatMessage(messages.new_rating_button)}</Button>\n          </Col>\n        )}\n      </Row>\n    </Card.Header>\n  );\n};\n\nexport default RatingsHeader;\n","import { useState } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport '../css/recipe-rating-wrapper.css';\n\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport UserRole from '../../common/types/UserRole';\nimport { Rating, RatingCreate } from '../store/types';\nimport RatingComments from './RatingComments';\nimport NewRating from './NewRating';\nimport RatingsHeader from './RatingsHeader';\n\nexport interface IRatingsWrapperProps {\n  recipeSlug: string;\n  ratings:    Array<Rating> | undefined;\n  userId:     number | undefined;\n  userRole:   UserRole | undefined;\n  pending:    PendingState;\n\n  addRating: (recipeSlug: string, rating: RatingCreate) => void;\n  removeRating: (recipeSlug: string, ratingId: number) => void;\n}\n\nconst RatingsWrapper: React.FC<IRatingsWrapperProps> = ({ recipeSlug, ratings, userId, userRole, pending, addRating, removeRating }: IRatingsWrapperProps) => {\n  const [showNewRating, setShowNewRating] = useState<boolean>(false);\n\n  const handleAddRatingSuccess = () => {\n    setShowNewRating(false);\n  };\n\n  return (\n    <Card className='rating-panel' as='article'>\n      <RatingsHeader userRole={userRole} showNewRating={showNewRating} onShowNewRating={() => setShowNewRating(true)} />\n      <Card.Body>\n        {userId != null && userRole != null && [UserRole.USER, UserRole.STAFF, UserRole.ADMIN].includes(userRole) && (\n          <NewRating show={showNewRating} recipeSlug={recipeSlug} userId={userId} addRating={addRating} onAddRatingSuccess={handleAddRatingSuccess} />\n        )}\n        <RatingComments recipeSlug={recipeSlug} ratings={ratings} pending={pending} userId={userId} removeRating={removeRating} />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default RatingsWrapper;\n","import { RatingCreate, RatingDispatch, RatingsDispatch, RATINGS_STORE, RATING_STORE, toRating } from './types';\nimport { handleError, handleFormError, request } from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport ReduxHelper, { ACTION } from '../../common/store/ReduxHelper';\nimport { AnyDispatch, toBasicAction } from '../../common/store/redux';\n\nexport const load = (recipeSlug: string) => (dispatch: RatingsDispatch) => {\n  dispatch({ ...toBasicAction(RATINGS_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.ratings}?recipe__slug=${recipeSlug}`)\n    .then(res => dispatch({\n      ...toBasicAction(\n        RATINGS_STORE,\n        ACTION.GET_SUCCESS\n      ),\n      id: recipeSlug,\n      payload: ReduxHelper.transformEntities(res.body.results, toRating),\n    }))\n    .catch(err => handleError(err, RATINGS_STORE));\n};\n\nexport const add = async (dispatch: AnyDispatch, recipeSlug: string, rating: RatingCreate) => {\n  dispatch({ ...toBasicAction(RATING_STORE, ACTION.CREATE_START) });\n  return request()\n    .post(serverURLs.ratings)\n    .send({\n      recipe:  recipeSlug,\n      rating:  rating.rating,\n      comment: rating.comment,\n      author:  rating.userId,\n    })\n    .then(res => {\n      dispatch({\n        ...toBasicAction(\n          RATING_STORE,\n          ACTION.CREATE_SUCCESS\n        ),\n        payload: {\n          recipe: recipeSlug,\n          rating:   toRating(res.body),\n        },\n      });\n      return null;\n    })\n    .catch(err => handleFormError(dispatch, err, RATINGS_STORE));\n};\n\nexport const remove = (recipeSlug: string, id: number) => (dispatch: RatingDispatch) => {\n  dispatch({ ...toBasicAction(RATING_STORE, ACTION.DELETE_START) });\n  request()\n    .delete(`${serverURLs.ratings}${id}/`)\n    .then(() => dispatch({\n      ...toBasicAction(\n        RATING_STORE,\n        ACTION.DELETE_SUCCESS\n      ),\n      payload: {\n        ratingId: id,\n        recipe:   recipeSlug,\n      },\n    }))\n    .catch(err => handleError(err, RATINGS_STORE));\n};\n","import { useCallback, useEffect } from 'react';\n\nimport RatingsWrapper from '../components/RatingsWrapper';\nimport * as RatingsActions from '../store/actions';\nimport { RatingCreate } from '../store/types';\nimport { CombinedStore } from '../../app/Store';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport ErrorBoundary from '../../common/components/ErrorBoundary';\n\nconst Ratings: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const account = useSelector((state: CombinedStore) => state.account.item);\n  const recipe  = useSelector((state: CombinedStore) => state.recipe.item);\n  const ratingsState = useSelector((state: CombinedStore) => state.ratings);\n\n  const recipeSlug = recipe?.slug;\n  const recipeRating = recipe?.rating;\n\n  const addRating = useCallback(async (recSlug: string, rating: RatingCreate) => RatingsActions.add(dispatch, recSlug, rating), [dispatch]);\n  const removeRatingCallback = useCallback((recSlug: string, ratingId: number) => dispatch(RatingsActions.remove(recSlug, ratingId)), [dispatch]);\n\n  useEffect(() => {\n    if (recipeSlug == null || recipeRating == null || recipeRating === 0) return;\n    dispatch(RatingsActions.load(recipeSlug));\n  }, [recipeSlug, recipeRating]);\n\n  if (recipeSlug == null) return null;\n  const ratings = recipeSlug != null && ratingsState.items != null ? ratingsState.items[recipeSlug] : undefined;\n\n  return (\n    <ErrorBoundary verbose printStack>\n      <RatingsWrapper\n          recipeSlug = {recipeSlug}\n          userId     = {account?.id}\n          userRole   = {account?.role}\n          ratings    = {ratings}\n          pending    = {ratingsState.meta.pending}\n\n          addRating  = {addRating}\n          removeRating = {removeRatingCallback} />\n    </ErrorBoundary>\n  );\n};\n\nexport default Ratings;\n","import { useIntl } from 'react-intl';\n\nimport { CombinedStore } from '../../app/Store';\nimport { useSelector } from '../../common/store/redux';\nimport { Recipe } from '../store/RecipeTypes';\nimport MiniBrowse from '../../browse/containers/MiniBrowse';\nimport ErrorBoundary from '../../common/components/ErrorBoundary';\n\nexport interface IRecipeFooterProps {\n  recipe?: Recipe;\n}\n\nfunction getFilters(recipe: Recipe): Record<string, string> | undefined {\n  const res: Record<string, string> = {};\n  if (recipe.course) {\n    res.course__slug = recipe.course.title;\n  }\n  if (recipe.cuisine) {\n    res.cuisine__slug = recipe.cuisine.title;\n  }\n  return Object.keys(res).length > 0 ? res : undefined;\n}\n\nconst RecipeFooter: React.FC<IRecipeFooterProps> = ({ recipe }: IRecipeFooterProps) => {\n  const intl = useIntl();\n\n  const miniBrowseMeta = useSelector((state: CombinedStore) => state.browse.miniBrowse.meta);\n\n  if (!miniBrowseMeta.hasConnection || miniBrowseMeta.error\n      || !recipe?.author) return null;\n\n  return (\n    <ErrorBoundary verbose printStack>\n      <hr />\n      <article className='recipe-footer'>\n        <MiniBrowse\n            heading = {intl.messages['nav.home.recommended_recipes_title'] as string}\n            count = {4}\n            filters = {getFilters(recipe)} />\n      </article>\n    </ErrorBoundary>\n  );\n};\n\nexport default RecipeFooter;\n","import classNames from 'classnames';\n\nimport '../css/chip.css';\n\nexport interface IChipProps {\n  variant: 'primary' | 'secondary';\n\n  className?: string;\n  children: React.ReactNode;\n}\n\nconst Chip: React.FC<IChipProps> = ({ variant, className, children }: IChipProps) => (\n  <span\n      className={classNames('chip', variant, className)}>\n    {children}\n  </span>\n);\n\nexport default Chip;\n","import { Children, isValidElement, useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport '../css/image_viewer.css';\n\nimport { ModalHeaderCloseButton } from './Modal';\nimport { IImageProps } from './Image';\nimport Icon from './Icon';\nimport ErrorBoundary from './ErrorBoundary';\n\nexport interface IImageViewerProps {\n  style?: React.CSSProperties;\n  className?: string;\n\n  children: React.ReactElement<IImageProps>; // | Array<React.ReactElement<IImageProps>>;\n}\n\nconst ImageViewer: React.FC<IImageViewerProps> = ({\n    style, className, children }: IImageViewerProps) => {\n  const [openModal, setOpenModal] = useState<boolean>(false);\n\n  const handleOpenModal  = () => { setOpenModal(true); };\n  const handleCloseModal = () => { setOpenModal(false); };\n\n  return (\n    <ErrorBoundary verbose={false} printStack={false}>\n      <Button\n          type = 'button'\n          style = {style}\n          className = {classNames('image-viewer', className)}\n          onClick = {handleOpenModal}\n          >\n        {children}\n      </Button>\n\n      <Modal\n          show = {openModal}\n          fullscreen\n          onHide = {handleCloseModal}\n          className = 'image-viewer-dialog'\n          >\n        <ErrorBoundary verbose printStack>\n          <ImageViewerContent\n              onClose = {handleCloseModal}>\n            {children}\n          </ImageViewerContent>\n        </ErrorBoundary>\n      </Modal>\n    </ErrorBoundary>\n  );\n};\n\ninterface IImageViewerContentProps {\n  onClose: () => void;\n\n  children: React.ReactElement<IImageProps>; // | Array<React.ReactElement<IImageProps>>;\n}\n\nconst ImageViewerContent: React.FC<IImageViewerContentProps> = ({\n    onClose, children }: IImageViewerContentProps) => {\n  // This is a good spot to generate some kind of list, if more than 1 image is provided.\n  let nextSrc = '';\n  Children.forEach(children, element => {\n    if (!isValidElement(element)) return;\n\n    const { src } = element.props;\n    nextSrc = src;\n  });\n  const nextTitle = nextSrc.includes('/') ? nextSrc.substring(nextSrc.lastIndexOf('/') + 1) : nextSrc;\n\n  return (\n    <>\n      <Modal.Header>\n        <Modal.Title>{nextTitle}</Modal.Title>\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a title={nextTitle} download={nextTitle} href={nextSrc} className='btn btn-transparent close-button download-button'>\n          <Icon icon='download' variant='light' size='2x' />\n        </a>\n        <ModalHeaderCloseButton onClose={onClose} />\n      </Modal.Header>\n      <Modal.Body>\n        {children}\n      </Modal.Body>\n    </>\n  );\n};\n\nexport default ImageViewer;\n","import { createContext } from 'react';\n\nexport interface ICookingModeContext {\n  cookingMode: boolean;\n  setCookingMode: (active: boolean) => void;\n}\n\nconst CookingModeContext = createContext<ICookingModeContext | null>(null);\n\nexport default CookingModeContext;\n","// Coded by Joris (https://github.com/jorisre/react-screen-wake-lock)\n\nimport { useCallback, useRef, useState } from 'react';\n\nexport interface IWakeLockOptions {\n  onError?: (error: Error) => void;\n  onRequest?: () => void;\n  onRelease?: EventListener;\n}\n\nexport const useWakeLock = ({\n  onError,\n  onRequest,\n  onRelease,\n}: IWakeLockOptions | undefined = {}) => {\n  const [released, setReleased] = useState<boolean | undefined>();\n  const wakeLock = useRef<WakeLockSentinel | null>(null);\n\n  // https://caniuse.com/mdn-api_wakelock\n  const isSupported = typeof window !== 'undefined' && 'wakeLock' in navigator;\n\n  const request = useCallback(\n    async (type: WakeLockType = 'screen') => {\n      const isWakeLockAlreadyDefined = wakeLock.current != null;\n      if (!isSupported) {\n        // eslint-disable-next-line no-console\n        console.warn('Calling the \"request\" function has no effect, Wake Lock Screen API isn\\'t supported.');\n        return;\n      }\n      if (isWakeLockAlreadyDefined) {\n        // eslint-disable-next-line no-console\n        console.warn('Calling \"request\" multiple times without \"release\" has no effect.');\n        return;\n      }\n\n      try {\n        wakeLock.current = await navigator.wakeLock.request(type);\n\n        wakeLock.current.onrelease = (e: Event) => {\n          // Default to `true` - `released` API is experimental: https://caniuse.com/mdn-api_wakelocksentinel_released\n          setReleased((wakeLock.current && wakeLock.current.released) ?? true);\n          if (onRelease) {\n            onRelease(e);\n          }\n          wakeLock.current = null;\n        };\n\n        onRequest?.();\n        setReleased((wakeLock.current && wakeLock.current.released) ?? false);\n      } catch (error) {\n        if (onError) {\n          onError(error as Error);\n        } else {\n          // eslint-disable-next-line no-console\n          console.error((error as Error)?.message);\n        }\n      }\n    },\n    [isSupported, onRequest, onError, onRelease]\n  );\n\n  const release = useCallback(async () => {\n    const isWakeLockUndefined = wakeLock.current == null;\n    if (!isSupported) {\n      // eslint-disable-next-line no-console\n      console.warn('Calling the \"release\" function has no effect, Wake Lock Screen API isn\\'t supported.');\n      return;\n    }\n    if (isWakeLockUndefined) {\n      // eslint-disable-next-line no-console\n      console.warn('Calling `release` before `request` has no effect.');\n      return;\n    }\n\n    if (wakeLock.current) {\n      await wakeLock.current.release();\n    }\n  }, [isSupported]);\n\n  return {\n    isSupported: isSupported,\n    request:     request,\n    released:    released,\n    release:     release,\n    type:        (wakeLock.current && wakeLock.current.type) || undefined,\n  };\n};\n","import { Button } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\nimport React, { useContext } from 'react';\n\nimport '../css/recipe_header.css';\n\nimport Icon from '../../common/components/Icon';\nimport Tooltip from '../../common/components/Tooltip';\nimport CookingModeContext from '../context/CookingModeContext';\nimport { useWakeLock } from '../../common/hooks/useWakeLock';\n\nconst CookingModeButton: React.FC = () => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const messages = defineMessages({\n    activate_cooking_mode_tooltip: {\n      id: 'recipe.activate_cooking_mode_tooltip',\n      description: 'Tooltip displayed when hovering the activate cooking mode button',\n      defaultMessage: 'Keep display awake.',\n    },\n    deactivate_cooking_mode_tooltip: {\n      id: 'recipe.deactivate_cooking_mode_tooltip',\n      description: 'Tooltip displayed when hovering the deactivate cooking mode button',\n      defaultMessage: 'Release the display wake lock.',\n    },\n  });\n\n  const { isSupported } = useWakeLock();\n  const cookingModeContext = useContext(CookingModeContext);\n  const isCookingMode = cookingModeContext?.cookingMode ?? false;\n\n  const handleClick = () => {\n    cookingModeContext?.setCookingMode(!isCookingMode);\n  };\n\n  if (!isSupported) return null;\n\n  return (\n    <Tooltip id='cooking mode tooltip' tooltip={formatMessage(isCookingMode ? messages.deactivate_cooking_mode_tooltip : messages.activate_cooking_mode_tooltip)}>\n      <Button variant={isCookingMode ? 'primary' : 'outline-primary'} aria-label='Toggle cooking mode' onClick={handleClick}>\n        <Icon icon='stopwatch' variant={isCookingMode ? 'filled' : 'light'} />\n      </Button>\n    </Tooltip>\n  );\n};\n\nexport default CookingModeButton;\n","/* eslint-disable camelcase */\nimport { Link } from 'react-router-dom';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\nimport React, { useState } from 'react';\n\nimport '../css/recipe_header.css';\n\nimport { getRoutePath, optionallyFormatMessage } from '../../common/utility';\nimport Icon from '../../common/components/Icon';\nimport Chip from '../../common/components/Chip';\nimport Ratings from '../../rating/components/Ratings';\nimport P from '../../common/components/P';\nimport { Recipe } from '../store/RecipeTypes';\nimport Modal from '../../common/components/Modal';\nimport WidthHeightRatio from '../../common/components/WidthHeightRatio';\nimport Image from '../../common/components/Image';\nimport Tooltip from '../../common/components/Tooltip';\nimport ImageViewer from '../../common/components/ImageViewer';\nimport CookingModeButton from './CookingModeButton';\n\nexport interface IRecipeHeaderProps {\n  recipe:       Recipe | undefined;\n  showEditLink: boolean;\n\n  onEditRecipe: () => void;\n  deleteRecipe: () => void;\n  // onAddToMenuClick: () => void;\n}\n\nconst RecipeHeader: React.FC<IRecipeHeaderProps> = ({\n    recipe, showEditLink, onEditRecipe, deleteRecipe }: IRecipeHeaderProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const messages = defineMessages({\n    edit_tooltip: {\n      id: 'recipe.edit_tooltip',\n      description: 'Tooltip displayed when hovering the edit recipe icon button',\n      defaultMessage: 'Edit this recipe',\n    },\n    delete_tooltip: {\n      id: 'recipe.delete_tooltip',\n      description: 'Tooltip displayed when hovering the delete recipe icon button',\n      defaultMessage: 'Delete this recipe',\n    },\n    print_tooltip: {\n      id: 'recipe.print_tooltip',\n      description: 'Tooltip displayed when hovering the print icon button',\n      defaultMessage: 'Print this recipe',\n    },\n    recipe_comments: {\n      id: 'recipe.comments',\n      description: 'Button to comments',\n      defaultMessage: 'Comments',\n    },\n    prep_time: {\n      id: 'recipe.prep_time',\n      description: 'Preparation time',\n      defaultMessage: 'Prep time',\n    },\n    cooking_time: {\n      id: 'recipe.cooking_time',\n      description: 'Cooking time',\n      defaultMessage: 'Cooking time',\n    },\n    minutes: {\n      id: 'recipe.minutes',\n      description: 'minutes',\n      defaultMessage: 'minutes',\n    },\n    source: {\n      id: 'recipe.source',\n      description: 'Source of the recipe',\n      defaultMessage: 'Source',\n    },\n    created_by: {\n      id: 'recipe.created_by',\n      description: 'Created by',\n      defaultMessage: 'Created by',\n    },\n    last_updated: {\n      id: 'recipe.last_updated',\n      description: 'Last Updated',\n      defaultMessage: 'Last Updated',\n    },\n    confirm_delete_title: {\n      id: 'recipe.confirm_delete_title',\n      description: 'Confirm deletion - dialog title',\n      defaultMessage: 'Confirm deletion',\n    },\n    confirm_delete_message: {\n      id: 'recipe.confirm_delete',\n      description: 'Are you sure you want to delete this recipe?',\n      defaultMessage: 'Are you sure you want to delete this recipe?',\n    },\n    confirm_delete_accept: {\n      id: 'recipe.confirm_delete_accept',\n      description: 'Confirm deletion - Accept button title',\n      defaultMessage: 'Delete',\n    },\n  });\n\n  const handleEditClick    = () => { onEditRecipe(); };\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState<boolean>(false);\n  const handleDeleteClick  = () => { setShowDeleteConfirm(true); };\n  const handleDeleteAccept = () => { deleteRecipe(); };\n  const handleDeleteClose  = () => { setShowDeleteConfirm(false); };\n\n  const editLink = showEditLink ? (\n    <Tooltip id='edit tooltip' tooltip={formatMessage(messages.edit_tooltip)}>\n      <Link to={getRoutePath(`/recipe/edit/${recipe?.slug}`)} onClick={handleEditClick}>\n        <Button variant='outline-primary' size='sm'>\n          <i className='bi bi-pencil-fill' />\n        </Button>\n      </Link>\n    </Tooltip>\n  ) : null;\n\n  const deleteLink = showEditLink ? (\n    <Tooltip id='trash tooltip' tooltip={formatMessage(messages.delete_tooltip)}>\n      <Button variant='outline-danger' size='sm' onClick={handleDeleteClick}>\n        <Icon icon='trash' />\n      </Button>\n    </Tooltip>\n  ) : null;\n\n  let hostname = '';\n  if (recipe?.source && recipe.source.match(/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/g)) {\n    // Get Host name of a URL\n    const a = document.createElement('a');\n    a.href = recipe.source;\n    hostname = a.hostname;\n  }\n\n  const printButton = (\n    <Tooltip id='print tooltip' tooltip={formatMessage(messages.print_tooltip)}>\n      <Button variant='outline-primary' aria-label='Print receipt' onClick={window.print}>\n        <Icon icon='printer' />\n      </Button>\n    </Tooltip>\n  );\n\n  const optionButtons = (\n    <div className='options print-hidden'>\n      <div className='options-wrapper'>\n        {showEditLink && (\n          <>\n            {editLink}\n            {deleteLink}\n          </>\n        )}\n        {/*\n          <Button variant='outline-primary' aria-label='Add receipt to menu' onClick={onAddToMenuClick}>\n            <Icon icon='calendar' />\n          </Button>\n        */}\n        <CookingModeButton />\n        {printButton}\n      </div>\n    </div>\n  );\n\n  const chips = recipe != null ? (\n    <>\n      <div className='recipe-header-chips'>\n        {recipe.prepTime != null && recipe.prepTime > 0 && (\n          <Chip variant='secondary'>\n            <Icon icon='clock' />\n            {`${formatMessage(messages.prep_time)}: `}\n            {recipe.prepTime}\n            {` ${formatMessage(messages.minutes)}`}\n          </Chip>\n        )}\n        {recipe.cookTime != null && recipe.cookTime > 0 && (\n          <Chip variant='secondary'>\n            <Icon icon='clock' />\n            {`${formatMessage(messages.cooking_time)}: `}\n            {recipe.cookTime}\n            {` ${formatMessage(messages.minutes)}`}\n          </Chip>\n        )}\n        {recipe.course != null && recipe.course.title != null && recipe.course.title.length > 0 && (\n          <Chip variant='secondary'>\n            <Icon icon='bar-chart' />\n            {optionallyFormatMessage(intl, 'course.', recipe.course.title)}\n          </Chip>\n        )}\n        {recipe.cuisine != null && recipe.cuisine.title != null && recipe.cuisine.title.length > 0 && (\n          <Chip variant='secondary'>\n            <Icon icon='globe' variant='light' />\n            {optionallyFormatMessage(intl, 'cuisine.', recipe.cuisine.title)}\n          </Chip>\n        )}\n      </div>\n      <div className='recipe-header-chips'>\n        <Chip variant='secondary'>\n          <Icon icon='calendar' />\n          {recipe?.updateDate && new Date(recipe.updateDate).toLocaleDateString(intl.locale)}\n        </Chip>\n        <Chip variant='secondary'>\n          <Icon icon='person' />\n          {recipe?.username ?? ''}\n        </Chip>\n      </div>\n      {recipe.tags != null && recipe.tags.length > 0 && (\n        <div className='recipe-header-chips'>\n          {recipe.tags.map(t => (\n            <Chip key={String(t.title)} variant='secondary'>\n              {optionallyFormatMessage(intl, 'tag.', t.title)}\n            </Chip>\n          ))}\n        </div>\n      )}\n    </>\n  ) : null;\n\n  return (\n    <>\n      <article className='recipe-header'>\n        <h1 className='d-block d-xl-none'>{recipe?.title}</h1>\n\n        <Row className='flex-row-reverse justify-content-center'>\n          {recipe != null && recipe.photo && (\n            <>\n              <Col xl={6} lg={12} className='img-wrapper print-hidden'>\n                <WidthHeightRatio height={66.67} width={100}>\n                  <ImageViewer>\n                    <Image\n                        src = {recipe.photo}\n                        alt = ''\n                        className='img-responsive print-hidden' />\n                  </ImageViewer>\n                </WidthHeightRatio>\n                {optionButtons}\n              </Col>\n              <Col sm={7} xs={12} className='col-sm-push-5 print-only'>\n                <WidthHeightRatio height={66.67} width={100} className='print-only print-image'>\n                  <ImageViewer>\n                    <Image\n                        src = {recipe.photoThumbnail ?? recipe.photo}\n                        alt = '' />\n                  </ImageViewer>\n                </WidthHeightRatio>\n              </Col>\n            </>\n          )}\n          {recipe != null && !recipe.photo && (\n            optionButtons\n          )}\n\n          <Col xl={6} lg={12} className='info-wrapper'>\n            <h1 className='d-none d-xl-block'>{recipe?.title}</h1>\n            <P>{recipe?.info}</P>\n            <Ratings stars={recipe?.rating ?? 0} />\n            {chips}\n            {recipe?.source && (\n              <div>\n                {`${formatMessage(messages.source)}: `}\n                {hostname.length > 0 && <a href={recipe.source} target='_blank' rel='noreferrer'>{hostname}</a>}\n                {hostname.length === 0 && recipe.source}\n              </div>\n            )}\n          </Col>\n        </Row>\n      </article>\n\n      <Modal\n          show        = {showDeleteConfirm}\n          title       = {formatMessage(messages.confirm_delete_title)}\n          acceptTitle = {formatMessage(messages.confirm_delete_accept)}\n          acceptButtonProps = {{ variant: 'danger' }}\n          onAccept    = {handleDeleteAccept}\n          onClose     = {handleDeleteClose}\n          className   = 'delete'>\n        {formatMessage(messages.confirm_delete_message)}\n      </Modal>\n    </>\n  );\n};\n\nexport default RecipeHeader;\n","import { useMemo } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Button, Form } from 'react-bootstrap';\nimport { Form as ReduxForm } from 'react-final-form';\n\nimport { Recipe } from '../store/RecipeTypes';\n\n// import IngredientButtons from './IngredientButtons';\nimport { PendingState, ReducerMeta } from '../../common/store/GenericReducerType';\nimport Icon from '../../common/components/Icon';\nimport InitialValuesResetter from '../../common/components/ReduxForm/ReInitialValuesResetter';\nimport ReInput from '../../common/components/ReduxForm/ReInput';\n\nexport interface IIngredientsHeaderProps {\n  recipe:      Recipe | undefined;\n  recipeMeta:  ReducerMeta;\n\n  // lists: Array<any>;\n\n  // bulkAdd: (listId: number) => void;\n  // checkAllIngredients: () => void;\n  // uncheckAllIngredients: () => void;\n\n  // checkIngredient: (id: number, checked: boolean) => void;\n  // checkSubRecipe:  (id: number, checked: boolean) => void;\n\n  updateServings: (servings: number) => void;\n}\n\nexport interface IFormDataProps {\n  servings: number;\n}\n\nconst IngredientsHeader: React.FC<IIngredientsHeaderProps> = ({\n    recipe, recipeMeta, updateServings }: IIngredientsHeaderProps) => {\n  const { formatMessage } = useIntl();\n  const messages = defineMessages({\n    ingredients: {\n      id: 'recipe.ingredients',\n      description: 'Ingredients',\n      defaultMessage: 'Ingredients',\n    },\n    ingredients_for_servings: {\n      id: 'recipe.ingredients_for_servings',\n      description: 'Ingredients for[ n servings]',\n      defaultMessage: 'Ingredients for',\n    },\n    servings: {\n      id: 'recipe.servings',\n      description: 'Servings',\n      defaultMessage: 'Servings',\n    },\n    servings_input_tooltip: {\n      id: 'recipe.servings_input_tooltip',\n      description: 'Accessible tooltip for the (change) servings input',\n      defaultMessage: 'Amount of servings',\n    },\n  });\n\n  const customServings = recipe?.customServings;\n\n  const handleSubmit = (form: IFormDataProps) => updateServings(form.servings);\n\n  const initialValues: Partial<IFormDataProps> = useMemo(() => ({\n    servings: customServings,\n  }), [customServings]);\n\n  const pending  = recipeMeta.pending;\n  const servings = recipe?.customServings ?? 0;\n  const hasNoIngredients = pending === PendingState.COMPLETED\n      && recipe?.subrecipes != null && recipe.subrecipes.length === 0\n      && recipe?.ingredientGroups != null && recipe.ingredientGroups.length === 0;\n\n  return (\n    <>\n      {(hasNoIngredients || servings === 0) && <h2>{formatMessage(messages.ingredients)}</h2>}\n      {!hasNoIngredients && servings > 0 && (\n        <div className='ingredients-for-servings-row'>\n          <h2>\n            {formatMessage(messages.ingredients_for_servings)}\n            <span className='print-only'>{`: ${recipe?.customServings ?? ''} ${formatMessage(messages.servings)}`}</span>\n          </h2>\n          <div className='custom-servings print-hidden'>\n            <ReduxForm\n                initialValues = {initialValues}\n                onSubmit = {handleSubmit}\n                subscription = {{}}\n                render = {({ form, handleSubmit: renderSubmit }) => (\n                  <Form onSubmit={renderSubmit} className='custom-servings'>\n                    <InitialValuesResetter form={form} initialValues={initialValues} />\n                    <ReInput\n                        name  = 'servings'\n                        type  = 'number'\n                        aria-label = {formatMessage(messages.servings_input_tooltip)}\n                        min   = {0}\n                        max   = {1000}\n                        autoComplete = 'off' />\n                    <Button type='submit' variant='primary'>\n                      <Icon icon='arrow-repeat' variant='light' />\n                      {formatMessage(messages.servings)}\n                    </Button>\n                  </Form>\n                )} />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default IngredientsHeader;\n","import { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/ingredients_panel.css';\n\nimport { Recipe } from '../store/RecipeTypes';\nimport SubRecipes from './SubRecipes';\nimport IngredientGroups from './IngredientGroups';\n// import IngredientButtons from './IngredientButtons';\nimport { PendingState, ReducerMeta } from '../../common/store/GenericReducerType';\nimport P from '../../common/components/P';\nimport IngredientsHeader from './IngredientsHeader';\nimport Loading from '../../common/components/Loading';\n\nexport interface IIngredientsPanelProps {\n  recipe:      Recipe | undefined;\n  recipeMeta:  ReducerMeta;\n\n  // lists: Array<any>;\n\n  // bulkAdd: (listId: number) => void;\n  // checkAllIngredients: () => void;\n  // uncheckAllIngredients: () => void;\n\n  // checkIngredient: (id: number, checked: boolean) => void;\n  // checkSubRecipe:  (id: number, checked: boolean) => void;\n\n  updateServings: (servings: number) => void;\n}\n\nconst IngredientsPanel: React.FC<IIngredientsPanelProps> = ({ recipe, recipeMeta, updateServings }: IIngredientsPanelProps) => {\n  const { formatMessage } = useIntl();\n  const messages = defineMessages({\n    no_ingredients: {\n      id: 'recipe.recipe_ingredient_button.no_ingredients',\n      description: 'No ingredients provided message',\n      defaultMessage: '(This recipe has no ingredients.)',\n    },\n  });\n\n  const pending = recipeMeta.pending;\n  const hasNoIngredients = pending === PendingState.COMPLETED\n      && recipe?.subrecipes != null && recipe.subrecipes.length === 0\n      && recipe?.ingredientGroups != null && recipe.ingredientGroups.length === 0;\n\n  return (\n    <article className='ingredients-panel'>\n      <IngredientsHeader recipe={recipe} recipeMeta={recipeMeta} updateServings={updateServings} />\n      {pending === PendingState.LOADING && recipe?.ingredientGroups == null && <Loading />}\n      {hasNoIngredients && (\n        <P className='placeholder'>{formatMessage(messages.no_ingredients)}</P>\n      )}\n      {!hasNoIngredients && (\n        <>\n          <div className='ingredient-groups'>\n            <SubRecipes\n                subRecipes = {recipe?.subrecipes}\n                // checkSubRecipe = {checkSubRecipe}\n                />\n            <IngredientGroups\n                groups  = {recipe?.ingredientGroups}\n                hasSubrecipes = {recipe?.subrecipes != null && recipe?.subrecipes.length > 0}\n                // checkIngredient = {checkIngredient}\n                />\n          </div>\n          {/*\n          <IngredientButtons\n              pending    = {pending}\n              lists      = {lists}\n              bulkAdd    = {bulkAdd}\n              checkAll   = {checkAllIngredients}\n              unCheckAll = {uncheckAllIngredients} /> */}\n        </>\n      )}\n    </article>\n  );\n};\n\nexport default IngredientsPanel;\n","import { defineMessages, useIntl } from 'react-intl';\nimport classNames from 'classnames';\n\nimport '../css/directions.css';\n\nimport { IngredientGroup } from '../store/RecipeTypes';\nimport P from '../../common/components/P';\nimport { PendingState, ReducerMeta } from '../../common/store/GenericReducerType';\nimport Loading from '../../common/components/Loading';\nimport Directions from './Directions';\n\nexport interface IDirectionsPanelProps {\n  directions: string;\n  recipeMeta: ReducerMeta;\n  ingredients: Array<IngredientGroup>;\n}\n\nconst DirectionsPanel: React.FC<IDirectionsPanelProps> = ({\n    directions: directionsString, recipeMeta, ingredients }: IDirectionsPanelProps) => {\n  const { formatMessage } = useIntl();\n  const messages = defineMessages({\n    directions: {\n      id: 'recipe.directions',\n      description: 'Directions',\n      defaultMessage: 'Directions',\n    },\n    no_directions: {\n      id: 'recipe.directions.no_directions',\n      description: 'No directions provided message',\n      defaultMessage: '(This recipe has no directions.)',\n    },\n  });\n\n  const pending = recipeMeta.pending;\n  const hasNoData = pending === PendingState.COMPLETED\n      && directionsString.trim().length <= 1; // Ignore single fake char.\n\n  const isMultiDirections = directionsString.includes(':\\n');\n\n  return (\n    <article className={classNames('directions-panel', { 'multi-directions': isMultiDirections })}>\n      <h2>{formatMessage(messages.directions)}</h2>\n      {pending === PendingState.LOADING && directionsString === '' && <Loading />}\n      {hasNoData && (\n        <P className='placeholder'>{formatMessage(messages.no_directions)}</P>\n      )}\n      {!hasNoData && (\n        <div className='direction-groups'>\n          <Directions directions={directionsString} ingredients={ingredients} />\n        </div>\n      )}\n    </article>\n  );\n};\n\nexport default DirectionsPanel;\n","import { Col, Row } from 'react-bootstrap';\n\nimport '../css/recipe.css';\n\nimport { Recipe } from '../store/RecipeTypes';\nimport { ReducerMeta } from '../../common/store/GenericReducerType';\nimport RecipeHeader from './RecipeHeader';\nimport IngredientsPanel from './IngredientsPanel';\nimport DirectionsPanel from './DirectionsPanel';\n\ninterface IRecipeSchemeProps {\n  recipe:       Recipe | undefined;\n  recipeMeta:   ReducerMeta;\n  showEditLink: boolean;\n\n  onEditRecipe: () => void;\n  deleteRecipe: () => void;\n\n  // lists: Array<any>;\n\n  // onAddToMenuClick: () => void;\n  // bulkAdd: (listId: number) => void;\n  // checkAllIngredients: () => void;\n  // uncheckAllIngredients: () => void;\n\n  // checkIngredient: (id: number, checked: boolean) => void;\n  // checkSubRecipe:  (id: number, checked: boolean) => void;\n\n  updateServings: (servings: number) => void;\n}\n\nconst RecipeScheme: React.FC<IRecipeSchemeProps> = ({ recipe, recipeMeta, showEditLink, onEditRecipe, deleteRecipe, updateServings }: IRecipeSchemeProps) => (\n  <div className='recipe-details'>\n    <RecipeHeader\n        recipe = {recipe}\n        showEditLink = {showEditLink}\n        onEditRecipe = {onEditRecipe}\n        // onAddToMenuClick={props.onAddToMenuClick}\n        deleteRecipe = {deleteRecipe} />\n\n    <hr />\n\n    <Row>\n      <Col xl={4} lg={12}>\n        <IngredientsPanel\n            recipe = {recipe}\n            recipeMeta = {recipeMeta}\n\n            // lists = {lists}\n\n            // bulkAdd = {bulkAdd}\n            // checkAllIngredients = {checkAllIngredients}\n            // uncheckAllIngredients = {uncheckAllIngredients}\n\n            // checkIngredient = {checkIngredient}\n            // checkSubRecipe = {checkSubRecipe}\n\n            updateServings = {updateServings} />\n      </Col>\n      <hr className='d-block d-xl-none' />\n      <Col xl={8} lg={12}>\n        <DirectionsPanel\n            directions  = {recipe?.directions ?? ''}\n            recipeMeta  = {recipeMeta}\n            ingredients = {recipe?.ingredientGroups ?? []} />\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default RecipeScheme;\n","import { useMemo, useState } from 'react';\n\nimport CookingModeContext, { ICookingModeContext } from './CookingModeContext';\n\n/** {@link CookingModeContextProvider} Props. */\ninterface ICookingModeContextProviderProps {\n  /** App container that should have access to the providers. */\n  children?: React.ReactNode | React.ReactElement;\n}\n\n/**\n * {@link CookingModeContext} Provider.\n *\n * @param props - {@link ICookingModeContextProviderProps}.\n */\nconst CookingModeContextProvider: React.FC<ICookingModeContextProviderProps> = ({\n    children }: ICookingModeContextProviderProps) => {\n  const [isCookingMode, setIsCookingMode] = useState<boolean>(false);\n\n  const updateCookingMode = (active: boolean) => setIsCookingMode(active);\n\n  const value: ICookingModeContext = useMemo(() => ({\n    cookingMode:    isCookingMode,\n    setCookingMode: updateCookingMode,\n  }), [isCookingMode]);\n\n  return (\n    <CookingModeContext.Provider value={value}>\n      {children}\n    </CookingModeContext.Provider>\n   );\n};\n\nexport default CookingModeContextProvider;\n","// Coded by Gilad Peleg (https://github.com/pgilad/react-page-visibility)\n\nconst hasDocument: boolean = typeof document !== 'undefined';\nconst vendorEvents = [\n  {\n    hidden: 'hidden',\n    event: 'visibilitychange',\n    state: 'visibilityState',\n  },\n  {\n    hidden: 'webkitHidden',\n    event: 'webkitvisibilitychange',\n    state: 'webkitVisibilityState',\n  },\n  {\n    hidden: 'mozHidden',\n    event: 'mozvisibilitychange',\n    state: 'mozVisibilityState',\n  },\n  {\n    hidden: 'msHidden',\n    event: 'msvisibilitychange',\n    state: 'msVisibilityState',\n  },\n  {\n    hidden: 'oHidden',\n    event: 'ovisibilitychange',\n    state: 'oVisibilityState',\n  },\n];\n\nexport const isSupported: boolean = hasDocument && Boolean(document.addEventListener);\n\nexport const visibility = (() => {\n  if (!isSupported) {\n    return null;\n  }\n  return vendorEvents.find(e => e.hidden in document) ?? null;\n})();\n\nexport const getHandlerArgs = () => {\n  if (!visibility) {\n    return [true, 'visible'];\n  }\n  const { hidden, state } = visibility;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return [!(document as any)[hidden] as boolean, (document as any)[state] as string];\n};\n","// Coded by Gilad Peleg (https://github.com/pgilad/react-page-visibility)\n\nimport { useEffect, useState } from 'react';\n\nimport { getHandlerArgs, isSupported, visibility } from './utils';\n\nconst isSupportedLocal = isSupported && visibility;\n\nconst usePageVisibility = () => {\n  const [initiallyVisible] = getHandlerArgs();\n\n  const [isVisible, setIsVisible] = useState(initiallyVisible);\n\n  useEffect(() => {\n    if (isSupportedLocal && visibility) {\n      const handler = () => {\n        const [currentlyVisible] = getHandlerArgs();\n\n        setIsVisible(currentlyVisible);\n      };\n\n      document.addEventListener(visibility.event, handler);\n    }\n\n    return () => {\n      if (isSupportedLocal && visibility) {\n        const handler = () => {\n          const [currentlyVisible] = getHandlerArgs();\n\n          setIsVisible(currentlyVisible);\n        };\n\n        document.removeEventListener(visibility.event, handler);\n      }\n    };\n  }, []);\n\n  return isVisible;\n};\n\nexport default usePageVisibility;\n","import { defineMessages, useIntl } from 'react-intl';\nimport React, { useContext, useEffect, useState } from 'react';\n\nimport '../css/recipe_header.css';\n\nimport { useWakeLock } from '../../common/hooks/useWakeLock';\nimport usePageVisibility from '../../common/components/pageVisibility/usePageVisibility';\n\nimport Toast from '../../common/components/Toast';\nimport Modal from '../../common/components/Modal';\nimport CookingModeContext from '../context/CookingModeContext';\n\nconst CookingModeHandler: React.FC = () => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const messages = defineMessages({\n    activated_cooking_mode_toast: {\n      id: 'recipe.activated_cooking_mode_toast',\n      description: 'Toast displayed when activating the cooking mode button',\n      defaultMessage: 'Your display will stay awake now.\\nHappy cooking!',\n    },\n    still_cooking_modal_title: {\n      id: 'recipe.still_cooking_modal_title',\n      description: 'Title of the modal to ask to continue keeping the display awake.',\n      defaultMessage: 'Still cooking?',\n    },\n    still_cooking_modal_text: {\n      id: 'recipe.still_cooking_modal_text',\n      description: 'Body text of the modal to ask to continue keeping the display awake.',\n      defaultMessage: 'Do you want to continue keeping the display awake?',\n    },\n    still_cooking_modal_yes: {\n      id: 'recipe.still_cooking_modal_yes',\n      description: 'Yes button.',\n      defaultMessage: 'Yes',\n    },\n    still_cooking_modal_no: {\n      id: 'recipe.still_cooking_modal_no',\n      description: 'no button.',\n      defaultMessage: 'No',\n    },\n  });\n\n  const cookingModeContext = useContext(CookingModeContext);\n  const isCookingMode = cookingModeContext?.cookingMode ?? false;\n\n  let timer: NodeJS.Timeout | undefined;\n\n  const [showCookingModeToast, setShowCookingModeToast] = useState<boolean>(false);\n  const [askIfStillActive, setAskIfStillActive] = useState<boolean>(false);\n\n  const { isSupported, request, release, released } = useWakeLock();\n\n  const isPageVisible = usePageVisibility();\n  useEffect(() => {\n    if (!isSupported || !isCookingMode) return;\n\n    if (!isPageVisible) {\n      if (released === false) {\n        release();\n      }\n    } else {\n      request();\n    }\n  }, [isPageVisible]);\n\n  useEffect(() => {\n    if (!isCookingMode) {\n      clearTimer();\n      if (released === false) {\n        release();\n      }\n    } else if (isSupported) {\n      request()\n        .then(() => {\n          renewTimer();\n          setTimeout(() => {\n            setShowCookingModeToast(true);\n          }, 1);\n        });\n    }\n  }, [isCookingMode]);\n\n  // componentWillUnmount\n  useEffect(() => () => {\n    clearTimer(false);\n    if (released === false) {\n      release();\n    }\n  }, []);\n\n  const pauseLock = () => {\n    release();\n    setAskIfStillActive(true);\n  };\n\n  const renewTimer = () => {\n    clearTimer();\n    timer = setTimeout(() => {\n      pauseLock();\n    }, 1000 * 60 * 30);\n  };\n\n  const clearTimer = (resetState = true) => {\n    if (resetState) {\n      setShowCookingModeToast(false);\n      setAskIfStillActive(false);\n    }\n    if (timer != null) {\n      clearTimeout(timer);\n    }\n  };\n\n  const handleStillActive = () => {\n    request()\n      .then(() => {\n        renewTimer();\n      });\n  };\n\n  const handleNotActiveAnymore = (autoClose: boolean) => {\n    if (!autoClose) {\n      cookingModeContext?.setCookingMode(false);\n    }\n  };\n\n  return (\n    <>\n      <Toast\n          show = {isCookingMode && showCookingModeToast}\n          autoHide = {10000}\n          anchorOrigin = {{ horizontal: 'center', vertical: 'bottom' }}\n          onClose = {() => setShowCookingModeToast(false)}>\n        {formatMessage(messages.activated_cooking_mode_toast)}\n      </Toast>\n\n      <Modal\n          show = {askIfStillActive}\n          title = {formatMessage(messages.still_cooking_modal_title)}\n          acceptTitle = {formatMessage(messages.still_cooking_modal_yes)}\n          closeTitle = {formatMessage(messages.still_cooking_modal_no)}\n          onAccept = {handleStillActive}\n          onClose = {handleNotActiveAnymore}>\n        {formatMessage(messages.still_cooking_modal_text)}\n      </Modal>\n    </>\n  );\n};\n\nexport default CookingModeHandler;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport * as _ from 'lodash-es';\n\nimport '../css/recipe.css';\n\nimport Loading from '../../common/components/Loading';\n// import MenuItemModal from '../../menu/components/modals/MenuItemModal';\nimport RecipeScheme from '../components/RecipeScheme';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport * as RecipeActions from '../store/RecipeActions';\nimport * as RecipeFormActions from '../../recipe_form/store/actions';\n// import * as MenuItemActions from '../../menu/actions/MenuItemActions';\n// import { fetchRecipeList } from '../../menu/actions/RecipeListActions';\n// import { menuItemValidation } from '../../menu/actions/validation';\nimport { CombinedStore } from '../../app/Store';\nimport { Recipe } from '../store/RecipeTypes';\nimport { getRoutePath } from '../../common/utility';\nimport useCrash from '../../common/hooks/useCrash';\nimport CookingModeContextProvider from '../context/CookingModeContextProvider';\nimport CookingModeHandler from '../components/CookingModeHandler';\n\nconst RecipeContainer: React.FC = () => {\n  const dispatch = useDispatch();\n  const nav = useNavigate();\n  const params = useParams();\n  const crash = useCrash();\n\n  const paramsRecipe = params.recipe;\n  // Load Recipe\n  useEffect(() => {\n    if (paramsRecipe) {\n      dispatch(RecipeActions.load(paramsRecipe));\n      window.scrollTo(0, 0);\n    }\n  }, [paramsRecipe]);\n\n  const userId = useSelector((state: CombinedStore) => state.account.item?.id);\n  // TODO Lists\n  // const listsState   = useSelector((state: CombinedStore) => state.lists);\n  // const lists: listsState.items;\n  const recipeState = useSelector((state: CombinedStore) => state.recipe);\n  const recipe      = recipeState.item;\n  const recipeMeta  = recipeState.meta;\n  const prevRecipe  = useRef<Recipe | undefined>();\n\n  // const [showItemModal, setShowItemModal] = useState<boolean>(false);\n  const [isDeleting, setIsDeleting] = useState<boolean>(false);\n\n  // If recipe not found, redirect to NotFound-Page\n  useEffect(() => {\n    if (_.get(recipeMeta.error, 'status') === 404) {\n      nav(getRoutePath('/NotFound'));\n    }\n  }, [recipeMeta.error]);\n\n  const recipeSlug = params.recipe ?? '';\n  const showEditLink = (userId != null && userId === recipe?.author);\n\n  const handlePreloadRecipe = () => {\n    if (recipe == null) { crash('Invalid state: recipe may not be null'); return; }\n    dispatch(RecipeFormActions.preload(recipe));\n  };\n\n  // const menuItemSave = useCallback(() => { /* dispatch(MenuItemActions.save() */ }, [dispatch]);\n  const deleteRecipe = useCallback(() => {\n    setIsDeleting(true);\n    dispatch(RecipeActions.deleteRecipe(recipeSlug));\n  }, [dispatch]);\n\n  // Handle deletion\n  useEffect(() => {\n    if (prevRecipe.current == null) {\n      prevRecipe.current = recipe;\n    } else if (isDeleting && prevRecipe.current != null && recipe == null) {\n      nav(getRoutePath('/browser'));\n    }\n  }, [recipe]);\n\n  // componentWillUnmount\n  useEffect(() => () => {\n    dispatch(RecipeActions.reset());\n  }, []);\n\n  // TODO Lists\n  // const bulkAdd = useCallback((listId: number) => { /* RecipeActions.bulkAdd(recipe, listId) */ }, [dispatch]);\n  // const checkAllIngredients = useCallback(() => RecipeActions.checkAll(recipeSlug), [dispatch]);\n  // const uncheckAllIngredients = useCallback(() => RecipeActions.unCheckAll(recipeSlug), [dispatch]);\n\n  // const checkIngredient = useCallback((id: number, checked: boolean) => RecipeActions.checkIngredient(recipeSlug, id, checked), [dispatch]);\n  // const checkSubRecipe  = useCallback((id: number, checked: boolean) => RecipeActions.checkSubRecipe(recipeSlug, id, checked), [dispatch]);\n\n  const updateServings = useCallback((servings: number) => dispatch(RecipeActions.updateServings(recipeSlug, servings)), [dispatch]);\n\n  if (recipe != null) {\n    return (\n      <CookingModeContextProvider>\n        {/* TODO Lists\n        <MenuItemModal\n            id={0}\n            show={showItemModal}\n            onHide={() => setShowItemModal(false)}\n            recipe={recipe.id}\n            title={recipe.title}\n            onSave={menuItemSave}\n            fetchRecipeList={fetchRecipeList}\n            validation={menuItemValidation} /> */}\n        <RecipeScheme\n            recipe       = {recipe}\n            recipeMeta   = {recipeMeta}\n\n            showEditLink = {showEditLink}\n\n            onEditRecipe = {handlePreloadRecipe}\n            deleteRecipe = {deleteRecipe}\n\n            // lists={lists}\n            // onAddToMenuClick={() => setShowItemModal(true)}\n            // bulkAdd={bulkAdd}\n            // checkAllIngredients={checkAllIngredients}\n            // uncheckAllIngredients={uncheckAllIngredients}\n\n            // checkIngredient={checkIngredient}\n            // checkSubRecipe={checkSubRecipe}\n\n            updateServings = {updateServings} />\n        <CookingModeHandler />\n      </CookingModeContextProvider>\n    );\n  } else {\n    return (<Loading message='Loading' />);\n  }\n};\n\nexport default RecipeContainer;\n","import { useMemo } from 'react';\n\nimport { CombinedStore } from '../../app/Store';\nimport { useSelector } from '../../common/store/redux';\nimport Ratings from '../../rating/containers/Ratings';\nimport PageWrapper from '../../common/components/PageWrapper';\nimport RecipeFooter from '../components/RecipeFooter';\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport RecipeContainer from './RecipeContainer';\n\nconst RecipePage: React.FC = () => {\n  const recipeState  = useSelector((state: CombinedStore) => state.recipe);\n\n  const ratings = useMemo(() => <Ratings />, [recipeState.item?.id, recipeState.meta.pending]);\n  const footer  = useMemo(() => <RecipeFooter recipe={recipeState.item} />, [recipeState.item?.id, recipeState.item?.author]);\n\n  return (\n    <PageWrapper title={recipeState.item?.title}>\n      <RecipeContainer />\n      {recipeState.meta.pending === PendingState.COMPLETED && ratings}\n      {recipeState.meta.pending === PendingState.COMPLETED && footer}\n    </PageWrapper>\n  );\n};\n\nexport default RecipePage;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n\n  baseModalStyle.display = 'block';\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import * as React from 'react';\nimport { ENTERING, EXITING } from 'react-transition-group/Transition';\nimport Fade from './Fade';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'showing',\n  [EXITING]: 'showing show'\n};\nconst ToastFade = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(Fade, { ...props,\n  ref: ref,\n  transitionClasses: fadeStyles\n}));\nToastFade.displayName = 'ToastFade';\nexport default ToastFade;","import * as React from 'react';\nconst ToastContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onClose() {}\n\n});\nexport default ToastContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CloseButton from './CloseButton';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: true\n};\nconst ToastHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  closeLabel,\n  closeVariant,\n  closeButton,\n  className,\n  children,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast-header');\n  const context = useContext(ToastContext);\n  const handleClick = useEventCallback(e => {\n    context == null ? void 0 : context.onClose == null ? void 0 : context.onClose(e);\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    className: classNames(bsPrefix, className),\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick,\n      \"data-dismiss\": \"toast\"\n    })]\n  });\n});\nToastHeader.displayName = 'ToastHeader';\nToastHeader.defaultProps = defaultProps;\nexport default ToastHeader;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('toast-body');","import * as React from 'react';\nimport { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport ToastFade from './ToastFade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Toast = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  transition: Transition = ToastFade,\n  show = true,\n  animation = true,\n  delay = 5000,\n  autohide = false,\n  onClose,\n  bg,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast'); // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n\n  const delayRef = useRef(delay);\n  const onCloseRef = useRef(onClose);\n  useEffect(() => {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  const autohideTimeout = useTimeout();\n  const autohideToast = !!(autohide && show);\n  const autohideFunc = useCallback(() => {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(() => {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  const toastContext = useMemo(() => ({\n    onClose\n  }), [onClose]);\n  const hasAnimation = !!(Transition && animation);\n\n  const toast = /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(bsPrefix, className, bg && `bg-${bg}`, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  });\n\n  return /*#__PURE__*/_jsx(ToastContext.Provider, {\n    value: toastContext,\n    children: hasAnimation && Transition ? /*#__PURE__*/_jsx(Transition, {\n      in: show,\n      unmountOnExit: true,\n      children: toast\n    }) : toast\n  });\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});"],"names":["data","onOpenRecipe","IMAGE_PLACEHOLDER","useMemo","getRecipeImagePlaceholder","getRecipeImage","recipe","photoThumbnail","images","getResourcePath","Math","floor","random","length","recipes","map","link","getRoutePath","slug","Col","Card","className","classNames","to","onClick","variant","src","alt","placeholder","Tooltip","id","tooltip","title","placement","as","Ratings","stars","rating","info","Row","xs","sm","lg","loadMiniBrowse","filter","dispatch","toBasicAction","MINI_BROWSE_STORE","ACTION","request","get","serverURLs","then","res","payload","body","results","dto","toRecipeList","catch","err","handleError","buildUrlFilter","count","filters","searchParams","URLSearchParams","append","String","toString","heading","formatMessage","useIntl","messages","defineMessages","shuffleSuggestionsButton","description","defaultMessage","useDispatch","location","useLocation","params","useParams","miniBrowseItems","useSelector","state","browse","miniBrowse","items","differentMiniBrowseItems","itm","useEffect","MiniBrowseActions","Button","Icon","icon","ListRecipes","rec","RecipeActions","message","ModalHeaderCloseButton","onClose","rest","type","size","show","acceptTitle","closeTitle","onAccept","noCloseButton","acceptButtonProps","children","accept","close","handleClose","hasButton","backdrop","centered","onHide","keyboard","verbose","printStack","Star","num","onChange","handleClick","isHalfFilled","ConditionalWrapper","condition","render","childr","starss","starsList","Array","from","_","i","RatingTimestamp","intl","updateDate","Date","getTime","toLocaleString","locale","pubDate","recipeSlug","ratings","userId","pending","removeRating","no_comments","confirm_delete_message","useState","showDeleteConfirm","setShowDeleteConfirm","ratingsList","index","userName","handleDeleteClick","comment","beTheFirst","P","PendingState","CircularProgress","Modal","undefined","addRating","onAddRatingSuccess","new_rating_title","rating_placeholder","rating_label","rating_comment_placeholder","rating_comment_label","submit","initialValues","handleSubmit","form","newRating","onSubmit","subscription","renderSubmit","Form","ReFormStatus","onSubmitSuccess","name","validate","requiredValidator","validateFields","fprops","input","value","ReInput","rows","label","required","values","submitting","disabled","userRole","showNewRating","onShowNewRating","new_rating_button","UserRole","includes","setShowNewRating","add","RATING_STORE","post","send","author","toRating","handleFormError","RATINGS_STORE","account","item","ratingsState","recipeRating","useCallback","recSlug","RatingsActions","removeRatingCallback","ratingId","delete","ReduxHelper","ErrorBoundary","role","meta","getFilters","course","course__slug","cuisine","cuisine__slug","Object","keys","miniBrowseMeta","hasConnection","error","MiniBrowse","ImageViewerContent","nextSrc","Children","element","isValidElement","props","nextTitle","substring","lastIndexOf","download","href","style","openModal","setOpenModal","handleCloseModal","fullscreen","createContext","useWakeLock","onError","onRequest","onRelease","released","setReleased","wakeLock","useRef","isSupported","window","navigator","isWakeLockAlreadyDefined","current","console","warn","onrelease","e","release","isWakeLockUndefined","activate_cooking_mode_tooltip","deactivate_cooking_mode_tooltip","cookingModeContext","useContext","CookingModeContext","isCookingMode","cookingMode","setCookingMode","showEditLink","onEditRecipe","deleteRecipe","edit_tooltip","delete_tooltip","print_tooltip","recipe_comments","prep_time","cooking_time","minutes","source","created_by","last_updated","confirm_delete_title","confirm_delete_accept","editLink","deleteLink","hostname","match","a","document","createElement","printButton","print","optionButtons","chips","prepTime","cookTime","optionallyFormatMessage","toLocaleDateString","username","tags","t","photo","xl","WidthHeightRatio","height","width","Image","target","rel","recipeMeta","updateServings","ingredients","ingredients_for_servings","servings","servings_input_tooltip","customServings","hasNoIngredients","subrecipes","ingredientGroups","min","max","autoComplete","no_ingredients","Loading","SubRecipes","subRecipes","IngredientGroups","groups","hasSubrecipes","directionsString","directions","no_directions","hasNoData","trim","isMultiDirections","Directions","setIsCookingMode","updateCookingMode","active","hasDocument","vendorEvents","hidden","event","Boolean","addEventListener","visibility","find","getHandlerArgs","isSupportedLocal","initiallyVisible","isVisible","setIsVisible","currentlyVisible","removeEventListener","timer","activated_cooking_mode_toast","still_cooking_modal_title","still_cooking_modal_text","still_cooking_modal_yes","still_cooking_modal_no","showCookingModeToast","setShowCookingModeToast","askIfStillActive","setAskIfStillActive","isPageVisible","usePageVisibility","renewTimer","setTimeout","clearTimer","resetState","clearTimeout","Toast","autoHide","anchorOrigin","horizontal","vertical","autoClose","nav","useNavigate","crash","useCrash","paramsRecipe","scrollTo","recipeState","prevRecipe","isDeleting","setIsDeleting","RecipeFormActions","footer","PageWrapper","CardImg","React","ref","bsPrefix","Component","prefix","useBootstrapPrefix","_jsx","displayName","CardHeader","contextValue","cardHeaderBsPrefix","CardHeaderContext","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","defaultProps","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","scrollbarSize","recalc","canUseDOM","scrollDiv","position","top","overflow","appendChild","offsetWidth","clientWidth","removeChild","ModalDialog","contentClassName","scrollable","dialogClass","fullScreenClass","ModalHeader","AbstractModalHeader","closeLabel","closeButton","DivStyledAsH4","autoFocus","enforceFocus","restoreFocus","animation","dialogAs","DialogTransition","Fade","timeout","BackdropTransition","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","onEscapeKeyDown","onShow","container","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","propsManager","manager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","modal","setModalRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","dialog","useWillUnmount","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","currentTarget","handleStaticBackdropClick","renderBackdrop","backdropProps","baseModalStyle","display","ModalContext","BaseModal","preventDefault","isAppearing","transition","backdropTransition","renderDialog","dialogProps","onMouseUp","onMouseDown","ModalBody","ModalTitle","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","decoratedBsPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","Table","striped","bordered","borderless","hover","responsive","table","responsiveClass","fadeStyles","ENTERING","EXITING","ToastFade","transitionClasses","ToastHeader","closeVariant","context","ToastContext","_jsxs","CloseButton","Transition","delay","autohide","delayRef","onCloseRef","autohideTimeout","useTimeout","autohideToast","autohideFunc","set","toastContext","hasAnimation","toast","in","unmountOnExit","ToastBody"],"sourceRoot":""}