{"version":3,"file":"static/js/52.0eca1a6b.chunk.js","mappings":"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","sources":["browse/components/ListTags.tsx","browse/components/ListRecipes.tsx","browse/components/Loading.tsx","browse/constants/DefaultFilters.ts","browse/store/FilterActions.ts","browse/components/Filter.tsx","browse/components/SearchMenu.tsx","browse/containers/SearchMenuContainer.tsx","browse/components/SearchBar.tsx","browse/components/SearchSummary.tsx","browse/components/Search.tsx","browse/containers/BrowsePage.tsx","common/components/Pagination.tsx","browse/components/Pagination.tsx","browse/components/Results.tsx","browse/components/NoResults.tsx","browse/containers/SearchResults.tsx","browse/utilts/utility.ts","browse/store/SearchActions.ts","common/components/Button.tsx","common/components/PageWrapper.tsx","rating/components/Ratings.tsx","recipe/store/RecipeActions.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport '../css/list-tags.css';\n\nimport Icon from '../../common/components/Icon';\nimport { optionallyFormatMessage } from '../../common/utility';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport Chip from '../../common/components/Chip';\n\nexport interface IListTagsProps {\n  recipe: RecipeList;\n}\n\ntype renderTagType = {\n  tag: string;\n  icon: string;\n  variant: 'light' | 'filled';\n}\n\nconst RENDER_TAGS: Array<renderTagType> = [\n  {\n    tag: 'easy',\n    icon: 'bar-chart',\n    variant: 'light',\n  },\n  {\n    tag: 'vegetarian',\n    icon: 'tree',\n    variant: 'light',\n  },\n  {\n    tag: 'vegan',\n    icon: 'tree',\n    variant: 'filled',\n  },\n];\n\nconst ListTags: React.FC<IListTagsProps> = ({\n    recipe }: IListTagsProps) => {\n  const intl = useIntl();\n\n  const renderTagsJsx: Array<React.ReactElement> = useMemo(() => {\n    if (!recipe.oTags) return [];\n\n    const res: Array<React.ReactElement> = [];\n\n    const recipeTags = { ...recipe.oTags };\n    if (recipeTags.vegetarian && recipeTags.vegan) {\n      delete recipeTags.vegetarian;\n    }\n\n    RENDER_TAGS.forEach(t => {\n      if (recipeTags?.[t.tag]) {\n        res.push(\n          <Chip key={`${recipe.id}-${t.tag}`}>\n            <Icon icon={t.icon} variant={t.variant} />\n            {optionallyFormatMessage(intl, 'tag.', t.tag)}\n          </Chip>\n        );\n      }\n    });\n\n    return res;\n  }, [recipe.oTags, intl.locale]);\n\n  if (renderTagsJsx.length === 0) return null;\n\n  return (\n    <div className='tags-list'>\n      {renderTagsJsx}\n    </div>\n  );\n};\n\nexport default ListTags;\n","import { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport '../css/list-recipes.css';\n\nimport ListTags from './ListTags';\nimport Ratings from '../../rating/components/Ratings';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport { getRecipeImagePlaceholder, getResourcePath, getRoutePath } from '../../common/utility';\nimport Tooltip from '../../common/components/Tooltip';\n\nexport interface IListRecipes {\n  data:   Array<RecipeList> | undefined;\n  lg?:    3 | 4;\n  onOpenRecipe: (rec: RecipeList) => void;\n}\n\nfunction hashCode(str: string): number {\n  // Code by Barak (https://stackoverflow.com/a/8831937).\n\n  let hash = 0;\n  for (let i = 0; i < str.length; ++i) {\n    const char = str.charCodeAt(i);\n    // eslint-disable-next-line no-bitwise\n    hash = ((hash << 5) - hash) + char;\n    // eslint-disable-next-line no-bitwise\n    hash &= hash;\n  }\n\n  return hash;\n}\n\nfunction getRecipeImage(recipe: RecipeList) {\n  if (recipe.photoThumbnail) {\n    return recipe.photoThumbnail ?? getRecipeImagePlaceholder();\n  } else {\n    const images = ['fish', 'fried-eggs', 'pizza', 'soup', 'steak'];\n    const recipeImageHash = Math.abs(hashCode(recipe.title));\n    return getResourcePath(`/images/${images[recipeImageHash % 5]}.jpg`);\n  }\n}\n\nconst ListRecipes: React.FC<IListRecipes> = ({ data, lg = 4, onOpenRecipe }: IListRecipes) => {\n  const IMAGE_PLACEHOLDER = useMemo(() => getRecipeImagePlaceholder(), []);\n  const PLACEHOLDER_STYLE = useMemo(() => ({ background: `url(${IMAGE_PLACEHOLDER}) 100% center / cover` }), [IMAGE_PLACEHOLDER]);\n\n  const recipes = data?.map(recipe => {\n    const link = getRoutePath(`/recipe/${recipe.slug}`);\n    return (\n      <Col key={recipe.id}>\n        <Card className={classNames('recipe')}>\n          <Link to={link} onClick={() => onOpenRecipe(recipe)}>\n            <Card.Img variant='top' src={getRecipeImage(recipe)} alt='' style={PLACEHOLDER_STYLE} />\n            <Ratings stars={recipe.rating} count={recipe.ratingCount} collapsed />\n            <Card.Title as='h3'><Tooltip id={recipe.slug} tooltip={recipe.title} placement='bottom' className='card-title-tooltip'>{recipe.title}</Tooltip></Card.Title>\n            {recipe.oTags && <ListTags recipe={recipe} />}\n            <Card.Text>{recipe.info}</Card.Text>\n          </Link>\n        </Card>\n      </Col>\n    );\n  });\n\n  return (\n    <Row xs={1} sm={2} lg={lg} className='g-3 recipes-list'>\n      {recipes}\n    </Row>\n  );\n};\n\nexport default ListRecipes;\n","import { Col, Row } from 'react-bootstrap';\n\nimport CircularProgress from '../../common/components/CircularProgress';\n\nconst Loading: React.FC = () => (\n  <Row>\n    <Col xs={12}>\n      <Row id='browse'>\n        <div className='spinner'>\n          <CircularProgress />\n        </div>\n      </Row>\n    </Col>\n  </Row>\n);\n\nexport default Loading;\n","export interface PaginationProps {\n  limit:  number;\n  offset: number;\n  count:  number;\n}\n\nexport interface DefaultFilterProps extends PaginationProps {\n  ordering: string;\n}\n\nconst defaultFilters: Partial<DefaultFilterProps> = {\n  limit: 12,\n  ordering: '-pub_date',\n};\n\nexport default defaultFilters;\n","import * as _ from 'lodash-es';\n\nimport request from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { handleError } from '../../common/requestUtils';\nimport { objToSearchString } from '../../common/utility';\nimport { toBasicAction } from '../../common/store/redux';\nimport { BROWSE_FILTER_COURSE_STORE, BROWSE_FILTER_CUISINE_STORE, BROWSE_FILTER_RATING_STORE, BROWSE_FILTER_TAGS_STORE, FilterDispatch } from './FilterTypes';\nimport { extractSearchStringToFields } from './SearchActions';\n\nconst parsedFilter = (filters: Record<string, string>): Record<string, string> => {\n  let parsedFilters: Record<string, string> = _.omit(filters, ['limit', 'offset', 'ordering']);\n  parsedFilters = extractSearchStringToFields(parsedFilters);\n  return parsedFilters;\n};\n\nexport const loadCourses = (filters: Record<string, string>) => (dispatch: FilterDispatch) => {\n  dispatch({ ...toBasicAction(BROWSE_FILTER_COURSE_STORE, ACTION.LOADING) });\n\n  request()\n    .get(serverURLs.course_count)\n    .query(parsedFilter(filters))\n    .then(res => (\n      dispatch({\n        ...toBasicAction(\n          BROWSE_FILTER_COURSE_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filters),\n        payload: res.body.results,\n      })\n    ))\n    .catch(err => dispatch(handleError(err, BROWSE_FILTER_COURSE_STORE)));\n};\n\nexport const loadCuisines = (filters: Record<string, string>) => (dispatch: FilterDispatch) => {\n  dispatch({ ...toBasicAction(BROWSE_FILTER_CUISINE_STORE, ACTION.LOADING) });\n\n  request()\n    .get(serverURLs.cuisine_count)\n    .query(parsedFilter(filters))\n    .then(res => (\n      dispatch({\n        ...toBasicAction(\n          BROWSE_FILTER_CUISINE_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filters),\n        payload: res.body.results,\n      })\n    ))\n    .catch(err => dispatch(handleError(err, BROWSE_FILTER_CUISINE_STORE)));\n};\n\nexport const loadRatings = (filter: Record<string, string>) => (dispatch: FilterDispatch) => {\n  dispatch({ ...toBasicAction(BROWSE_FILTER_RATING_STORE, ACTION.LOADING) });\n\n  request()\n    .get(serverURLs.rating_count)\n    .query(parsedFilter(filter))\n    .then(res => (\n      dispatch({\n        ...toBasicAction(\n          BROWSE_FILTER_RATING_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filter),\n        payload: res.body.results,\n      })\n    ))\n    .catch(err => dispatch(handleError(err, BROWSE_FILTER_RATING_STORE)));\n};\n\nexport const loadTags = (filters: Record<string, string>) => (dispatch: FilterDispatch) => {\n  dispatch({ ...toBasicAction(BROWSE_FILTER_TAGS_STORE, ACTION.LOADING) });\n\n  request()\n    .get(serverURLs.tag_count)\n    .query(parsedFilter(filters))\n    .then(res => (\n      dispatch({\n        ...toBasicAction(\n          BROWSE_FILTER_TAGS_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filters),\n        payload: res.body.results,\n      })\n    ))\n    .catch(err => {\n      // Older backend versions may not support this action.\n      if (err.status === 404) {\n        dispatch({\n          ...toBasicAction(\n            BROWSE_FILTER_TAGS_STORE,\n            ACTION.GET_SUCCESS\n          ),\n          id: objToSearchString(filters),\n          payload: [],\n        });\n      } else {\n        dispatch(handleError(err, BROWSE_FILTER_TAGS_STORE));\n      }\n    });\n};\n","import { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Accordion } from 'react-bootstrap';\n\nimport Icon from '../../common/components/Icon';\nimport { optionallyFormatMessage, sortByLabel } from '../../common/utility';\nimport Tooltip from '../../common/components/Tooltip';\nimport ConditionalWrapper from '../../common/components/ConditionalWrapper';\n\nconst messages = defineMessages({\n  filter_active: {\n    id: 'filter.active',\n    description: 'Hint for ScreenReader that the filter is active',\n    defaultMessage: 'active',\n  },\n});\n\nexport interface RecipeFilter {\n  id:      number;\n  title:   string;\n  slug:    string;\n  total?:  number;\n  rating?: number;\n}\n\nexport interface IFilterProps {\n  title:   string;\n  qsTitle: string;\n  qs:      Record<string, string>;\n  data:    Array<RecipeFilter> | undefined;\n  multiSelect?: boolean;\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n\n  sort?: 'off' | 'on';\n\n  cssClass?: string;\n}\n\ninterface EnhancedFilterData extends RecipeFilter {\n  label: string;\n  active: boolean;\n}\n\nconst Filter: React.FC<IFilterProps> = ({ title, qsTitle, data, qs, multiSelect, cssClass, buildUrl, sort }: IFilterProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const dataFormatted: Array<EnhancedFilterData> = useMemo(() => {\n    let res = (data\n      ?.map(item => {\n          let active = false;\n          if (qs[qsTitle]) {\n            if (qs[qsTitle].split(',').includes(item.slug)) {\n              active = true;\n            }\n          }\n\n          if (!active && (item.total == null || item.total === 0)) {\n            return undefined as unknown as EnhancedFilterData;\n          }\n\n          return ({\n            ...item,\n            label: optionallyFormatMessage(intl, `${qsTitle}.`, item.title),\n            active: active,\n          });\n        }) ?? [])\n      .filter(item => item != null);\n\n    if (sort == null || sort === 'on') {\n      res = res.sort(sortByLabel);\n    }\n\n    return res;\n  }, [data, qs, qsTitle]);\n\n  const items = useMemo(() => (\n    dataFormatted\n    .map(item => (\n      <li key={item.slug}>\n        <ConditionalWrapper\n            condition = {item.label.length > 10}\n            render = {childr => <Tooltip id={item.title} tooltip={item.label} placement='bottom' className='filter-title-tooltip'>{childr}</Tooltip>}>\n          <Link to={buildUrl(qsTitle, item.slug, multiSelect)} className={classNames('list-group-item list-group-item-action', { active: item.active })}>\n            <span className='name'>{item.label}</span>\n            <span className='count'>{`(${item.total})`}</span>\n            {item.active && <Icon icon='x-square' variant='light' aria-hidden='true' />}\n            <span className='sr-only'>{formatMessage(messages.filter_active)}</span>\n          </Link>\n        </ConditionalWrapper>\n      </li>\n    )) ?? []\n  ), [dataFormatted, qsTitle, multiSelect, buildUrl]);\n\n  if (data != null && items.length === 0) return null;\n\n  return (\n    <Accordion.Item eventKey={qsTitle} className={classNames('filter-group', cssClass)}>\n      <Accordion.Header as='h3' className='list-group-title'>{title}</Accordion.Header>\n      <Accordion.Body as='ul' className='filter-list'>\n        {items}\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n};\n\nexport default Filter;\n","import { useCallback, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Accordion, Button, Card } from 'react-bootstrap';\n\nimport '../css/filter.css';\n\nimport Filter from './Filter';\nimport Icon from '../../common/components/Icon';\nimport P from '../../common/components/P';\nimport { CategoryCount, RatingCount } from '../store/FilterTypes';\n\nconst messages = defineMessages({\n  reset: {\n    id: 'filter.reset',\n    description: 'Filter reset',\n    defaultMessage: 'Reset',\n  },\n  filter_course: {\n    id: 'filter.filter_course',\n    description: 'Filter field course',\n    defaultMessage: 'Courses',\n  },\n  filter_cuisine: {\n    id: 'filter.filter_cuisine',\n    description: 'Filter field cuisine',\n    defaultMessage: 'Cuisines',\n  },\n  filter_rating: {\n    id: 'filter.filter_rating',\n    description: 'Filter field rating',\n    defaultMessage: 'Ratings',\n  },\n  filter_tag: {\n    id: 'filter.filter_tag',\n    description: 'Filter field tag',\n    defaultMessage: 'Tags',\n  },\n  title: {\n    id: 'filter.title',\n    description: 'Title',\n    defaultMessage: 'Title',\n  },\n  rating: {\n    id: 'filter.rating',\n    description: 'rating',\n    defaultMessage: 'Rating',\n  },\n  pub_date: {\n    id: 'filter.pub_date',\n    description: 'pub_date',\n    defaultMessage: 'Created Date',\n  },\n  filters: {\n    id: 'filter.filters',\n    description: 'Filters',\n    defaultMessage: 'Filters',\n  },\n  show_filters: {\n    id: 'filter.show_filters',\n    description: 'Show Filters',\n    defaultMessage: 'Show Filters',\n  },\n  hide_filters: {\n    id: 'filter.hide_filters',\n    description: 'Hide Filters',\n    defaultMessage: 'Hide Filters',\n  },\n  reset_filters: {\n    id: 'filter.reset_filters',\n    description: 'Reset Filters',\n    defaultMessage: 'Reset Filters',\n  },\n  filter_ordering: {\n    id: 'filter.filter_ordering',\n    description: 'Filter field ordering',\n    defaultMessage: 'Ordering',\n  },\n  x_stars: {\n    id: 'filter.x_stars',\n    description: 'X Stars',\n    defaultMessage: '{rating, number} stars',\n  },\n  tips_advanced: {\n    id: 'filter.tips_advanced',\n    description: 'Advanced tips for filtering',\n    defaultMessage: 'Looking for more filters? Enter \"author:your-username\" in the search to find only your recipes.',\n  },\n});\n\nexport interface ISearchMenuProps {\n  qs: Record<string, string>;\n  courses:  Array<CategoryCount> | undefined;\n  cuisines: Array<CategoryCount> | undefined;\n  ratings:  Array<RatingCount>   | undefined;\n  tags:     Array<CategoryCount> | undefined;\n\n  hasActiveFilter: boolean;\n  resetFilterUrl: string;\n  openFilters: Array<string>;\n  setOpenFilters: (filters: Array<string>) => void;\n\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\nconst SearchMenu: React.FC<ISearchMenuProps> = ({\n    qs, courses, cuisines, ratings, tags,\n    hasActiveFilter, resetFilterUrl, openFilters, setOpenFilters,\n    buildUrl }: ISearchMenuProps) => {\n  const { formatMessage } = useIntl();\n\n  const [showMenu, setShowMenu] = useState<boolean>(false);\n\n  const toggleMenu = useCallback(() => {\n    setShowMenu(prev => !prev);\n  }, []);\n\n  const mobileHeader = (\n    <div className='sidebar-header'>\n      <h2>\n        <Button type='button' variant='transparent' className='filter-header' onClick={toggleMenu}>\n          {showMenu ? formatMessage(messages.hide_filters) : formatMessage(messages.show_filters)}\n          <Icon icon={showMenu ? 'chevron-up' : 'chevron-down'} variant='light' className={classNames({ 'reset-margin': hasActiveFilter })} />\n        </Button>\n      </h2>\n      {hasActiveFilter && (\n        <div className='filter-header-clear'>\n          <Link className='clear-filter-mobile btn btn-transparent' to={resetFilterUrl}>\n            {formatMessage(messages.reset)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n\n  const handleSelect = useCallback((eventKey: string | string[] | null) => {\n    const newOpenFilters: Array<string> = Array.isArray(eventKey) ? eventKey : [(eventKey ?? '')];\n    setOpenFilters(newOpenFilters);\n  }, []);\n\n  return (\n    <Card>\n      <Card.Header className='visible-xs'>\n        {mobileHeader}\n      </Card.Header>\n      <Card.Header className='hidden-xs filter-title'>\n        <h2>{formatMessage(messages.filters)}</h2>\n        {hasActiveFilter && (\n          <Link className='clear-filter-desktop btn btn-transparent' to={resetFilterUrl} aria-label={formatMessage(messages.reset_filters)}>\n            <Icon icon='arrow-counterclockwise' variant='light' />\n          </Link>\n        )}\n      </Card.Header>\n      <Card.Text as='div' className={classNames('sidebar', { 'hidden-xs': !showMenu })}>\n        <Accordion activeKey={openFilters} flush alwaysOpen className='filter-group-list' onSelect={handleSelect as any}>\n          <Filter\n              title    = {formatMessage(messages.filter_course)}\n              qsTitle  = 'course'\n              data     = {courses}\n              qs       = {qs}\n              multiSelect\n              buildUrl = {buildUrl} />\n          <Filter\n              title    = {formatMessage(messages.filter_cuisine)}\n              qsTitle  = 'cuisine'\n              data     = {cuisines}\n              qs       = {qs}\n              multiSelect\n              buildUrl = {buildUrl} />\n          <Filter\n              title    = {formatMessage(messages.filter_rating)}\n              qsTitle  = 'rating'\n              data     = {ratings?.map(r => ({\n                  id:     r.rating,\n                  rating: r.rating,\n                  total:  r.total,\n                  slug:   r.rating.toString(),\n                  title:  formatMessage(messages.x_stars, { rating: r.rating }),\n              }))}\n              qs       = {qs}\n              multiSelect\n              buildUrl = {buildUrl}\n              sort = 'off' />\n          <Filter\n              title    = {formatMessage(messages.filter_tag)}\n              qsTitle  = 'tag'\n              data     = {tags}\n              qs       = {qs}\n              multiSelect\n              buildUrl = {buildUrl} />\n        </Accordion>\n        {hasActiveFilter && (\n          <div className='row reset-search-row print-hidden hidden-xs'>\n            <Link className='btn btn-outline-danger reset-search hidden-xs' to={resetFilterUrl}>\n              {formatMessage(messages.reset)}\n            </Link>\n          </div>\n        )}\n\n        <P variant='body2' className='filters-tip'>\n          <Icon icon='lightbulb' style={{ color: 'var(--secondaryMain)' }} />\n          {formatMessage(messages.tips_advanced)}\n        </P>\n      </Card.Text>\n    </Card>\n  );\n};\n\nexport default SearchMenu;\n","import { useEffect, useMemo, useState } from 'react';\nimport { Dispatch } from 'redux';\n\nimport * as FilterActions from '../store/FilterActions';\nimport { RootState } from '../../app/Store';\nimport SearchMenu from '../components/SearchMenu';\nimport { getRoutePath } from '../../common/utility';\nimport { useDispatch, useSelector } from '../../common/store/redux';\n\nexport interface ISearchMenuContainerProps {\n  qs:       Record<string, string>;\n  qsString: string;\n\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\nconst SearchMenuContainer: React.FC<ISearchMenuContainerProps> = ({\n    qs, qsString, buildUrl }: ISearchMenuContainerProps) => {\n  const dispatch = useDispatch();\n\n  const courses  = useSelector((state: RootState) => state.browse.browserFilter.courses.items);\n  const cuisines = useSelector((state: RootState) => state.browse.browserFilter.cuisines.items);\n  const ratings  = useSelector((state: RootState) => state.browse.browserFilter.ratings.items);\n  const tags     = useSelector((state: RootState) => state.browse.browserFilter.tags.items);\n\n  const [openFilters, setOpenFilters] = useState<Array<string>>(Object.keys(qs));\n\n  const qsMergedDefaults = qs;\n\n  const reloadData = () => {\n    const dispatchQueue: Array<(dispatch: Dispatch) => void> = [];\n\n    if (openFilters.includes('course') && courses?.[qsString] == null) {\n      dispatchQueue.push(FilterActions.loadCourses(qsMergedDefaults));\n    }\n    if (openFilters.includes('cuisine') && cuisines?.[qsString] == null) {\n      dispatchQueue.push(FilterActions.loadCuisines(qsMergedDefaults));\n    }\n    if (openFilters.includes('rating') && ratings?.[qsString] == null) {\n      dispatchQueue.push(FilterActions.loadRatings(qsMergedDefaults));\n    }\n    if (openFilters.includes('tag') && tags?.[qsString] == null) {\n      dispatchQueue.push(FilterActions.loadTags(qsMergedDefaults));\n    }\n\n    let delay = 0;\n    const ADD_DELAY = 50;\n    for (let ix = 0; ix < dispatchQueue.length; ++ix) {\n      setTimeout(() => {\n        dispatch(dispatchQueue[ix]);\n      }, delay);\n      delay += ADD_DELAY;\n    }\n  };\n\n  useEffect(() => {\n    reloadData();\n  }, [qsString, openFilters]);\n\n  const resetFilterUrl = useMemo(() => {\n    if (!qs.search) {\n      return getRoutePath('/browser');\n    } else {\n      const searchString = new URLSearchParams({ search: qs.search }).toString();\n      return getRoutePath(`/browser?${searchString}`);\n    }\n  }, [qs]);\n\n  const hasActiveFilter = Object.keys(qs).filter(key => !['limit', 'ordering', 'offset', 'search'].includes(key)).length !== 0;\n\n  return (\n    <SearchMenu\n        courses  = {courses?.[qsString]}\n        cuisines = {cuisines?.[qsString]}\n        ratings  = {ratings?.[qsString]}\n        tags     = {tags?.[qsString]}\n        qs       = {qs}\n\n        hasActiveFilter = {hasActiveFilter}\n        resetFilterUrl  = {resetFilterUrl}\n        openFilters    = {openFilters}\n        setOpenFilters = {setOpenFilters}\n\n        buildUrl = {buildUrl} />\n  );\n};\n\nexport default SearchMenuContainer;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport * as _ from 'lodash-es';\n\nimport Button from '../../common/components/Button';\nimport Icon from '../../common/components/Icon';\nimport Input from '../../common/components/Input/Input';\nimport InputAdornment from '../../common/components/Input/InputAdornment';\n\nconst messages = defineMessages({\n  search_title: {\n    id: 'searchbar.title',\n    description: 'Heading for the search page',\n    defaultMessage: 'Search',\n  },\n  input_placeholder: {\n    id: 'searchbar.placeholder',\n    description: 'SearchBar input placeholder',\n    defaultMessage: 'Enter a title, tag, or ingredient',\n  },\n  input_clear: {\n    id: 'input.clear',\n    description: 'Button to clear the input value (text)',\n    defaultMessage: 'Clear input',\n  },\n});\n\nexport interface ISearchBarProps {\n  value:  string;\n  doSearch: (value: string) => void;\n}\n\ninterface IFormData {\n  value: string;\n}\n\nconst SearchBar: React.FC<ISearchBarProps> = ({ value, doSearch }: ISearchBarProps) => {\n  const { formatMessage } = useIntl();\n\n  const [formData, setFormData] = useState<IFormData>({ value: value ?? '' });\n  const previousSearch = useRef<string>(value ?? '');\n\n  useEffect(() => {\n    if (formData.value !== value) {\n      setFormData({ value: value });\n    }\n  }, [value]);\n\n  useEffect(() => {\n    if (previousSearch.current !== formData.value) {\n      doSearch(formData.value);\n      previousSearch.current = formData.value;\n    }\n  }, [formData]);\n\n  const handleChange = useCallback((attr: string, val: string) => {\n    setFormData(prev => {\n      const newState = _.cloneDeep(prev);\n      _.set(newState, attr, val);\n      return newState;\n    });\n  }, []);\n\n  const handleClearInput = useCallback(() => {\n    setFormData({ value: '' });\n  }, []);\n\n  const clearInput = (\n    <InputAdornment position='end'>\n      <Button id='clear_search_input' variant='secondary' className='search-clear' onClick={handleClearInput} aria-label={formatMessage(messages.input_clear)}>\n        <Icon icon='x' variant='light' size='2x' />\n      </Button>\n    </InputAdornment>\n  );\n\n  return (\n    <>\n      <h1 className='sr-only'>{formatMessage(messages.search_title)}</h1>\n      <Input\n          name  = 'value'\n          value = {formData.value}\n          placeholder = {formatMessage(messages.input_placeholder)}\n          required\n          inputAdornmentStart = {<Icon icon='search' variant='light' />}\n          inputAdornmentEnd = {formData.value.length > 0 ? clearInput : undefined}\n          onChange = {handleChange}\n          debounceTimeout = {400}\n          className = 'search-bar' />\n    </>\n  );\n};\n\nexport default SearchBar;\n","import { useCallback } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { SearchResult } from '../store/SearchTypes';\nimport P from '../../common/components/P';\nimport DefaultFilters from '../constants/DefaultFilters';\nimport { optionallyFormatMessage, toNumberDefault } from '../../common/utility';\n\nconst messages = defineMessages({\n  search_summary_results: {\n    id: 'searchsummary.results',\n    description: 'Number of results, if there is no pagination.',\n    defaultMessage: '{resultsCount, plural, one {# result} other {# results}}',\n  },\n  search_summary_results_pagination: {\n    id: 'searchsummary.results_pagination',\n    description: 'Number of results, with pagination from - to.',\n    defaultMessage: '{offset}-{offsetLast} of {resultsCount} results',\n  },\n  search_summary_sort_by: {\n    id: 'searchsummary.sort_by',\n    description: 'Sort by title/...',\n    defaultMessage: 'Sort by: {sort}',\n  },\n\n  sort_by_pub_date: {\n    id: 'sort_by.pub_date',\n    defaultMessage: 'Create date',\n  },\n  sort_by_rating: {\n    id: 'sort_by.rating',\n    defaultMessage: 'Rating',\n  },\n  sort_by_title: {\n    id: 'sort_by.title',\n    defaultMessage: 'Title',\n  },\n});\n\nexport interface ISearchSummaryProps {\n  search:   SearchResult | undefined;\n  qs:       Record<string, string>;\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\nfunction toSortSlug(sort: string): string {\n  return sort.startsWith('-') ? sort.substring(1) : sort;\n}\n\nconst SearchSummary: React.FC<ISearchSummaryProps> = ({ search, qs, buildUrl }: ISearchSummaryProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const resultsCountD: number | undefined = search?.totalRecipes ?? 0;\n  const offset: number = toNumberDefault(qs.offset, 0);\n  const limit: number  = toNumberDefault(qs.limit, DefaultFilters.limit ?? 12);\n  const withPagination = search != null && search.totalRecipes > limit;\n  const currentSort    = qs.ordering != null ? toSortSlug(qs.ordering) : toSortSlug('-pub_date');\n\n  const handleSortByClick = useCallback((event: React.MouseEvent<HTMLAnchorElement>, sortSlug: string) => {\n    if (currentSort === sortSlug) {\n      event.preventDefault();\n    }\n  }, [currentSort]);\n\n  const dropdownItems = ['title', '-pub_date', '-rating'].map(sort => {\n    const sortSlug = toSortSlug(sort);\n    return (\n      <Dropdown.Item key={sort} as={Link} to={buildUrl('ordering', sort)} active={currentSort === sortSlug} onClick={(event: React.MouseEvent<HTMLAnchorElement>) => handleSortByClick(event, sortSlug)}>\n        {optionallyFormatMessage(intl, 'sort_by.', sortSlug)}\n      </Dropdown.Item>\n    );\n  });\n\n  return (\n    <div className='search-summary'>\n      <P className='results'>\n        {withPagination  && formatMessage(messages.search_summary_results_pagination, { offset: offset + 1, offsetLast: Math.min(offset + limit, resultsCountD), resultsCount: resultsCountD })}\n        {!withPagination && formatMessage(messages.search_summary_results, { resultsCount: resultsCountD })}\n      </P>\n      <Dropdown className='sort-by-dropdown'>\n        <Dropdown.Toggle variant='outline-primary' id='sort-by-button' disabled={search == null}>\n          {formatMessage(messages.search_summary_sort_by, { sort: optionallyFormatMessage(intl, 'sort_by.', currentSort) })}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {dropdownItems}\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default SearchSummary;\n","import { Col, Row } from 'react-bootstrap';\n\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport { SearchResult } from '../store/SearchTypes';\nimport SearchResults from '../containers/SearchResults';\nimport SearchMenuContainer from '../containers/SearchMenuContainer';\nimport SearchBar from './SearchBar';\nimport Loading from './Loading';\nimport SearchSummary from './SearchSummary';\n\nexport interface ISearchProps {\n  search:   Record<string, SearchResult> | undefined;\n  qs:       Record<string, string>;\n  qsString: string;\n\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n  doSearch: (value: string) => void;\n  onOpenRecipe: (rec: RecipeList) => void;\n}\n\nconst Search: React.FC<ISearchProps> = ({\n    search, qs, qsString,\n    buildUrl, doSearch, onOpenRecipe }: ISearchProps) => {\n  const isInit  = search != null && Object.keys(search).length > 0;\n  const qsSearchResult = search?.[qsString];\n\n  return (\n    <>\n      <SearchBar\n          value    = {qs.search ?? ''}\n          doSearch = {doSearch} />\n      <SearchSummary\n          qs       = {qs}\n          search   = {qsSearchResult}\n          buildUrl = {buildUrl}\n          />\n      {!isInit && (\n        <Loading />\n      )}\n      {isInit && (\n        <Row>\n          <Col xs={12} className='filter-panel'>\n            <SearchMenuContainer\n                qs       = {qs}\n                qsString = {qsString}\n                buildUrl = {buildUrl}\n            />\n          </Col>\n          <Col xs={12} className='results-panel'>\n            <SearchResults\n                qs       = {qs}\n                qsString = {qsString}\n                buildUrl = {buildUrl}\n                onOpenRecipe = {onOpenRecipe}\n            />\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default Search;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useNavigate } from 'react-router';\nimport { useSearchParams } from 'react-router-dom';\nimport * as _ from 'lodash-es';\n\nimport '../css/browse.css';\n\nimport Search from '../components/Search';\nimport * as SearchActions from '../store/SearchActions';\nimport * as RecipeActions from '../../recipe/store/RecipeActions';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport DefaultFilters from '../constants/DefaultFilters';\nimport PageWrapper from '../../common/components/PageWrapper';\nimport { RootState } from '../../app/Store';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport { getRoutePath, objToSearchString } from '../../common/utility';\n\nexport function mergeDefaultFilters(\n    defaultFilters: Record<string, unknown>,\n    params: Record<string, string>\n  ): Record<string, string> {\n  const filterS: Record<string, string> = {};\n  Object.keys(defaultFilters).forEach(key => {\n    filterS[key] = String(defaultFilters[key]);\n  });\n\n  return _.merge(filterS, params);\n}\n\nexport function buildSearchString(route: string, qs: Record<string, string>, value: string): string {\n  const qsBuilder = _.cloneDeep(qs);\n\n  delete qsBuilder.offset;\n  if (value !== '') {\n    qsBuilder.search = value;\n  } else {\n    delete qsBuilder.search;\n  }\n\n  const str = objToSearchString(qsBuilder);\n  return getRoutePath(str ? `/${route}?${str}` : `/${route}`);\n}\n\nexport function buildSearchUrl(route: string, qs: Record<string, string>, name: string, value: string, multiSelect = false): string {\n  if (!name) return getRoutePath(`/${route}`);\n\n  const qsBuilder = _.cloneDeep(qs);\n\n  delete qsBuilder.offset;\n\n  if (value !== '') {\n    if (qsBuilder[name] && multiSelect) {\n      const query = qsBuilder[name].split(',');\n      if (query.includes(value.toString())) {\n        if (query.length === 1) {\n          delete qsBuilder[name];\n        } else {\n          let str = '';\n          // eslint-disable-next-line\n          query.map(val => { val != value ? str += val + ',' : ''});\n          qsBuilder[name] = str.substring(0, str.length - 1);\n        }\n      } else {\n        qsBuilder[name] = `${qsBuilder[name]},${value}`;\n      }\n    } else {\n      qsBuilder[name] = value;\n    }\n  } else {\n    delete qsBuilder[name];\n  }\n\n  const str = objToSearchString(qsBuilder);\n  return getRoutePath(str ? `/${route}?${str}` : `/${route}`);\n}\n\nconst BrowsePage: React.FC = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const nav = useNavigate();\n  const [searchParams] = useSearchParams();\n\n  const search   = useSelector((state: RootState) => state.browse.browserSearch.items);\n\n  const qs = useMemo(() => Object.fromEntries(searchParams), [searchParams]);\n  const qsMergedDefaults = useMemo(() => mergeDefaultFilters(DefaultFilters, qs), [DefaultFilters, qs]);\n  const qsMergedString = useMemo(() => objToSearchString(qsMergedDefaults), [qsMergedDefaults]);\n\n  useEffect(() => {\n    dispatch(SearchActions.loadRecipes(qsMergedDefaults));\n  }, [searchParams]);\n\n  const handleBuildUrl = useCallback((name: string, value: string, multiSelect = false) => (\n    buildSearchUrl('browser', qs, name, value, multiSelect)\n  ), [buildSearchUrl, qs]);\n\n  const doSearch = useCallback((value: string) => {\n    const str = buildSearchString('browser', qs, value);\n    nav(str);\n  }, [buildSearchString, qs, nav]);\n\n  const handleOpenRecipe = useCallback((rec: RecipeList) => {\n    dispatch(RecipeActions.preload(rec));\n  }, []);\n\n  return (\n    <PageWrapper title={intl.messages['nav.recipes'] as string}>\n      <Search\n          qs        = {qsMergedDefaults}\n          qsString  = {qsMergedString}\n          buildUrl  = {handleBuildUrl}\n          doSearch  = {doSearch}\n          onOpenRecipe = {handleOpenRecipe}\n\n          search    = {search} />\n    </PageWrapper>\n  );\n};\n\nexport default BrowsePage;\n","import { forwardRef, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport '../css/pagination.css';\n\nimport { CommonProps } from '../types/OverridableComponent';\n\nexport interface IPaginationLinkProps extends CommonProps {\n  title:     string;\n  offset:    number;\n  active?:   boolean;\n  disabled?: boolean;\n  buildUrl:  (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\nexport const PaginationLink = forwardRef<HTMLLIElement, IPaginationLinkProps>(({\n    title, offset, active, buildUrl, disabled,\n    className, ...rest }: IPaginationLinkProps, ref) => {\n  const handleClick = useCallback((event: React.MouseEvent<HTMLAnchorElement>) => {\n    if (active || disabled) {\n      event.preventDefault();\n    }\n  }, [active, disabled]);\n\n  return (\n    <li className={classNames('page-item', className, { active: active, disabled: disabled })} {...rest} ref={ref}>\n      {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n      <Link className={classNames('page-link', 'btn-outline-primary', { active: active, disabled: disabled })} to={!disabled ? buildUrl('offset', offset.toString()) : '#'} onClick={handleClick}>\n        {title}\n      </Link>\n    </li>\n  );\n});\n","import { useMemo } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Pagination as BootstraPagination } from 'react-bootstrap';\n\nimport { PaginationLink } from '../../common/components/Pagination';\n\nconst messages = defineMessages({\n  pagination_previous: {\n    id: 'pagination.previous',\n    description: 'Button to previous pagination page',\n    defaultMessage: 'Previous',\n  },\n  pagination_next: {\n    id: 'pagination.next',\n    description: 'Button to next pagination page',\n    defaultMessage: 'Next',\n  },\n});\n\nexport interface IPaginationProps {\n  offset:   number;\n  limit:    number;\n  count:    number;\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\ninterface IPaginationNumbersListProps {\n  offset: number;\n  limit:  number;\n  count:  number;\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\ntype PaginationPageRole = 'first' | 'last' | 'page' | 'next' | 'skipper-far' | 'skipper-near';\n\ntype PaginationPageNumber = {\n  index: number;\n  role:  PaginationPageRole;\n}\n\nfunction getFakeRollForFiller(numOfGeneratedLinks: number): PaginationPageRole {\n  if (numOfGeneratedLinks < 4) {\n    return 'next';\n  } else if (numOfGeneratedLinks < 6) {\n    return 'skipper-near';\n  } else {\n    return 'skipper-far';\n  }\n}\n\nfunction generatePageList(page: number, pages: number): Array<PaginationPageNumber> {\n  const pageList: Array<PaginationPageNumber> = [];\n\n  const numOfLinks = 8;\n\n  if (pages <= numOfLinks) {\n    for (let i = 1; i <= pages; i++) {\n      pageList.push({ index: i, role: 'page' });\n    }\n    return pageList;\n  }\n\n  /**\n   * Rules: As SPA, we want a consistent number of links, to avoid jumping.\n   * - Always the first and last page.\n   * - Always the next following page.\n   * - 2 Skipper before current page. Place redundant ones after.\n   * - 2 Skipper behind current page to last page. Place redundant ones after.\n   */\n\n  // First page\n  if (page > 1) {\n    pageList.push({ index: 1, role: 'first' });\n  }\n\n  // Add 2 skipper before current page, if applicable.\n  let intervalEnd = 1; // first page\n  let previousPage = intervalEnd;\n  if (page > 3) {\n    const skipperStep = Math.round((page - previousPage) / 2);\n    previousPage = page - skipperStep;\n    pageList.push({ index: previousPage, role: 'skipper-far' });\n  }\n  if (page > 2) {\n    const skipperStep = Math.ceil((page - previousPage) / 3);\n    if (page - skipperStep !== previousPage) {\n      previousPage = page - skipperStep;\n      pageList.push({ index: previousPage, role: 'skipper-near' });\n    }\n  }\n\n  // Current page\n  previousPage = page;\n  pageList.push({ index: page, role: 'page' });\n\n  // Following page\n  if (previousPage < pages - 1) {\n    previousPage += 1;\n    pageList.push({ index: previousPage, role: page === 1 ? 'first' : 'next' });\n  }\n\n  // On page 1, page === first -> fill up\n  if (page === 1) {\n    previousPage += 1;\n    pageList.push({ index: previousPage, role: 'next' });\n  }\n\n  // Use remaining skippers, that could not been placed before the current page, additionally after the current page.\n  if (pageList.length <= 4 && previousPage < pages - 1) {\n    previousPage += 1;\n    pageList.push({ index: previousPage, role: 'skipper-far' });\n  }\n  if (pageList.length <= 4 && previousPage < pages - 1) {\n    previousPage += 1;\n    pageList.push({ index: previousPage, role: 'skipper-near' });\n  }\n\n  if (previousPage < pages - 1) {\n    // Add 2 skipper after current page, if applicable.\n    const ixPage = pageList.length - 1;\n    intervalEnd = pages;\n    if (previousPage < pages - 2) {\n      const skipperStep = Math.ceil((intervalEnd - previousPage) / 2);\n      intervalEnd = previousPage + skipperStep;\n      pageList.push({ index: intervalEnd, role: 'skipper-near' });\n    }\n    if (previousPage < pages - 1) {\n      const skipperStep = Math.ceil((intervalEnd - previousPage) / 3);\n      if (skipperStep > 0) {\n        intervalEnd = previousPage + skipperStep;\n        pageList.splice(ixPage + 1, 0, { index: intervalEnd, role: 'skipper-far' });\n      }\n    }\n  }\n\n  // Last page\n  if (page !== pages) {\n    pageList.push({ index: pages, role: 'last' });\n  }\n\n  // Fill remaining slots up (should be always maxSize buttons).\n  let ixPrevFiller = pageList.findIndex(p => p.index === page);\n  if (ixPrevFiller === -1) throw new Error('Internal error: Page index not found.');\n  while (pageList.length < numOfLinks && ixPrevFiller > 0) {\n    while (ixPrevFiller > 0) {\n      const baseValue = pageList[ixPrevFiller].index;\n      const prevVal = pageList[ixPrevFiller - 1].index;\n      if (baseValue - prevVal > 1) {\n        pageList.splice(ixPrevFiller, 0, { index: baseValue - 1, role: getFakeRollForFiller(pageList.filter(p => p.role !== 'skipper-far').length) });\n        break;\n      }\n      --ixPrevFiller;\n    }\n  }\n\n  return pageList;\n}\n\nconst PaginationNumbersList: React.FC<IPaginationNumbersListProps> = ({ offset, limit, count, buildUrl }: IPaginationNumbersListProps) => {\n  const numOfPages = Math.ceil(count / limit);\n  const currentPage = Math.ceil(offset / limit) + 1;\n\n  const pageList = useMemo(() => generatePageList(currentPage, numOfPages), [currentPage, numOfPages]);\n\n  const pageListJsx: Array<React.ReactNode> = pageList.map(p => (\n    <PaginationLink title={p.index.toString()} offset={limit * (p.index - 1)} key={p.index.toString()} active={currentPage === p.index} buildUrl={buildUrl} className={p.role} />\n  ));\n\n  return <>{pageListJsx}</>;\n};\n\nconst Pagination: React.FC<IPaginationProps> = ({ offset, limit, count, buildUrl }: IPaginationProps) => {\n  const { formatMessage } = useIntl();\n\n  const next = offset + limit;\n  const previous = offset - limit;\n\n  if (count <= limit) return null;\n\n  return (\n    <nav>\n      <BootstraPagination>\n        <PaginationLink title='←' offset={previous} key='previous' buildUrl={buildUrl} disabled={previous < 0} aria-label={formatMessage(messages.pagination_previous)} />\n        <PaginationNumbersList    offset={offset}   limit={limit}  buildUrl={buildUrl} count={count} />\n        <PaginationLink title='→' offset={next}     key='next'     buildUrl={buildUrl} disabled={next > count} aria-label={formatMessage(messages.pagination_previous)} />\n      </BootstraPagination>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import classNames from 'classnames';\nimport { useMemo } from 'react';\n\nimport { toNumberDefault } from '../../common/utility';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport { PaginationProps } from '../constants/DefaultFilters';\nimport { SearchResult } from '../store/SearchTypes';\nimport ListRecipes from './ListRecipes';\nimport Pagination from './Pagination';\n\nexport interface IResultsProps {\n  pending:  boolean;\n  search:   SearchResult;\n  qs:       Record<string, string>;\n  defaults: Partial<PaginationProps>;\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n  onOpenRecipe: (rec: RecipeList) => void;\n}\n\nconst Results: React.FC<IResultsProps> = ({ pending, search, qs, defaults, buildUrl, onOpenRecipe }: IResultsProps) => {\n  const listJsx = useMemo(() => (\n    <ListRecipes\n        data = {search.recipes}\n        lg   = {3}\n        onOpenRecipe = {onOpenRecipe} />\n  ), [search.recipes, onOpenRecipe]);\n\n  const paginationJsx = useMemo(() => (\n    <Pagination\n        limit    = {toNumberDefault(qs.limit, defaults.limit ?? 12)}\n        count    = {search.totalRecipes}\n        offset   = {toNumberDefault(qs.offset, defaults.offset ?? 0)}\n        buildUrl = {buildUrl} />\n  ), [search.totalRecipes, qs, defaults, buildUrl, onOpenRecipe]);\n\n  return (\n    <div className={classNames('results-container', { pending: pending })}>\n      {listJsx}\n      {paginationJsx}\n    </div>\n  );\n};\n\nexport default Results;\n","import { defineMessages, useIntl } from 'react-intl';\n\nimport P from '../../common/components/P';\n\nconst messages = defineMessages({\n  no_results: {\n    id: 'browse.no_results',\n    description: 'No results header',\n    defaultMessage: 'There are no results for your search.',\n  },\n});\n\nconst NoResults: React.FC = () => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <P className='no-results placeholder'>{formatMessage(messages.no_results)}</P>\n  );\n};\n\nexport default NoResults;\n","import { useEffect, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport { RootState } from '../../app/Store';\nimport { useSelector } from '../../common/store/redux';\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport DefaultFilters from '../constants/DefaultFilters';\nimport Results from '../components/Results';\nimport NoResults from '../components/NoResults';\nimport Loading from '../components/Loading';\nimport { SearchResult } from '../store/SearchTypes';\n\nconst messages = defineMessages({\n  search_results_heading: {\n    id: 'browse.results_heading',\n    description: 'Browser search results heading',\n    defaultMessage: 'Results',\n  },\n});\n\nexport interface ISearchResultsProps {\n  qs:       Record<string, string>;\n  qsString: string;\n\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n  onOpenRecipe: (rec: RecipeList) => void;\n}\n\nconst SearchResults: React.FC<ISearchResultsProps> = ({ qs, qsString, buildUrl, onOpenRecipe }: ISearchResultsProps) => {\n  const { formatMessage }  = useIntl();\n\n  const searchState = useSelector((state: RootState) => state.browse.browserSearch);\n  const pending = searchState.meta.pending === PendingState.LOADING;\n\n  const [searchResults, setSearchResults] = useState<SearchResult | undefined>(undefined);\n\n  useEffect(() => {\n    if (searchState.meta.pending === PendingState.COMPLETED) {\n      setSearchResults(searchState.items?.[qsString]);\n    }\n  }, [searchState.meta.pending, searchState.items]);\n\n  useEffect(() => {\n    const res = searchState.items?.[qsString];\n    if (res) {\n      setSearchResults(res);\n    }\n  }, [qsString]);\n\n  return (\n    <>\n      <h2 className='sr-only'>{formatMessage(messages.search_results_heading)}</h2>\n      {pending && !searchResults && <Loading />}\n      {!pending && (searchResults == null || searchResults.recipes.length === 0) && <NoResults />}\n      {searchResults != null && searchResults.recipes.length > 0 && (\n        <Results\n            pending  = {pending}\n            search   = {searchResults}\n            qs       = {qs}\n            defaults = {DefaultFilters}\n            buildUrl = {buildUrl}\n            onOpenRecipe = {onOpenRecipe}\n        />\n      )}\n    </>\n  );\n};\n\nexport default SearchResults;\n","export interface CsvOptions {\n  /**\n   * @defaultValue `,`\n   */\n  delimiter?: string;\n  /**\n   * @defaultValue `\"`\n   */\n  escapeChar?: string;\n}\n\nexport function parseCSV(str: string, options?: CsvOptions) {\n  // Coded by Trevor Dixon (https://stackoverflow.com/a/14991797)\n\n  const delimiter  = options?.delimiter ?? ',';\n  const escapeChar = options?.escapeChar ?? '\"';\n\n  const arr: Array<Array<string>> = [];\n  let quote = false;  // 'true' means we're inside a quoted field\n\n  // Iterate over each character, keep track of current row and column (of the returned array)\n  for (let row = 0, col = 0, c = 0; c < str.length; c++) {\n      const cc = str[c], nc = str[c + 1];    // Current character, next character\n      arr[row] = arr[row] || [];             // Create a new row if necessary\n      arr[row][col] = arr[row][col] || '';   // Create a new column (start with empty string) if necessary\n\n      // If the current character is a quotation mark, and we're inside a\n      // quoted field, and the next character is also a quotation mark,\n      // add a quotation mark to the current column and skip the next character\n      if (cc === escapeChar && quote && nc === escapeChar) { arr[row][col] += cc; ++c; continue; }\n\n      // If it's just one quotation mark, begin/end quoted field\n      if (cc === escapeChar) { quote = !quote; continue; }\n\n      // If it's a comma and we're not in a quoted field, move on to the next column\n      if (cc === delimiter && !quote) {\n        // If the comma is not followed by a character, the column is empty\n        if (!nc) arr[row][++col] = '';\n        ++col; continue;\n      }\n\n      // If it's a newline (CRLF) and we're not in a quoted field, skip the next character\n      // and move on to the next row and move to column 0 of that new row\n      if (cc === '\\r' && nc === '\\n' && !quote) { ++row; col = 0; ++c; continue; }\n\n      // If it's a newline (LF or CR) and we're not in a quoted field,\n      // move on to the next row and move to column 0 of that new row\n      if (cc === '\\n' && !quote) { ++row; col = 0; continue; }\n      if (cc === '\\r' && !quote) { ++row; col = 0; continue; }\n\n      // Otherwise, append the current character to the current column\n      arr[row][col] += cc;\n  }\n\n  return arr;\n}\n","import request from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { objToSearchString } from '../../common/utility';\nimport { toBasicAction } from '../../common/store/redux';\nimport { handleError } from '../../common/requestUtils';\nimport { BROWSER_SEARCH_STORE, SearchDispatch, SearchResultDto, toSearchResult } from './SearchTypes';\nimport { parseCSV } from '../utilts/utility';\n\nconst FILTER_QUERY_PARAMETER_MAPPING: Record<string, string> = {\n  cuisine: 'cuisine__slug',\n  course:  'course__slug',\n  tag:     'tag__slug',\n  author:  'author__username',\n};\n\nconst FIELDS = ['author', 'cuisine', 'course', 'directions', 'info', 'ordering', 'rating', 'source', 'tag', 'title'];\n\nexport function extractSearchStringToFields(filters: Record<string, string>): Record<string, string> {\n  if (!filters.search || !filters.search.includes(':')) return filters;\n\n  const result = { ...filters };\n  const parsedFields = parseCSV(result.search, { delimiter: ' ' })[0];\n\n  const extractedSearchArray: Array<string> = [];\n  parsedFields.forEach(delimitedString => {\n    if (delimitedString.includes(':')) {\n      const keyValues = parseCSV(delimitedString, { delimiter: ':' })[0];\n      if (keyValues.length === 2) {\n        const fieldKey = keyValues[0].toLocaleLowerCase();\n        if (FIELDS.includes(fieldKey)) {\n          result[fieldKey] = keyValues[1];\n          return;\n        }\n      }\n    }\n\n    extractedSearchArray.push(delimitedString);\n  });\n\n  result.search = extractedSearchArray.join(' ');\n\n  return result;\n}\n\nfunction mapFilterNames(filters: Record<string, string>, mapping: Record<string, string>): Record<string, string> {\n  const mappedFilters: Record<string, string> = {};\n\n  Object.keys(filters).forEach(f => {\n    if (filters[f] !== null) {\n      mappedFilters[f in mapping ? mapping[f] : f] = filters[f];\n    }\n  });\n\n  return mappedFilters;\n}\n\nexport const loadRecipes = (filters: Record<string, string>) => (dispatch: SearchDispatch) => {\n  dispatch({ ...toBasicAction(BROWSER_SEARCH_STORE, ACTION.LOADING) });\n\n  let parsedFilters: Record<string, string> = extractSearchStringToFields(filters);\n  parsedFilters = mapFilterNames(parsedFilters, FILTER_QUERY_PARAMETER_MAPPING);\n\n  request()\n    .get(serverURLs.browse)\n    .query(parsedFilters)\n    .then(res => {\n      const resDto: SearchResultDto = res.body;\n      dispatch({\n        ...toBasicAction(\n          BROWSER_SEARCH_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filters),\n        payload: toSearchResult(resDto),\n      });\n    })\n    .catch(err => { dispatch(handleError(err, BROWSER_SEARCH_STORE)); });\n};\n\nexport const loadRandomRecipes = (filters: Record<string, string>) => (dispatch: SearchDispatch) => {\n  dispatch({ ...toBasicAction(BROWSER_SEARCH_STORE, ACTION.LOADING) });\n\n  const parsedFilters: Record<string, string> = {};\n  Object.keys(filters).forEach(f => {\n    if (filters[f] !== null) {\n      parsedFilters[f in FILTER_QUERY_PARAMETER_MAPPING ? FILTER_QUERY_PARAMETER_MAPPING[f] : f] = filters[f];\n    }\n  });\n\n  request()\n    .get(serverURLs.mini_browse)\n    .query(parsedFilters)\n    .then(res => {\n      const resDto: SearchResultDto = res.body;\n      dispatch({\n        ...toBasicAction(\n          BROWSER_SEARCH_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filters),\n        payload: toSearchResult(resDto),\n      });\n    })\n    .catch(err => { dispatch(handleError(err, BROWSER_SEARCH_STORE)); });\n};\n","import { forwardRef } from 'react';\nimport { Button as BootstrapButton } from 'react-bootstrap';\nimport { Placement } from 'react-bootstrap/esm/types';\n\nimport '../css/button.css';\nimport { CommonProps } from '../types/OverridableComponent';\nimport ConditionalWrapper from './ConditionalWrapper';\nimport Tooltip from './Tooltip';\n\nexport interface IButtonProps extends CommonProps {\n  id:         string;\n  type?:      'button' | 'reset' | 'submit';\n  variant?:   'primary' | 'secondary' | 'danger' | 'outline-primary' | 'outline-secondary' | 'outline-danger' | 'transparent';\n  size?:      'sm' | 'lg';\n  disabled?:  boolean;\n  onClick?:   (event: React.MouseEvent<HTMLButtonElement>) => void;\n\n  tooltip?:   string;\n  tooltipPlacement?: Placement;\n\n  children:   React.ReactNode;\n}\n\nconst Button = forwardRef<HTMLButtonElement, IButtonProps>(({\n  id,\n  tooltip, tooltipPlacement,\n  children, ...rest }: IButtonProps, ref) => (\n    <ConditionalWrapper\n        condition = {Boolean(tooltip)}\n        render = {childr => <Tooltip id={`${id}-tooltip`} tooltip={tooltip} placement={tooltipPlacement}>{childr}</Tooltip>}>\n      <BootstrapButton id={id} aria-label={tooltip || undefined} aria-describedby={undefined} {...rest} ref={ref}>\n        {children}\n      </BootstrapButton>\n    </ConditionalWrapper>\n));\n\nexport default Button;\n","import { useContext, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useLocation, useNavigate } from 'react-router';\n\nimport { AnyComponent } from '../../types/Types';\nimport DynamicHeightContext from '../context/DynamicHeightContext';\nimport ArrayReducerType from '../store/ArrayReducerType';\nimport ItemReducerType from '../store/ItemReducerType';\nimport { getEnv, getRoutePath } from '../utility';\nimport ErrorBoundary from './ErrorBoundary';\n\n/** {@link PageTitleFixer} Props. */\ninterface IPageWrapperProps {\n  /** Page title. */\n  title?:   string;\n  id?:      string;\n  state?:   ItemReducerType<unknown> | ArrayReducerType<unknown>;\n  /** Page component to render. */\n  children: AnyComponent;\n}\n\n/**\n * Strips slashes etc. of the path.\n *\n * Example:\n * location.pathname = /browse/\n * toCleanLocationPath = browse\n *\n * @param path - location.pathname\n *\n * @return Nice path without gibberish.\n */\nfunction toCleanLocationPath(path: string): string {\n  const pathNoHost      = path.startsWith(getEnv('PUBLIC_URL') ?? '') ? path.substring((getEnv('PUBLIC_URL') ?? '').length) : path;\n  const startsWithSlash = pathNoHost.startsWith('/');\n  const endsWithSlash   = pathNoHost.endsWith('/');\n  const pathNoSlashes   = pathNoHost.substring(startsWithSlash ? 1 : 0, endsWithSlash ? pathNoHost.length - 1 : undefined);\n\n  return pathNoSlashes;\n}\n\n/**\n * HOC to properly set the browser title to assure accessibilty.\n */\n const PageWrapper: React.FC<IPageWrapperProps> = ({ title, id, state, children }: IPageWrapperProps) => {\n  const nav = useNavigate();\n  const location = useLocation();\n  const error = state?.meta.error;\n\n  const dynamicHeightContext = useContext(DynamicHeightContext);\n\n  useEffect(() => {\n    // ARIA: Titles should contain the application name and page title.\n    document.title = (`${title != null && title.length > 0 ? `${title} | ` : ''}OwnRecipes`);\n  }, [title]);\n\n  useEffect(() => {\n    if (error && id == null) {\n      const p = getRoutePath('/NotFound');\n      // console.log(`[PageWrapper] nav to \"${p}\"`);\n      nav(p);\n    }\n  }, [id, error]);\n\n  return (\n    <Container id='main-container' as='main' className={toCleanLocationPath(location.pathname)} style={{ marginTop: `${dynamicHeightContext.toolbarHeight}px` }}>\n      <ErrorBoundary verbose printStack>\n        {children}\n      </ErrorBoundary>\n    </Container>\n  );\n};\n\nexport default PageWrapper;\n","import { useCallback, useMemo } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport classNames from 'classnames';\nimport { Button } from 'react-bootstrap';\n\nimport '../css/ratings.css';\n\nimport Icon from '../../common/components/Icon';\nimport ConditionalWrapper from '../../common/components/ConditionalWrapper';\n\nconst messages = defineMessages({\n  star_alt: {\n    id: 'rating_comments.star_alt',\n    description: 'Alt text for star button, for screen reader.',\n    defaultMessage: 'Select to rate item {stars, plural, one {# star} other {# stars}}',\n  },\n  stars_alt: {\n    id: 'rating_comments.stars_alt',\n    description: 'Alt text for read-only stars (view).',\n    defaultMessage: '{stars} out of 5 stars',\n  },\n  rating_count: {\n    id: 'rating_comments.rating_count',\n    description: 'Rating count (view).',\n    defaultMessage: '{count} ratings',\n  },\n});\n\nexport interface IRatingsProps {\n  stars:      number;\n  count?:     number;\n  showCount?: boolean;\n  collapsed?: boolean;\n  onChange?:  (stars: number) => void;\n}\n\ninterface IStarProps {\n  stars: number;\n  num:   number;\n  onChange?: (stars: number) => void;\n}\n\nconst Star: React.FC<IStarProps> = ({ stars, num, onChange }: IStarProps) => {\n  const { formatMessage } = useIntl();\n\n  const handleClick = useCallback(() => {\n    onChange?.(num);\n  }, [onChange, num]);\n\n  const isHalfFilled = stars > (num - 1) && stars < num;\n  const icon = isHalfFilled ? 'star-half' : 'star';\n  const variant = num > stars || isHalfFilled ? 'light' : 'filled';\n\n  return (\n    <ConditionalWrapper\n        condition = {onChange != null}\n        render    = {childr => <Button variant='transparent' className='rating' onClick={handleClick}>{childr}</Button>}\n        key={num}>\n      <Icon key={num} icon={icon} variant={variant} size={onChange != null ? '2x' : '1x'} ariaLabel={onChange ? formatMessage(messages.star_alt, { stars: num }) : undefined} />\n    </ConditionalWrapper>\n  );\n};\n\ninterface ICollapsedStarProps {\n  stars: number;\n}\n\nconst CollapsedStar: React.FC<ICollapsedStarProps> = ({ stars }: ICollapsedStarProps) => {\n  const isHalfFilled = stars > 0 && stars < 4;\n  const icon = isHalfFilled ? 'star-half' : 'star';\n  const variant = stars === 0 || isHalfFilled ? 'light' : 'filled';\n\n  return (\n    <Icon key={stars} icon={icon} variant={variant} size='1x' />\n  );\n};\n\nconst Ratings: React.FC<IRatingsProps> = ({ stars, count, showCount = true, collapsed = false, onChange }: IRatingsProps) => {\n  const { formatMessage } = useIntl();\n\n  let starss = stars;\n  if (stars > 5) {\n    starss = 5;\n  } else if (stars < 0) {\n    starss = 0;\n  }\n\n  const starsList: React.ReactNode | Array<React.ReactNode> = useMemo(() => {\n    if (collapsed) {\n      return <CollapsedStar stars={starss} />;\n    } else {\n      return Array.from({ length: 5 }, (_, i) => i + 1).map(num => (\n        <Star key={num} stars={starss} num={num} onChange={onChange} />\n      ));\n    }\n  }, [starss, collapsed, onChange]);\n\n  const starsText = stars > 0 ? `${stars}/5` : '';\n  const ratingCount = (showCount && (stars === 0 || count) && !onChange) ? (count ?? 0) : undefined;\n\n  return (\n    <div className='rating-stars'>\n      <span className={classNames('stars-icons', { active: stars > 0 })} aria-hidden>{starsList}</span>\n      {starsText   && <span className='rating-text'  aria-hidden>{starsText}</span>}\n      <span className='sr-only'>{formatMessage(messages.stars_alt, { stars: starss })}</span>\n      {ratingCount != null && (\n        <span className='rating-count'>\n          {`(${collapsed ? ratingCount : formatMessage(messages.rating_count, { count: ratingCount })})`}\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default Ratings;\n","import request from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { toBasicAction } from '../../common/store/redux';\nimport { handleError } from '../../common/requestUtils';\nimport { Recipe, RecipeAction, RecipeActionTypes, RecipeDispatch, RecipeDto, RECIPE_STORE, toRecipe } from './RecipeTypes';\n\nexport const getRecipeSuccess = (recipe: Recipe): RecipeAction => (\n  { ...toBasicAction(RECIPE_STORE, ACTION.GET_SUCCESS), payload: recipe }\n);\n\nexport const load = (recipeSlug: string) => (dispatch: RecipeDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.recipe}${recipeSlug}/`)\n    .then(res => {\n      dispatch(getRecipeSuccess(toRecipe(res.body as RecipeDto)));\n    })\n    .catch(err => dispatch(handleError(err, RECIPE_STORE)));\n};\n\nexport const deleteRecipe = (id: number, recipeSlug: string) => (dispatch: RecipeDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_STORE, ACTION.DELETE_START) });\n  request()\n    .delete(`${serverURLs.recipe}${recipeSlug}/`)\n    .then(() => {\n      dispatch({ ...toBasicAction(RECIPE_STORE, RecipeActionTypes.RECIPE_DELETE), payload: { id: id } });\n    })\n    .catch(err => dispatch(handleError(err, RECIPE_STORE)));\n};\n\nexport const updateServings = (recipeSlug: string, value: number) => (dispatch: RecipeDispatch) => {\n  dispatch({\n    ...toBasicAction(\n      RECIPE_STORE,\n      RecipeActionTypes.RECIPE_INGREDIENT_SERVINGS_UPDATE\n    ),\n    payload: {\n      recipeSlug: recipeSlug,\n      customServings: value,\n    },\n  });\n};\n\nexport const preload = (recipe: Partial<Recipe>) => (dispatch: RecipeDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_STORE, ACTION.PRELOAD), payload: recipe });\n};\n\nexport const reset = () => (dispatch: RecipeDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_STORE, ACTION.RESET) });\n};\n"],"names":["RENDER_TAGS","tag","icon","variant","_ref","recipe","intl","useIntl","renderTagsJsx","useMemo","oTags","res","recipeTags","vegetarian","vegan","forEach","t","push","_jsxs","Chip","children","_jsx","Icon","optionallyFormatMessage","concat","id","locale","length","className","getRecipeImage","_recipe$photoThumbnai","photoThumbnail","getRecipeImagePlaceholder","images","recipeImageHash","Math","abs","str","hash","i","charCodeAt","hashCode","title","getResourcePath","data","lg","onOpenRecipe","IMAGE_PLACEHOLDER","PLACEHOLDER_STYLE","background","recipes","map","link","getRoutePath","slug","Col","Card","classNames","Link","to","onClick","Img","src","alt","style","Ratings","stars","rating","count","ratingCount","collapsed","Title","as","Tooltip","tooltip","placement","ListTags","Text","info","Row","xs","sm","Loading","CircularProgress","limit","ordering","parsedFilter","filters","parsedFilters","_","extractSearchStringToFields","messages","defineMessages","filter_active","description","defaultMessage","qsTitle","qs","multiSelect","cssClass","buildUrl","sort","formatMessage","dataFormatted","_data$map","item","active","split","includes","total","label","filter","sortByLabel","items","_dataFormatted$map","ConditionalWrapper","condition","render","childr","Accordion","Item","eventKey","Header","Body","reset","filter_course","filter_cuisine","filter_rating","filter_tag","pub_date","show_filters","hide_filters","reset_filters","filter_ordering","x_stars","tips_advanced","courses","cuisines","ratings","tags","hasActiveFilter","resetFilterUrl","openFilters","setOpenFilters","showMenu","setShowMenu","useState","toggleMenu","useCallback","prev","mobileHeader","Button","type","handleSelect","newOpenFilters","Array","isArray","activeKey","flush","alwaysOpen","onSelect","Filter","r","toString","P","color","qsString","dispatch","useDispatch","useSelector","state","browse","browserFilter","Object","keys","qsMergedDefaults","reloadData","dispatchQueue","toBasicAction","BROWSE_FILTER_COURSE_STORE","ACTION","LOADING","request","get","serverURLs","course_count","query","then","GET_SUCCESS","objToSearchString","payload","body","results","catch","err","handleError","BROWSE_FILTER_CUISINE_STORE","cuisine_count","FilterActions","BROWSE_FILTER_RATING_STORE","rating_count","BROWSE_FILTER_TAGS_STORE","tag_count","status","delay","ix","setTimeout","useEffect","search","searchString","URLSearchParams","key","SearchMenu","search_title","input_placeholder","input_clear","value","doSearch","formData","setFormData","previousSearch","useRef","current","handleChange","attr","val","newState","handleClearInput","clearInput","InputAdornment","position","size","_Fragment","Input","name","placeholder","required","inputAdornmentStart","inputAdornmentEnd","undefined","onChange","debounceTimeout","search_summary_results","search_summary_results_pagination","search_summary_sort_by","sort_by_pub_date","sort_by_rating","sort_by_title","toSortSlug","startsWith","substring","_search$totalRecipes","_DefaultFilters$limit","resultsCountD","totalRecipes","offset","toNumberDefault","DefaultFilters","withPagination","currentSort","handleSortByClick","event","sortSlug","preventDefault","dropdownItems","Dropdown","offsetLast","min","resultsCount","Toggle","disabled","Menu","_qs$search","isInit","qsSearchResult","SearchBar","SearchSummary","SearchMenuContainer","SearchResults","mergeDefaultFilters","defaultFilters","params","filterS","String","buildSearchString","route","qsBuilder","buildSearchUrl","arguments","BrowsePage","nav","useNavigate","searchParams","useSearchParams","browserSearch","fromEntries","qsMergedString","SearchActions","handleBuildUrl","handleOpenRecipe","rec","RecipeActions","PageWrapper","Search","PaginationLink","forwardRef","ref","rest","handleClick","pagination_previous","pagination_next","PaginationNumbersList","numOfPages","ceil","currentPage","pageListJsx","page","pages","pageList","index","role","intervalEnd","previousPage","skipperStep","round","ixPage","splice","ixPrevFiller","findIndex","p","Error","baseValue","numOfGeneratedLinks","generatePageList","_ref2","next","previous","BootstraPagination","pending","defaults","listJsx","ListRecipes","paginationJsx","_defaults$limit","_defaults$offset","Pagination","no_results","NoResults","search_results_heading","searchState","meta","PendingState","searchResults","setSearchResults","_searchState$items","COMPLETED","_searchState$items2","Results","parseCSV","options","_options$delimiter","_options$escapeChar","delimiter","escapeChar","arr","quote","row","col","c","cc","nc","FILTER_QUERY_PARAMETER_MAPPING","cuisine","course","author","FIELDS","result","parsedFields","extractedSearchArray","delimitedString","keyValues","fieldKey","toLocaleLowerCase","join","loadRecipes","BROWSER_SEARCH_STORE","mapping","mappedFilters","f","mapFilterNames","resDto","toSearchResult","loadRandomRecipes","mini_browse","tooltipPlacement","Boolean","BootstrapButton","toCleanLocationPath","path","_getEnv","_getEnv2","pathNoHost","getEnv","startsWithSlash","endsWithSlash","endsWith","location","useLocation","error","dynamicHeightContext","useContext","DynamicHeightContext","document","Container","pathname","marginTop","toolbarHeight","ErrorBoundary","verbose","printStack","star_alt","stars_alt","Star","num","isHalfFilled","ariaLabel","CollapsedStar","_ref3","showCount","starss","starsList","from","starsText","getRecipeSuccess","RECIPE_STORE","load","recipeSlug","GET_START","toRecipe","deleteRecipe","DELETE_START","delete","RecipeActionTypes","RECIPE_DELETE","updateServings","RECIPE_INGREDIENT_SERVINGS_UPDATE","customServings","preload","PRELOAD","RESET"],"sourceRoot":""}