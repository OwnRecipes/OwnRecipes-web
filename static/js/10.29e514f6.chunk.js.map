{"version":3,"file":"static/js/10.29e514f6.chunk.js","mappings":"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","sources":["common/components/HeaderLink.tsx","common/components/Image.tsx","common/components/Input/Checkbox.tsx","common/components/Input/Select.tsx","common/components/PageWrapper.tsx","common/components/ReduxForm/ReCheckbox.tsx","common/hooks/useBlocker.ts","common/components/NavigationPrompt.tsx","common/components/FormStatus.tsx","common/components/ReduxForm/ReFormStatus.tsx","common/components/ReduxForm/ReInitialValuesResetter.tsx","common/components/Toast.tsx","common/components/WidthHeightRatio.tsx","recipe/components/Directions.tsx","recipe/components/IngredientGroups.tsx","recipe/components/Ingredients.tsx","recipe/components/SubRecipes.tsx","recipe/store/RecipeActions.ts","recipe_form/store/actions.ts"],"sourcesContent":["import { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport '../css/header_link.css';\n\nimport { CommonProps } from '../types/OverridableComponent';\nimport PageScroller from './PageScroller';\n\nexport interface IHeaderLinkProps extends CommonProps {\n  linkFor: string;\n}\n\nconst HeaderLink = forwardRef<HTMLAnchorElement, IHeaderLinkProps>(({ linkFor, className, ...rest }: IHeaderLinkProps, ref) => (\n  <>\n    <Link\n        className = {classNames('headerlink', className)}\n        to = {`#${linkFor}`}\n        title = 'Permalink to this headline'\n        {...rest}\n        ref = {ref}>\n      ¶\n    </Link>\n    <PageScroller uriFragmentId={linkFor} />\n  </>\n));\n\nexport default HeaderLink;\n","import { forwardRef, useCallback, useEffect, useState } from 'react';\n\nimport { CommonProps } from '../types/OverridableComponent';\n\nexport interface IImageProps extends CommonProps {\n  src: string;\n  placeholder?: string;\n  alt?: string;\n\n  onError?: () => void;\n}\n\nconst Image = forwardRef<HTMLImageElement, IImageProps>(({\n    src, placeholder, alt, onError, ...rest }: IImageProps, ref) => {\n  const [hasError, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    setError(false);\n  }, [src]);\n\n  const handleError = useCallback(() => {\n    setError(true);\n    onError?.();\n  }, [onError]);\n\n  return (\n    <img\n        src = {hasError ? placeholder : src}\n        alt = {alt}\n        onError = {handleError}\n\n        {...rest}\n        ref = {ref} />\n  );\n});\n\nexport default Image;\n","import { createRef } from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../../css/checkbox.css';\n\nimport BaseInputComponent, { IBaseInputComponentProps } from './BaseInputComponent';\nimport Tooltip from '../Tooltip';\nimport ConditionalWrapper from '../ConditionalWrapper';\nimport Icon from '../Icon';\n\nexport interface ICheckboxProps extends IBaseInputComponentProps {\n  value?: boolean;\n\n  onChange?: (name: string, newValue: boolean) => void;\n}\n\nexport default class Checkbox extends BaseInputComponent<ICheckboxProps> {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private ref = createRef<any>();\n\n  focus(): boolean { // eslint-disable-line react/no-unused-class-component-methods\n    if (this.ref != null && this.ref.current) {\n      this.ref.current.focus();\n      return true;\n    }\n    return false;\n  }\n\n  getLabel(): React.ReactNode | undefined { // eslint-disable-line react/no-unused-class-component-methods\n    if (this.props.label == null) {\n      return null;\n    } else if (this.props.tooltip) {\n      return (\n        <>\n          {this.props.label}\n          &nbsp;\n          <Icon icon='info-circle' className='tooltip-icon' />\n        </>\n      );\n    } else {\n      return this.props.label;\n    }\n  }\n\n  handleChange = () => {\n    // event: React.ChangeEvent<HTMLInputElement>\n    // NOTE: bootstrap will pass as event.target.value always \"on\".\n    if (this.props.readOnly || this.props.disabled) return;\n    this.props.onChange?.(this.props.name, !this.props.value);\n  };\n\n  render() {\n    // console.log(`[Checkbox] name=${this.props.name}`);\n\n    const { value, onChange, // eslint-disable-line @typescript-eslint/no-unused-vars\n        name, style, tooltip,\n        label, className, helpText, errors, meta, ...rest } = this.props; // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    return (\n      <Form.Group\n          {...this.getGroupProps()}\n          controlId = {name}\n          className = {this.getFormGroupClassNames()}\n          style     = {style}>\n        <ConditionalWrapper\n            condition = {tooltip != null}\n            render    = {childr => <Tooltip id={`${name}-tooltip`} tooltip={tooltip}>{childr}</Tooltip>}>\n          {this.getHelpText()}\n          {this.getErrorMessage()}\n          <Form.Check\n              name  = {name}\n              checked = {value}\n              label = {this.getLabel()}\n              className = 'form-check' // BUG: always set form-check\n              onChange  = {this.handleChange}\n\n              {...rest}\n              ref = {this.ref} />\n        </ConditionalWrapper>\n      </Form.Group>\n    );\n  }\n}\n","import { createRef } from 'react';\nimport { Form } from 'react-bootstrap';\nimport SelectReact, { MultiValue, SingleValue } from 'react-select';\nimport CreatableSelectReact from 'react-select/creatable';\n// import AsyncReact from 'react-select/async';\n\nimport '../../css/select.css';\n\nimport BaseInputComponent, { IBaseInputComponentProps } from './BaseInputComponent';\nimport ConditionalWrapper from '../ConditionalWrapper';\nimport Tooltip from '../Tooltip';\n\n/*\nexport class Async extends BaseInputComponent {\n  handleChange(data) {\n    this.setState({\n      value: data,\n    });\n\n    if (this.props.change) {\n      this.props.change(this.props.name, data ? data.value : '');\n      this.props.change(this.props.title, data ? data.label : '');\n    }\n  }\n\n  render() {\n    return (\n      <div className={this.props.class} key={this.props.id}>\n        <div className={`form-group ${this.hasErrors() ? 'has-error' : null}`}>\n          { this.props.label ? <label>{ this.props.label }</label> : null }\n          <AsyncReact\n              name = {this.props.name}\n              value = {this.props.value}\n              onChange = {this.handleChange}\n              loadOptions = {this.props.loadOptions}\n          />\n          { this.getErrorMessage() }\n        </div>\n      </div>\n    );\n  }\n}\n*/\n\nexport interface SelectDataType {\n  value: string;\n  label: string;\n}\n\nexport interface ISelectProps extends IBaseInputComponentProps {\n  value?: string;\n  data?:  Array<SelectDataType>;\n\n  onChange?: (name: string, newValue: string | undefined) => void;\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport class Select extends BaseInputComponent<ISelectProps> {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private ref = createRef<any>();\n\n  focus(): boolean { // eslint-disable-line react/no-unused-class-component-methods\n    if (this.ref != null && this.ref.current) {\n      this.ref.current.focus();\n      return true;\n    }\n    return false;\n  }\n\n  handleChange = (data: SingleValue<SelectDataType>) => {\n    this.setState({\n      value: data,\n    });\n\n    this.props.onChange?.(this.props.name, data?.value);\n  };\n\n  render() {\n    const { value, data, onChange, // eslint-disable-line @typescript-eslint/no-unused-vars\n        name, style, tooltip, readOnly, disabled,\n        label, className, helpText, errors, meta, ...rest } = this.props; // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    const selectedOption = data?.find(o => o.value === value);\n    return (\n      <Form.Group\n          {...this.getGroupProps()}\n          className = {this.getFormGroupClassNames()}\n          style     = {style}>\n        <ConditionalWrapper\n            condition = {tooltip != null}\n            render    = {childr => <Tooltip id={`${name}-tooltip`} tooltip={tooltip}>{childr}</Tooltip>}>\n          {this.getLabel({ htmlFor: `${name}-input` })}\n          {this.getHelpText()}\n          {this.getErrorMessage()}\n          <SelectReact\n              inputId     = {`${name}-input`}\n              name        = {name}\n              value       = {selectedOption}\n              options     = {data}\n\n              isDisabled  = {readOnly || disabled}\n\n              onChange    = {this.handleChange}\n              className = 'react-select-container'\n              classNamePrefix = 'creatable-select'\n              placeholder = ''\n\n              {...rest}\n              ref = {this.ref} />\n        </ConditionalWrapper>\n      </Form.Group>\n    );\n  }\n}\n\nexport interface ICreatableSelectValues extends IBaseInputComponentProps {\n  value?:   Array<string> | string;\n  data?:    Array<SelectDataType>;\n  isMulti?: boolean;\n}\ninterface ICreatableSelectProps extends ICreatableSelectValues {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onChange?: (name: string, newValue: any | undefined) => void;\n}\n\ninterface ICreatableSelectState {\n  options: Array<SelectDataType>;\n}\n\nconst isValidNewOption = (value: string): boolean => !!value;\n\nfunction findSelectedOptions(options: Array<SelectDataType>, value: Array<string> | string | undefined): Array<SelectDataType> | SelectDataType {\n  if (Array.isArray(value)) {\n    return options.filter(o => value.includes(o.value));\n  } else {\n    return options.find(o => o.value === value) ?? '' as unknown as SelectDataType;\n  }\n}\n\nexport class CreatableSelect extends BaseInputComponent<ICreatableSelectProps, ICreatableSelectState> {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private ref = createRef<any>();\n\n  constructor(props: ICreatableSelectProps) {\n    super(props);\n\n    this.state = {\n      options: [],\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: ICreatableSelectProps, state: ICreatableSelectState) {\n    if (nextProps.data == null || nextProps.data.length === 0 || state.options.length === 0) return state;\n    const dataIdents = nextProps.data.map(d => d.value);\n    const nextOptions = [...state.options];\n\n    for (let index = nextOptions.length - 1; index >= 0; --index) {\n      if (dataIdents.includes(nextOptions[index].value)) {\n        nextOptions.splice(index, 1);\n      }\n    }\n\n    if (state.options.length === nextOptions.length) return state;\n\n    return {\n      ...state,\n      options: nextOptions,\n    };\n  }\n\n  focus(): boolean { // eslint-disable-line react/no-unused-class-component-methods\n    if (this.ref != null && this.ref.current) {\n      this.ref.current.focus();\n      return true;\n    }\n    return false;\n  }\n\n  handleChange = (data: MultiValue<SelectDataType> | SingleValue<SelectDataType>) => {\n    if (this.props.onChange) {\n      const val = data != null && Array.isArray(data) ? data.map(dat => dat.value) : (data as SingleValue<SelectDataType>)?.value;\n      this.props.onChange(\n        this.props.name,\n        val\n      );\n    }\n  };\n\n  handleCreate = (inputValue: string) => {\n    const newOption: SelectDataType = { value: inputValue, label: inputValue };\n    this.setState(prev => (\n        {\n          options: [...prev.options, newOption],\n        }\n      ),\n      () => {\n        if (!this.props.isMulti) {\n          this.handleChange(newOption);\n        } else {\n          const dataOptions = this.props.data ?? [];\n          const options = dataOptions.concat(this.state.options);\n          const selectedOptions = findSelectedOptions(options, [...(this.props.value as Array<string> | undefined ?? []), inputValue]);\n          this.handleChange(selectedOptions);\n        }\n      });\n  };\n\n  render() {\n    // console.log(`[Select] name=${this.props.name}, value=${JSON.stringify(this.props.value)}`);\n\n    const { value, data, onChange, // eslint-disable-line @typescript-eslint/no-unused-vars\n        name, style, tooltip, readOnly, disabled,\n        label, className, helpText, errors, meta, ...rest } = this.props; // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    const dataOptions = data ?? [];\n    const options = dataOptions.concat(this.state.options);\n    const selectedOptions = findSelectedOptions(options, value);\n\n    return (\n      <Form.Group\n          {...this.getGroupProps()}\n          className = {this.getFormGroupClassNames()}\n          style     = {style}>\n        <ConditionalWrapper\n            condition = {tooltip != null}\n            render    = {childr => <Tooltip id={`${name}-tooltip`} tooltip={tooltip}>{childr}</Tooltip>}>\n          {this.getLabel({ htmlFor: `${name}-input` })}\n          {this.getHelpText()}\n          {this.getErrorMessage()}\n          <CreatableSelectReact\n              inputId = {`${name}-input`}\n              onChange = {this.handleChange}\n              isValidNewOption = {isValidNewOption}\n              onCreateOption = {this.handleCreate}\n              isClearable\n              value = {selectedOptions}\n              isDisabled  = {readOnly || disabled}\n\n              className = 'react-select-container'\n              classNamePrefix = 'creatable-select'\n              options = {options}\n              placeholder = ''\n\n              {...rest}\n              ref = {this.ref} />\n        </ConditionalWrapper>\n      </Form.Group>\n    );\n  }\n}\n","import { useContext, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useLocation, useNavigate } from 'react-router';\n\nimport { AnyComponent } from '../../types/Types';\nimport DynamicHeightContext from '../context/DynamicHeightContext';\nimport ArrayReducerType from '../store/ArrayReducerType';\nimport ItemReducerType from '../store/ItemReducerType';\nimport { getEnv, getRoutePath } from '../utility';\nimport ErrorBoundary from './ErrorBoundary';\n\n/** {@link PageTitleFixer} Props. */\ninterface IPageWrapperProps {\n  /** Page title. */\n  title?:   string;\n  id?:      string;\n  state?:   ItemReducerType<unknown> | ArrayReducerType<unknown>;\n  /** Page component to render. */\n  children: AnyComponent;\n}\n\n/**\n * Strips slashes etc. of the path.\n *\n * Example:\n * location.pathname = /browse/\n * toCleanLocationPath = browse\n *\n * @param path - location.pathname\n *\n * @return Nice path without gibberish.\n */\nfunction toCleanLocationPath(path: string): string {\n  const pathNoHost      = path.startsWith(getEnv('PUBLIC_URL') ?? '') ? path.substring((getEnv('PUBLIC_URL') ?? '').length) : path;\n  const startsWithSlash = pathNoHost.startsWith('/');\n  const endsWithSlash   = pathNoHost.endsWith('/');\n  const pathNoSlashes   = pathNoHost.substring(startsWithSlash ? 1 : 0, endsWithSlash ? pathNoHost.length - 1 : undefined);\n\n  return pathNoSlashes;\n}\n\n/**\n * HOC to properly set the browser title to assure accessibilty.\n */\n const PageWrapper: React.FC<IPageWrapperProps> = ({ title, id, state, children }: IPageWrapperProps) => {\n  const nav = useNavigate();\n  const location = useLocation();\n  const error = state?.meta.error;\n\n  const dynamicHeightContext = useContext(DynamicHeightContext);\n\n  useEffect(() => {\n    // ARIA: Titles should contain the application name and page title.\n    document.title = (`${title != null && title.length > 0 ? `${title} | ` : ''}OwnRecipes`);\n  }, [title]);\n\n  useEffect(() => {\n    if (error && id == null) {\n      const p = getRoutePath('/NotFound');\n      // console.log(`[PageWrapper] nav to \"${p}\"`);\n      nav(p);\n    }\n  }, [id, error]);\n\n  return (\n    <Container id='main-container' as='main' className={toCleanLocationPath(location.pathname)} style={{ marginTop: `${dynamicHeightContext.toolbarHeight}px` }}>\n      <ErrorBoundary verbose printStack>\n        {children}\n      </ErrorBoundary>\n    </Container>\n  );\n};\n\nexport default PageWrapper;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { forwardRef } from 'react';\nimport { Field } from 'react-final-form';\nimport { useIntl } from 'react-intl';\n\nimport { formatValidation, requiredValidator } from '../../store/Validation';\nimport Checkbox,  { ICheckboxProps } from '../Input/Checkbox';\n\nexport interface IReCheckboxProps extends Omit<ICheckboxProps, 'value'> {\n  format?: (value: any, name: string) => boolean;\n  parse?:  (value: any, name: string) => any;\n}\n\nconst ReCheckbox = forwardRef<Checkbox, IReCheckboxProps>(({\n    name, required, format, parse,\n    onChange, onFocus, onBlur, ...rest }: IReCheckboxProps, ref) => {\n  const intl = useIntl();\n\n  return (\n    <Field name={name} validate={required ? requiredValidator : undefined} validateFields={[]} format={format} parse={parse}>\n      {fprops => (\n        <Checkbox\n            {...rest}\n            required = {required}\n\n            name     = {fprops.input.name}\n            value    = {fprops.input.value}\n            errors   = {formatValidation(intl, fprops.meta.error || (!fprops.meta.dirtySinceLastSubmit ? fprops.meta.submitError : undefined))}\n            meta     = {fprops.meta}\n            onChange = {(namee: string, value: boolean) => { fprops.input.onChange(value); onChange?.(namee, value); }}\n            onFocus  = {(event: React.FocusEvent<HTMLElement, Element>) => { fprops.input.onFocus(event); onFocus?.(event); }}\n            onBlur   = {(event: React.FocusEvent<HTMLElement, Element>) => { fprops.input.onBlur(event);  onBlur?.(event); }}\n            ref = {ref} />\n      )}\n    </Field>\n  );\n});\n\nexport default ReCheckbox;\n","import { History, Transition } from 'history';\nimport { useCallback, useContext, useEffect } from 'react';\nimport { UNSAFE_NavigationContext as NavigationContext } from 'react-router-dom';\n\ntype ExtendNavigator = Navigator & Pick<History, 'block'>;\n\nexport function useBlocker(blocker: (tx: Transition) => void, when = true) {\n  const { navigator } = useContext(NavigationContext);\n\n  useEffect(() => {\n    if (!when) return;\n\n    const unblock = (navigator as unknown as ExtendNavigator).block(tx => {\n      const autoUnblockingTx = {\n        ...tx,\n        retry() {\n          unblock();\n          tx.retry();\n        },\n      };\n\n      blocker(autoUnblockingTx);\n    });\n\n    // eslint-disable-next-line consistent-return\n    return unblock;\n  }, [navigator, blocker, when]);\n}\n\nexport default function usePrompt(message: string, when = true) {\n  const blocker = useCallback((tx: Transition) => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm(message)) tx.retry();\n  }, [message]);\n\n  useBlocker(blocker, when);\n}\n","import { useMemo } from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { Beforeunload } from 'react-beforeunload';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport useBlocker from '../hooks/useBlocker';\n\nconst messages = defineMessages({\n  navigation_warning: {\n    id: 'navigationprompt.warning',\n    description: 'Prompt displayed when navigating on a dirty page (unsaved changes).',\n    defaultMessage: 'You have unsaved changed. If you continue, those change may be lost.',\n  },\n});\n\ninterface INavigationPromptProps {\n  isDirty?: boolean | undefined;\n}\n\nconst NavigationPrompt: React.FC<INavigationPromptProps> = ({ isDirty }: INavigationPromptProps) => {\n  const { formatMessage } = useIntl();\n\n  const promptMsg = useMemo(() => formatMessage(messages.navigation_warning), [formatMessage]);\n\n  const dirtyBlocker = useBlocker(promptMsg, isDirty);\n\n  return (\n    <>\n      {isDirty && (\n        <Beforeunload onBeforeunload={() => promptMsg} />\n      )}\n\n      {dirtyBlocker}\n    </>\n  );\n};\n\nexport default NavigationPrompt;\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/form_errors.css';\n\nimport { ValidationError } from '../store/Validation';\nimport Alert from './Alert';\nimport NavigationPrompt from './NavigationPrompt';\nimport P from './P';\nimport Toast from './Toast';\n\nconst messages = defineMessages({\n  form_errors_title: {\n    id: 'status.form_errors_title',\n    description: 'Title for the form error box.',\n    defaultMessage: 'The form contains an error.',\n  },\n  form_errors_alert: {\n    id: 'status.form_errors_alert',\n    description: 'Alert text for the form error box.',\n    defaultMessage: 'Please fix the described error(s) and continue.',\n  },\n  form_errors_table_heading_error: {\n    id: 'status.form_errors_table_heading_error',\n    description: 'The form-errors will be displayed as table, with an error column. This is the column\\'s title.',\n    defaultMessage: 'Error',\n  },\n  form_errors_table_heading_message: {\n    id: 'status.form_errors_table_heading_message',\n    description: 'The form-errors will be displayed as table, with a message column. This is the column\\'s title.',\n    defaultMessage: 'Message',\n  },\n\n  save_success: {\n    id: 'status.save_success',\n    description: 'Toast for successfully saved form.',\n    defaultMessage: 'Changes saved.',\n  },\n});\n\ninterface IFormStatusProps {\n  dirty: boolean;\n  submitting: boolean;\n  errors: Record<string, ValidationError> | undefined;\n\n  onSubmitSuccess?: () => void;\n}\n\nconst FormStatus: React.FC<IFormStatusProps> = ({\n    // eslint-disable-next-line arrow-body-style\n    dirty, submitting, errors, onSubmitSuccess }: IFormStatusProps) => {\n  // console.log(`[FormStatus] dirty=${dirty}, submitting=${submitting}, errors=${JSON.stringify(errors)}`);\n  return (\n    <>\n      <NavigationPrompt isDirty={dirty} />\n      <FormErrors errors={errors} />\n      <SubmitSuccess dirty={dirty} submitting={submitting} onSubmitSuccess={onSubmitSuccess} errors={errors} />\n    </>\n  );\n};\n\ninterface IFormErrorRowErrorProps {\n  name: string;\n  err: ValidationError;\n}\n\nconst FormErrorRowError: React.FC<IFormErrorRowErrorProps> = ({ name, err }: IFormErrorRowErrorProps) => {\n  const label = document.querySelector(`[data-api-field=\"${name}\"] > label`)?.textContent ?? name;\n\n  const errMsgs: Array<string> = [];\n  if (Array.isArray(err)) {\n    errMsgs.push(...(err.map(errr => errr.message)));\n  } else {\n    errMsgs.push(err.message);\n  }\n\n  return (\n    <tr>\n      <td>{label}</td>\n      <td>{errMsgs.join('. ')}</td>\n    </tr>\n  );\n};\n\nfunction getVisibleErrors(errors: Record<string, ValidationError>): Record<string, ValidationError> {\n  const visibleErrorsArray = Object.entries(errors).filter(([key]) => !key.startsWith('_'));\n  return Object.fromEntries(visibleErrorsArray);\n}\n\ninterface IFormErrorsProps {\n  errors: Record<string, ValidationError> | undefined;\n}\n\nconst FormErrors: React.FC<IFormErrorsProps> = ({ errors }: IFormErrorsProps) => {\n  const { formatMessage } = useIntl();\n\n  const visibleErrors = useMemo(() => (\n    errors != null ? getVisibleErrors(errors) : undefined\n  ), [errors]);\n\n  const errorTableRowsJsx = useMemo(() => {\n    if (visibleErrors == null || Object.keys(visibleErrors).length === 0) return [];\n    const res: Array<React.ReactNode> = [];\n    Object.keys(visibleErrors).forEach(key => {\n      const nextErr = visibleErrors[key];\n      res.push(<FormErrorRowError key={key} name={key} err={nextErr} />);\n    });\n    return res;\n  }, [visibleErrors]);\n\n  if (visibleErrors == null || Object.keys(visibleErrors).length === 0) return null;\n\n  // console.log(`[FormErrors] ${JSON.stringify(visibleErrors)}`);\n\n  const errorTableJsx = (\n    <table>\n      <thead>\n        <tr>\n          <th>{formatMessage(messages.form_errors_table_heading_error)}</th>\n          <th>{formatMessage(messages.form_errors_table_heading_message)}</th>\n        </tr>\n      </thead>\n      <tbody>\n        {errorTableRowsJsx}\n      </tbody>\n    </table>\n  );\n\n  return (\n    <Alert\n        severity = 'danger'\n        className = 'form-errors'\n        title = {formatMessage(messages.form_errors_title)}>\n      {errorTableJsx}\n      <P className='alert-post-message'>{formatMessage(messages.form_errors_alert)}</P>\n    </Alert>\n  );\n};\n\ninterface ISubmitSuccessProps {\n  dirty: boolean;\n  submitting: boolean;\n  errors: Record<string, ValidationError> | undefined;\n\n  onSubmitSuccess?: () => void;\n}\n\nconst SubmitSuccess: React.FC<ISubmitSuccessProps> = ({ dirty, submitting, errors, onSubmitSuccess }: ISubmitSuccessProps) => {\n  const { formatMessage } = useIntl();\n\n  const prevSubmitting = useRef<boolean>(false);\n  const [showSaveSuccess, setShowSaveSuccess] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (prevSubmitting.current === true && submitting === false && errors == null) {\n      setShowSaveSuccess(true);\n      onSubmitSuccess?.();\n    }\n\n    prevSubmitting.current = submitting;\n  }, [submitting]);\n\n  useEffect(() => {\n    if (dirty && showSaveSuccess) {\n      setShowSaveSuccess(false);\n    }\n  }, [dirty]);\n\n  const handleCloseSaveSuccessToast = useCallback(() => {\n    setShowSaveSuccess(false);\n  }, []);\n\n  return (\n    <Toast\n        show = {showSaveSuccess}\n        variant = 'success'\n        anchorOrigin={{ horizontal: 'center', vertical: 'bottom' }}\n        onClose = {handleCloseSaveSuccessToast}>\n      {formatMessage(messages.save_success)}\n    </Toast>\n  );\n};\n\nexport default FormStatus;\n","import { FormSpy } from 'react-final-form';\nimport { ValidationError } from '../../store/Validation';\nimport FormStatus from '../FormStatus';\n\nexport interface IReFormStatusProps {\n  onSubmitSuccess?: () => void;\n}\n\nconst ReFormStatus: React.FC<IReFormStatusProps> = ({\n  onSubmitSuccess }: IReFormStatusProps) => (\n    <FormSpy subscription={{ dirty: true, submitting: true, submitErrors: true }}>\n      {({ dirty, submitting, submitErrors }) => (\n        <FormStatus\n            dirty = {dirty}\n            submitting = {submitting}\n            errors = {(submitErrors) as Record<string, ValidationError>}\n            onSubmitSuccess = {onSubmitSuccess} />\n      )}\n    </FormSpy>\n);\n\nexport default ReFormStatus;\n","import { useEffect } from 'react';\nimport { FormApi } from 'final-form';\n\ninterface IInitialValuesResetterProps<T> {\n  form: FormApi<T, Partial<T>>;\n  initialValues: Partial<T> | undefined;\n}\nconst InitialValuesResetter = <T = {}>({ form, initialValues }: IInitialValuesResetterProps<T>) => {\n  useEffect(() => {\n    if (form && form.restart != null) {\n      // console.log('Reset form');\n      form.restart(initialValues);\n    }\n  }, [initialValues]);\n\n  return null;\n};\n\nexport default InitialValuesResetter;\n","import { forwardRef } from 'react';\nimport { Toast as ReactBootstrapToast } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport '../css/toast.css';\n\nimport { CommonProps } from '../types/OverridableComponent';\nimport Icon from './Icon';\n\nexport interface AnchorOriginPosition {\n  horizontal: 'center' | 'left' | 'right';\n  vertical: 'bottom' | 'top';\n}\n\nexport interface IToastProps extends CommonProps {\n  show: boolean;\n  autoHide?: number;\n\n  variant?: 'success';\n  anchorOrigin?: AnchorOriginPosition;\n\n  onClose?: () => void;\n\n  children: React.ReactNode;\n}\n\nfunction capitalize(str: string): string {\n  if (str.length === 0) {\n    return '';\n  } else if (str.length === 1) {\n    return str.toUpperCase();\n  } else {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n}\n\nconst Toast = forwardRef<HTMLDivElement, IToastProps>(({\n    show, autoHide = 6000, variant, anchorOrigin, onClose, children,\n    className, ...rest }: IToastProps, ref) => {\n  const anchorString = anchorOrigin != null ? `Toast-anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}` : undefined;\n\n  return (\n    <ReactBootstrapToast\n        show      = {show}\n        delay     = {autoHide}\n        autohide  = {autoHide > 0}\n        className = {classNames('simple-toast', className, anchorString, {\n          success: variant === 'success',\n        })}\n        onClose   = {onClose}\n        {...rest}\n        ref = {ref}>\n      <ReactBootstrapToast.Header closeButton={onClose != null}>\n        <>\n          {variant === 'success' && <div className='toast-icon'><Icon icon='check' variant='light' size='2x' /></div>}\n          <span className='toast-title'>{children}</span>\n        </>\n      </ReactBootstrapToast.Header>\n    </ReactBootstrapToast>\n  );\n});\n\nexport default Toast;\n","import { forwardRef } from 'react';\nimport classNames from 'classnames';\n\nimport '../css/width_height_ratio.css';\nimport { CommonProps } from '../types/OverridableComponent';\n\nexport interface IWidthHeightRatioProps extends CommonProps {\n  height: number;\n  width:  number;\n  children: React.ReactNode;\n}\n\nconst WidthHeightRatio = forwardRef<HTMLDivElement, IWidthHeightRatioProps>(({\n  height, width, children,\n  className, style, ...rest }: IWidthHeightRatioProps, ref) => (\n    <div\n        style = {{\n          paddingTop: `${height}%`,\n          width:      `${width}%`,\n          position:   'relative',\n          ...style,\n        }}\n        className={classNames('width-height-ratio', className)}\n        {...rest}\n        ref = {ref}>\n      {children}\n    </div>\n));\n\nexport default WidthHeightRatio;\n","import { useMemo } from 'react';\nimport classNames from 'classnames';\n\nimport '../css/directions.css';\n\nimport HeaderLink from '../../common/components/HeaderLink';\nimport { IngredientGroup } from '../store/RecipeTypes';\nimport IngredientGroups from './IngredientGroups';\nimport { slugify } from '../../common/utility';\n\nexport interface IDirectionsProps {\n  directions: string;\n  ingredients: Array<IngredientGroup>;\n}\n\ninterface DirectionWithIngredients {\n  heading?:     string;\n  directions:   Array<string>;\n  ingredients?: Array<IngredientGroup>;\n}\n\ntype DirectionsWithIngredients = Array<DirectionWithIngredients>;\n\nfunction getIngredientsForStep(heading: string, unassignedIngredients: Array<IngredientGroup>): IngredientGroup | undefined {\n  const igIndex = unassignedIngredients.findIndex(ig => ig.title === heading);\n  if (igIndex >= 0) {\n    const igs = unassignedIngredients.splice(igIndex, 1);\n    return igs[0];\n  }\n\n  return undefined;\n}\n\nfunction pushDirections(groups: DirectionsWithIngredients, heading: string, directions: Array<string>, unassignedIngredients: Array<IngredientGroup>) {\n  if (directions.length === 0) return;\n\n  const ig = getIngredientsForStep(heading, unassignedIngredients);\n\n  groups.push({\n    heading:     heading,\n    directions:  directions,\n    ingredients: ig ? [ig] : undefined,\n  });\n}\n\nfunction assignRemainingIngredients(groups: DirectionsWithIngredients, unassignedIngredients: Array<IngredientGroup>) {\n  if (unassignedIngredients.length === 0) return;\n\n  const untitledStep = groups.find(di => !di.heading);\n  if (untitledStep) {\n    if (untitledStep.ingredients) {\n      untitledStep.ingredients.push(...unassignedIngredients);\n    } else {\n      untitledStep.ingredients = [...unassignedIngredients];\n    }\n  } else {\n    groups.unshift({ directions: [], ingredients: [...unassignedIngredients] });\n  }\n\n  unassignedIngredients.splice(0, unassignedIngredients.length);\n}\n\nfunction parseDirections(directionsString: string, ingredients: Array<IngredientGroup>): DirectionsWithIngredients {\n  const unassignedIngredients = [...ingredients];\n  const isMultiStep = directionsString.includes('\\n');\n\n  const directionsGroups: DirectionsWithIngredients = [];\n  let directions: Array<string> = [];\n  let nextHeading = '';\n\n  if (isMultiStep) {\n    directionsString.split('\\n').filter(direction => direction.length > 0).forEach(direction => {\n      if (direction.endsWith(':')) {\n        pushDirections(directionsGroups, nextHeading, directions, unassignedIngredients);\n        nextHeading = direction.substring(0, direction.length - 1);\n        directions = [];\n      } else {\n        directions.push(direction);\n      }\n    });\n\n    pushDirections(directionsGroups, nextHeading, directions, unassignedIngredients);\n  } else {\n    pushDirections(directionsGroups, '', [directionsString], unassignedIngredients);\n  }\n\n  assignRemainingIngredients(directionsGroups, unassignedIngredients);\n\n  return directionsGroups;\n}\n\nfunction formatDirections(directions: DirectionsWithIngredients) {\n  return directions\n    .filter(di => di.directions.length > 0 || (di.ingredients != null && di.ingredients.length > 0))\n    .map(di => {\n      let directionsJsx: React.ReactElement | undefined;\n      if (di.directions.length === 1) {\n        directionsJsx = (\n          <div className='direction'>\n            {di.directions[0]}\n          </div>\n        );\n      } else if (di.directions.length > 1) {\n        directionsJsx = (\n          <ol className='directions'>\n            {di.directions.map(direction => (\n              <li className='direction' key={direction}>\n                {direction}\n              </li>\n            ))}\n          </ol>\n        );\n      }\n\n      const isDefaultGroup = !di.heading;\n      const headingSlug = slugify(di.heading ?? '');\n\n      return (\n        <div key={headingSlug} className={classNames('subgroup', headingSlug)}>\n          {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\n          {di.heading && (\n            <h3 id={`direction-${headingSlug}`}>\n              {`${di.heading}:`}\n              <HeaderLink linkFor={`direction-${headingSlug}`} />\n            </h3>\n          )}\n          {di.ingredients && di.ingredients.length > 0 && (\n            <div className='ingredients'>\n              <IngredientGroups groups={di.ingredients} hasSubrecipes={isDefaultGroup && directions.length > 1} />\n            </div>\n          )}\n          {directionsJsx}\n        </div>\n      );\n    });\n}\n\nconst Directions: React.FC<IDirectionsProps> = ({ directions: directionsString, ingredients }: IDirectionsProps) => {\n  const directionGroups: DirectionsWithIngredients = useMemo(() => parseDirections(directionsString, ingredients), [directionsString, ingredients]);\n  const directionsGroupsJsx: Array<React.ReactNode> = useMemo(() => formatDirections(directionGroups), [directionGroups]);\n\n  return (\n    <>\n      {directionsGroupsJsx}\n    </>\n  );\n};\n\nexport default Directions;\n","import '../css/ingredients_panel.css';\n\nimport { IngredientGroup } from '../store/RecipeTypes';\n\nimport Ingredients from './Ingredients';\n\nexport interface IIngredientGroupsProps {\n  groups: Array<IngredientGroup> | undefined;\n  hasSubrecipes: boolean;\n  withHeaderLink?: boolean;\n  selectable?: boolean;\n}\n\nconst IngredientGroups: React.FC<IIngredientGroupsProps> = ({\n    groups, hasSubrecipes, withHeaderLink, selectable }: IIngredientGroupsProps) => {\n  const showCaptions = hasSubrecipes || (groups != null && groups.length > 1);\n  const ingredientGroups = groups?.filter(group => group.title || group.ingredients.length > 0).map(group => (\n    <div className='subgroup ingredient-group' key={group.slug || group.title}>\n      <Ingredients\n          showCaptions = {showCaptions}\n          group = {group}\n          withHeaderLink = {withHeaderLink}\n          data = {group.ingredients}\n          selectable = {selectable}\n          />\n    </div>\n  ));\n\n  return (\n    <>{ingredientGroups}</>\n  );\n};\n\nexport default IngredientGroups;\n","import { useContext } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { defineMessages, IntlShape, useIntl } from 'react-intl';\n\nimport '../css/ingredients.css';\n\nimport MeasurementContext, { IMeasurementContext } from '../../common/context/MeasurementContext';\nimport HeaderLink from '../../common/components/HeaderLink';\nimport { optionallyFormatMessage, slugify } from '../../common/utility';\nimport { Ingredient, IngredientGroup } from '../store/RecipeTypes';\nimport ReCheckbox from '../../common/components/ReduxForm/ReCheckbox';\n\nconst messages = defineMessages({\n  quantity: {\n    id: 'ingredients.table.quantity',\n    description: 'Ingredients table quantity header',\n    defaultMessage: 'Quantity',\n  },\n  ingredient: {\n    id: 'ingredients.table.ingredient',\n    description: 'Ingredients table ingredient header',\n    defaultMessage: 'Ingredient',\n  },\n});\n\nexport interface IIngredientsProps {\n  showCaptions: boolean;\n  group: IngredientGroup;\n  data: Array<Ingredient>;\n  withHeaderLink?: boolean;\n  selectable?: boolean;\n}\n\nexport function formatMeasurement(intl: IntlShape, measurementsContext: IMeasurementContext, measurement: string | undefined, quantity: string | undefined): string {\n  let measurementString: string;\n  if (measurement != null) {\n    const measurementParserId = measurementsContext.formatter[measurementsContext.parser[measurement]];\n    if (measurementParserId != null) {\n      measurementString = optionallyFormatMessage(intl, 'measurement.', measurementParserId, { itemCount: quantity });\n    } else {\n      measurementString = measurement;\n    }\n  } else {\n    measurementString = '';\n  }\n\n  return measurementString;\n}\n\nconst Ingredients: React.FC<IIngredientsProps> = ({\n    showCaptions, group, data, withHeaderLink, selectable }: IIngredientsProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const measurementsContext = useContext(MeasurementContext);\n  const caption = showCaptions && group.title ? group.title : undefined;\n  const captionSlug = slugify(caption ?? '');\n\n  const ingredients = data.map((ingredient, index) => {\n    const quantityS   = ingredient.quantity;\n    const msrmtString = formatMeasurement(intl, measurementsContext, ingredient.measurement, ingredient.quantity);\n    const titleString = ingredient.title;\n    const fullString  = [quantityS, msrmtString, titleString].join(' ');\n    const renderQuantity: boolean = Boolean(quantityS) || Boolean(msrmtString);\n\n    return (\n      <tr className='ingredient' key={(ingredient.id ?? index).toString()}>\n        {selectable && (\n          <td className='selection'>\n            <ReCheckbox\n                label = {fullString}\n                className = 'label-sr-only'\n                name  = {`ingredients.${group.slug}.cb-${ingredient.id}`} />\n          </td>\n        )}\n        <td className='quantity'>\n          {renderQuantity && (\n            <span>\n              {quantityS}\n              {quantityS != null && quantityS.length > 0 && msrmtString.length > 0 && ' '}\n              {msrmtString}\n            </span>\n          )}\n        </td>\n        <td className='ingredient'>\n          <span>\n            {titleString}\n          </span>\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <Table striped size='sm' className='table ingredients-table'>\n      {caption && (\n        <caption id={withHeaderLink ? `ingredients-${captionSlug}` : undefined} className='subheading h3'>\n          {`${caption}:`}\n          {withHeaderLink && <HeaderLink linkFor={`ingredients-${captionSlug}`} />}\n        </caption>\n      )}\n      <thead className='hideme'>\n        <tr>\n          {selectable && (\n            <th><span>Selection</span></th>\n          )}\n          <th><span>{formatMessage(messages.quantity)}</span></th>\n          <th><span>{formatMessage(messages.ingredient)}</span></th>\n        </tr>\n      </thead>\n      <tbody>\n        {ingredients}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default Ingredients;\n","import classNames from 'classnames';\nimport { Table } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\n\nimport HeaderLink from '../../common/components/HeaderLink';\nimport ReCheckbox from '../../common/components/ReduxForm/ReCheckbox';\nimport { getRoutePath, optionallyFormatMessage } from '../../common/utility';\nimport { SubRecipe } from '../store/RecipeTypes';\n\nconst messages = defineMessages({\n  subrecipes: {\n    id: 'subrecipes.subrecipes heading',\n    description: 'Subrecipes header',\n    defaultMessage: 'Subrecipes',\n  },\n  quantity: {\n    id: 'subrecipes.table.quantity',\n    description: 'Subrecipes table quantity header',\n    defaultMessage: 'Quantity',\n  },\n  subrecipe: {\n    id: 'subrecipes.table.subrecipe',\n    description: 'Subrecipes table ingredient header',\n    defaultMessage: 'Subrecipe',\n  },\n});\n\nexport interface ISubRecipesProps {\n  subRecipes: Array<SubRecipe> | undefined;\n  withHeaderLink?: boolean;\n  selectable?: boolean;\n}\n\nconst SubRecipes: React.FC<ISubRecipesProps> = ({\n    subRecipes, withHeaderLink, selectable }: ISubRecipesProps) => {\n  const intl = useIntl();\n\n  const showQuantityCol = subRecipes == null || subRecipes.filter(sr => (\n    (sr.quantity != null && sr.quantity.length > 0 && sr.quantity !== '0')\n      || (sr.measurement != null && sr.measurement.length > 0)\n  )).length > 0;\n\n  const subRecipesList = subRecipes?.map((subRecipe, index) => {\n    const quantityS   = subRecipe.quantity != null && subRecipe.quantity.length > 0 && subRecipe.quantity !== '0' ? subRecipe.quantity : '';\n    const msrmtString = subRecipe.measurement != null ? optionallyFormatMessage(intl, 'measurement.', subRecipe.measurement, { itemCount: subRecipe.quantity }) : '';\n    const titleString = subRecipe.title;\n    const fullString  = [quantityS, msrmtString, titleString].join(' ');\n\n    return (\n      <tr className='ingredient' key={(subRecipe.child_recipe_id ?? index).toString()}>\n        {selectable && (\n          <td className='selection'>\n            <ReCheckbox\n                label = {fullString}\n                className = 'label-sr-only'\n                name  = {`subrecipes.cb-${subRecipe.child_recipe_id}`} />\n          </td>\n        )}\n        {showQuantityCol && (\n          <td className='quantity first-col'>\n            <span>\n              {quantityS}\n              {quantityS != null && quantityS.length > 0 && msrmtString.length > 0 && ' '}\n              {msrmtString}\n            </span>\n          </td>\n        )}\n        <td className={classNames('ingredient last-col', { 'first-col': showQuantityCol })}>\n          <span>\n            <Link to={getRoutePath(`/recipe/${subRecipe.slug}`)} className='title'>{titleString}</Link>\n          </span>\n        </td>\n      </tr>\n    );\n  });\n\n  if (subRecipesList == null || subRecipesList.length === 0) return null;\n\n  return (\n    <div className='subgroup ingredient-group'>\n      <Table striped size='sm' className='table ingredients-table'>\n        <caption id={withHeaderLink ? 'subrecipes' : undefined} className='subheading h3'>\n          {`${intl.formatMessage(messages.subrecipes)}:`}\n          {withHeaderLink && <HeaderLink linkFor='subrecipes' />}\n        </caption>\n        <thead className='hideme'>\n          <tr>\n            {selectable && (\n              <th><span>Selection</span></th>\n            )}\n            {showQuantityCol && <th><span>{intl.formatMessage(messages.quantity)}</span></th>}\n            <th><span>{intl.formatMessage(messages.subrecipe)}</span></th>\n          </tr>\n        </thead>\n        <tbody>\n          {subRecipesList}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default SubRecipes;\n","import { handleError, request } from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { Recipe, RecipeAction, RecipeActionTypes, RecipeDispatch, RecipeDto, RECIPE_STORE, toRecipe } from './RecipeTypes';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { toBasicAction } from '../../common/store/redux';\n\nexport const getRecipeSuccess = (recipe: Recipe): RecipeAction => (\n  { ...toBasicAction(RECIPE_STORE, ACTION.GET_SUCCESS), payload: recipe }\n);\n\nexport const load = (recipeSlug: string) => (dispatch: RecipeDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.recipe}${recipeSlug}/`)\n    .then(res => {\n      dispatch(getRecipeSuccess(toRecipe(res.body as RecipeDto)));\n    })\n    .catch(err => dispatch(handleError(err, RECIPE_STORE)));\n};\n\nexport const deleteRecipe = (id: number, recipeSlug: string) => (dispatch: RecipeDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_STORE, ACTION.DELETE_START) });\n  request()\n    .delete(`${serverURLs.recipe}${recipeSlug}/`)\n    .then(() => {\n      dispatch({ ...toBasicAction(RECIPE_STORE, RecipeActionTypes.RECIPE_DELETE), payload: { id: id } });\n    })\n    .catch(err => dispatch(handleError(err, RECIPE_STORE)));\n};\n\nexport const updateServings = (recipeSlug: string, value: number) => (dispatch: RecipeDispatch) => {\n  dispatch({\n    ...toBasicAction(\n      RECIPE_STORE,\n      RecipeActionTypes.RECIPE_INGREDIENT_SERVINGS_UPDATE\n    ),\n    payload: {\n      recipeSlug: recipeSlug,\n      customServings: value,\n    },\n  });\n};\n\nexport const preload = (recipe: Partial<Recipe>) => (dispatch: RecipeDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_STORE, ACTION.PRELOAD), payload: recipe });\n};\n\nexport const reset = () => (dispatch: RecipeDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_STORE, ACTION.RESET) });\n};\n","import { handleError, handleFormError, request } from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { Recipe, RecipeDto, toRecipe, toRecipeRequest } from '../../recipe/store/RecipeTypes';\nimport { COURSES_STORE, CUISINES_STORE, TAGS_STORE } from '../../recipe_groups/store/types';\nimport { AnyDispatch, toBasicAction } from '../../common/store/redux';\nimport { AutocompleteListItem } from '../../common/components/Input/TextareaAutocomplete';\nimport { RecipeFormDispatch, RECIPE_FORM_STORE } from './types';\nimport { getRecipeSuccess } from '../../recipe/store/RecipeActions';\n\nexport const load = (recipeSlug: string) => (dispatch: RecipeFormDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_FORM_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.recipe}${recipeSlug}/`)\n    .then(res => {\n      const recipe = toRecipe(res.body);\n      dispatch({\n        ...toBasicAction(\n          RECIPE_FORM_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        payload: recipe,\n      });\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      dispatch(getRecipeSuccess(recipe) as any);\n    })\n    .catch(err => dispatch(handleError(err, RECIPE_FORM_STORE)));\n};\n\nexport const preload = (recipe: Partial<Recipe>) => (dispatch: RecipeFormDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_FORM_STORE, ACTION.PRELOAD), payload: recipe });\n};\n\nexport const reset = () => (dispatch: RecipeFormDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_FORM_STORE, ACTION.RESET) });\n};\n\nexport const save = async (dispatch: AnyDispatch, data: Recipe) => {\n  const photo = (typeof data.photo === 'object') ? data.photo : undefined;\n\n  const isNew = !data.id;\n  const r = isNew\n      ? request().post(serverURLs.recipe)\n      : request().patch(`${serverURLs.recipe}${data.slug}/`);\n\n  dispatch({\n    ...toBasicAction(\n      RECIPE_FORM_STORE,\n      isNew ? ACTION.CREATE_START : ACTION.UPDATE_START\n    ),\n  });\n\n  const dto = toRecipeRequest(data);\n  return r.send(dto)\n    .then(res => {\n      if (photo) {\n        return request()\n          .patch(`${serverURLs.recipe}${res.body.slug}/`)\n          .attach('photo', photo)\n          .then(resPhoto => {\n            const recipe = toRecipe(resPhoto.body);\n            dispatch({\n              ...toBasicAction(\n                RECIPE_FORM_STORE,\n                isNew ? ACTION.CREATE_SUCCESS : ACTION.UPDATE_SUCCESS\n              ),\n              oldId: data.id,\n              payload: recipe,\n            });\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            dispatch(getRecipeSuccess(recipe) as any);\n          })\n          .catch(err => handleFormError(dispatch, err, RECIPE_FORM_STORE));\n        } else {\n          const recipe = toRecipe(res.body);\n          dispatch({\n            ...toBasicAction(\n              RECIPE_FORM_STORE,\n              isNew ? ACTION.CREATE_SUCCESS : ACTION.UPDATE_SUCCESS\n            ),\n            oldId: isNew ? (null as any) : data.id, // eslint-disable-line @typescript-eslint/no-explicit-any\n            payload: recipe,\n          });\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          dispatch(getRecipeSuccess(recipe) as any);\n        }\n      // OPT HACK: Move this to recipe_groups\n      dispatch(invalidateCreatableLists(data, toRecipe(res.body)));\n      return null;\n    })\n    .catch(err => handleFormError(dispatch, err, RECIPE_FORM_STORE));\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const invalidateCreatableLists = (oldRecipe: Recipe, savedRecipe: Recipe): any => (dispatch: any) => {\n  if (oldRecipe.course?.id !== savedRecipe.course?.id) {\n    dispatch({ ...toBasicAction(COURSES_STORE, ACTION.RESET) });\n  }\n  if (oldRecipe.cuisine?.id !== savedRecipe.cuisine?.id) {\n    dispatch({ ...toBasicAction(CUISINES_STORE, ACTION.RESET) });\n  }\n  if (oldRecipe.tags?.map(t => t.id).join('/') !== savedRecipe.tags?.map(t => t.id).join('/')) {\n    dispatch({ ...toBasicAction(TAGS_STORE, ACTION.RESET) });\n  }\n};\n\nexport const fetchRecipeList = (searchTerm: string): Promise<Array<AutocompleteListItem>> => request()\n    .get(`${serverURLs.recipe}?fields=id,title,slug&limit=5&search=${searchTerm}`)\n    .then(res => res.body.results.map((recipe: RecipeDto) => ({ key: recipe.slug, name: recipe.slug, char: recipe.title } as AutocompleteListItem)))\n    .catch(() => []);\n"],"names":["forwardRef","_ref","ref","linkFor","className","rest","_objectWithoutProperties","_excluded","_jsxs","_Fragment","children","_jsx","Link","_objectSpread","classNames","to","concat","title","PageScroller","uriFragmentId","Image","src","placeholder","alt","onError","_useState","useState","_useState2","_slicedToArray","hasError","setError","useEffect","handleError","useCallback","Checkbox","_BaseInputComponent","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","createRef","handleChange","_this$props$onChange","_this$props","props","readOnly","disabled","onChange","name","value","_createClass","key","this","current","focus","label","tooltip","Icon","icon","_this$props2","style","helpText","errors","meta","Form","getGroupProps","controlId","getFormGroupClassNames","ConditionalWrapper","condition","render","childr","Tooltip","id","getHelpText","getErrorMessage","checked","getLabel","BaseInputComponent","Select","data","setState","selectedOption","find","o","htmlFor","SelectReact","inputId","options","isDisabled","classNamePrefix","isValidNewOption","findSelectedOptions","isArray","filter","includes","_options$find","CreatableSelect","_BaseInputComponent2","_super2","_this2","val","map","dat","handleCreate","inputValue","newOption","prev","_toConsumableArray","isMulti","_this2$props$data","selectedOptions","state","_this$props3","_excluded2","CreatableSelectReact","onCreateOption","isClearable","nextProps","dataIdents","d","nextOptions","index","splice","toCleanLocationPath","path","_getEnv","_getEnv2","pathNoHost","startsWith","getEnv","substring","startsWithSlash","endsWithSlash","endsWith","undefined","nav","useNavigate","location","useLocation","error","dynamicHeightContext","useContext","DynamicHeightContext","document","p","getRoutePath","Container","as","pathname","marginTop","toolbarHeight","ErrorBoundary","verbose","printStack","ReCheckbox","required","format","parse","onFocus","onBlur","intl","useIntl","Field","validate","requiredValidator","validateFields","fprops","input","formatValidation","dirtySinceLastSubmit","submitError","namee","event","usePrompt","message","when","blocker","navigator","NavigationContext","unblock","block","tx","autoUnblockingTx","retry","useBlocker","window","confirm","messages","defineMessages","navigation_warning","description","defaultMessage","isDirty","formatMessage","promptMsg","useMemo","dirtyBlocker","Beforeunload","onBeforeunload","form_errors_title","form_errors_alert","form_errors_table_heading_error","form_errors_table_heading_message","save_success","FormErrorRowError","_ref2","_document$querySelect","_document$querySelect2","err","querySelector","textContent","errMsgs","push","errr","join","FormErrors","_ref5","visibleErrors","visibleErrorsArray","Object","entries","_ref3","fromEntries","getVisibleErrors","errorTableRowsJsx","keys","res","forEach","nextErr","errorTableJsx","Alert","severity","P","SubmitSuccess","_ref6","dirty","submitting","onSubmitSuccess","prevSubmitting","useRef","showSaveSuccess","setShowSaveSuccess","handleCloseSaveSuccessToast","Toast","show","variant","anchorOrigin","horizontal","vertical","onClose","NavigationPrompt","FormSpy","subscription","submitErrors","FormStatus","form","initialValues","restart","capitalize","str","toUpperCase","charAt","slice","_ref$autoHide","autoHide","anchorString","ReactBootstrapToast","delay","autohide","success","closeButton","size","height","width","paddingTop","position","pushDirections","groups","heading","directions","unassignedIngredients","ig","igIndex","findIndex","getIngredientsForStep","ingredients","parseDirections","directionsString","isMultiStep","directionsGroups","nextHeading","split","direction","_untitledStep$ingredi","untitledStep","di","unshift","assignRemainingIngredients","directionGroups","directionsGroupsJsx","_di$heading","directionsJsx","isDefaultGroup","headingSlug","slugify","HeaderLink","IngredientGroups","hasSubrecipes","withHeaderLink","selectable","showCaptions","ingredientGroups","group","Ingredients","slug","quantity","ingredient","formatMeasurement","measurementsContext","measurement","measurementString","measurementParserId","formatter","parser","optionallyFormatMessage","itemCount","MeasurementContext","caption","captionSlug","_ingredient$id","quantityS","msrmtString","titleString","fullString","renderQuantity","Boolean","toString","Table","striped","subrecipes","subrecipe","subRecipes","showQuantityCol","sr","subRecipesList","subRecipe","_subRecipe$child_reci","child_recipe_id","getRecipeSuccess","recipe","toBasicAction","RECIPE_STORE","ACTION","payload","load","recipeSlug","dispatch","request","get","serverURLs","then","toRecipe","body","catch","deleteRecipe","delete","RecipeActionTypes","updateServings","customServings","preload","reset","RECIPE_FORM_STORE","save","_asyncToGenerator","_regeneratorRuntime","mark","_callee","photo","isNew","r","dto","wrap","_context","next","post","patch","toRecipeRequest","abrupt","send","attach","resPhoto","oldId","handleFormError","invalidateCreatableLists","stop","_x","_x2","oldRecipe","savedRecipe","_oldRecipe$course","_savedRecipe$course","_oldRecipe$cuisine","_savedRecipe$cuisine","_oldRecipe$tags","_savedRecipe$tags","course","COURSES_STORE","cuisine","CUISINES_STORE","tags","t","TAGS_STORE","fetchRecipeList","searchTerm","results","char"],"sourceRoot":""}