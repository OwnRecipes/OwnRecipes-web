{"version":3,"file":"static/js/219.356789ff.chunk.js","mappings":"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","sources":["browse/components/ListRecipes.tsx","browse/components/Loading.tsx","browse/constants/DefaultFilters.ts","browse/store/FilterActions.ts","browse/components/Filter.tsx","browse/components/SearchMenu.tsx","browse/containers/SearchMenuContainer.tsx","browse/components/SearchBar.tsx","browse/components/SearchSummary.tsx","browse/components/Search.tsx","browse/containers/BrowsePage.tsx","common/components/Pagination.tsx","browse/components/Pagination.tsx","browse/components/Results.tsx","browse/components/NoResults.tsx","browse/containers/SearchResults.tsx","browse/store/SearchActions.ts","common/components/PageWrapper.tsx","rating/components/Ratings.tsx","recipe/store/RecipeActions.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport '../css/list-recipes.css';\n\nimport Ratings from '../../rating/components/Ratings';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport { getRecipeImagePlaceholder, getResourcePath } from '../../common/utility';\nimport Tooltip from '../../common/components/Tooltip';\n\nexport interface IListRecipes {\n  data:   Array<RecipeList> | undefined;\n  onOpenRecipe: (rec: RecipeList) => void;\n}\n\nconst ListRecipes: React.FC<IListRecipes> = ({ data, onOpenRecipe }: IListRecipes) => {\n  const IMAGE_PLACEHOLDER = useMemo(() => getRecipeImagePlaceholder(), []);\n\n  const getRecipeImage = (recipe: RecipeList) => {\n    if (recipe.photoThumbnail) {\n      return recipe.photoThumbnail;\n    } else {\n      const images = ['fish', 'fried-eggs', 'pizza', 'soup', 'steak'];\n      return getResourcePath(`/images/${images[Math.floor(Math.random() * images.length)]}.jpg`);\n    }\n  };\n\n  const recipes = data?.map(recipe => {\n    const link = getResourcePath(`/recipe/${recipe.slug}`);\n    return (\n      <Col key={recipe.id}>\n        <Card className={classNames('recipe', 'print-hidden')}>\n          <Link to={link} onClick={() => onOpenRecipe(recipe)}>\n            <Card.Img variant='top' src={getRecipeImage(recipe)} alt='' placeholder={IMAGE_PLACEHOLDER} />\n            <Tooltip id={recipe.slug} tooltip={recipe.title} placement='bottom' className='card-title-tooltip'><Card.Title as='h3'>{recipe.title}</Card.Title></Tooltip>\n            <div><Ratings stars={recipe.rating} /></div>\n            <Card.Text>{recipe.info}</Card.Text>\n          </Link>\n        </Card>\n      </Col>\n    );\n  });\n\n  return (\n    <Row xs={1} sm={2} lg={4} className='g-4 recipes-list'>\n      {recipes}\n    </Row>\n  );\n};\n\nexport default ListRecipes;\n","import { Col, Row } from 'react-bootstrap';\n\nimport CircularProgress from '../../common/components/CircularProgress';\n\nconst Loading: React.FC = () => (\n  <Row>\n    <Col xs={12}>\n      <Row id='browse'>\n        <div className='spinner'>\n          <CircularProgress />\n        </div>\n      </Row>\n    </Col>\n  </Row>\n);\n\nexport default Loading;\n","export type PaginationProps = {\n  limit:  number;\n  offset: number;\n  count:  number;\n}\n\nexport type DefaultFilterProps = {\n  ordering: string;\n} & PaginationProps;\n\nconst defaultFilters: Partial<DefaultFilterProps> = {\n  limit: 12,\n  ordering: '-pub_date',\n};\n\nexport default defaultFilters;\n","import { handleError, request } from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { BROWSE_FILTER_COURSE_STORE, BROWSE_FILTER_CUISINE_STORE, BROWSE_FILTER_RATING_STORE, BROWSE_FILTER_TAGS_STORE, FilterDispatch } from './FilterTypes';\nimport { objToSearchString } from '../../common/utility';\nimport { toBasicAction } from '../../common/store/redux';\n\nconst parsedFilter = (filters: Record<string, string>): Record<string, string> => {\n  const parsedFilters: Record<string, string> = {};\n  Object.keys(filters).forEach(f => {\n    if (!['limit', 'offset'].includes(f)) {\n      parsedFilters[f] = filters[f];\n    }\n  });\n  return parsedFilters;\n};\n\nexport const loadCourses = (filters: Record<string, string>) => (dispatch: FilterDispatch) => {\n  dispatch({ ...toBasicAction(BROWSE_FILTER_COURSE_STORE, ACTION.LOADING) });\n\n  request()\n    .get(serverURLs.course_count)\n    .query(parsedFilter(filters))\n    .then(res => (\n      dispatch({\n        ...toBasicAction(\n          BROWSE_FILTER_COURSE_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filters),\n        payload: res.body.results,\n      })\n    ))\n    .catch(err => dispatch(handleError(err, BROWSE_FILTER_COURSE_STORE)));\n};\n\nexport const loadCuisines = (filters: Record<string, string>) => (dispatch: FilterDispatch) => {\n  dispatch({ ...toBasicAction(BROWSE_FILTER_CUISINE_STORE, ACTION.LOADING) });\n\n  request()\n    .get(serverURLs.cuisine_count)\n    .query(parsedFilter(filters))\n    .then(res => (\n      dispatch({\n        ...toBasicAction(\n          BROWSE_FILTER_CUISINE_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filters),\n        payload: res.body.results,\n      })\n    ))\n    .catch(err => dispatch(handleError(err, BROWSE_FILTER_CUISINE_STORE)));\n};\n\nexport const loadRatings = (filter: Record<string, string>) => (dispatch: FilterDispatch) => {\n  dispatch({ ...toBasicAction(BROWSE_FILTER_RATING_STORE, ACTION.LOADING) });\n\n  request()\n    .get(serverURLs.rating_count)\n    .query(parsedFilter(filter))\n    .then(res => (\n      dispatch({\n        ...toBasicAction(\n          BROWSE_FILTER_RATING_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filter),\n        payload: res.body.results,\n      })\n    ))\n    .catch(err => dispatch(handleError(err, BROWSE_FILTER_RATING_STORE)));\n};\n\nexport const loadTags = (filters: Record<string, string>) => (dispatch: FilterDispatch) => {\n  dispatch({ ...toBasicAction(BROWSE_FILTER_TAGS_STORE, ACTION.LOADING) });\n\n  request()\n    .get(serverURLs.tag_count)\n    .query(parsedFilter(filters))\n    .then(res => (\n      dispatch({\n        ...toBasicAction(\n          BROWSE_FILTER_TAGS_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filters),\n        payload: res.body.results,\n      })\n    ))\n    .catch(err => {\n      // Older backend versions may not support this action.\n      if (err.status === 404) {\n        dispatch({\n          ...toBasicAction(\n            BROWSE_FILTER_TAGS_STORE,\n            ACTION.GET_SUCCESS\n          ),\n          id: objToSearchString(filters),\n          payload: [],\n        });\n      } else {\n        dispatch(handleError(err, BROWSE_FILTER_TAGS_STORE));\n      }\n    });\n};\n","import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport { Accordion } from 'react-bootstrap';\n\nimport Icon from '../../common/components/Icon';\nimport { optionallyFormatMessage, sortByLabel } from '../../common/utility';\nimport Tooltip from '../../common/components/Tooltip';\nimport ConditionalWrapper from '../../common/components/ConditionalWrapper';\n\nexport type RecipeFilter = {\n  id:      number;\n  title:   string;\n  slug:    string;\n  total?:  number;\n  rating?: number;\n}\n\nexport interface IFilterProps {\n  title:   string;\n  qsTitle: string;\n  qs:      Record<string, string>;\n  data:    Array<RecipeFilter> | undefined;\n  multiSelect?: boolean;\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n\n  sort?: 'off' | 'on';\n\n  cssClass?: string;\n}\n\ntype EnhancedFilterData = {\n  label: string;\n  active: boolean;\n} & RecipeFilter;\n\nconst Filter: React.FC<IFilterProps> = ({ title, qsTitle, data, qs, multiSelect, cssClass, buildUrl, sort }: IFilterProps) => {\n  const intl = useIntl();\n\n  const dataFormatted: Array<EnhancedFilterData> = useMemo(() => {\n    let res = (data\n      ?.map(item => {\n          let active = false;\n          if (qs[qsTitle]) {\n            if (qs[qsTitle].split(',').includes(item.slug)) {\n              active = true;\n            }\n          }\n\n          if (!active && (item.total == null || item.total === 0)) {\n            return undefined as unknown as EnhancedFilterData;\n          }\n\n          return ({\n            ...item,\n            label: optionallyFormatMessage(intl, `${qsTitle}.`, item.title),\n            active: active,\n          });\n        }) ?? [])\n      .filter(item => item != null);\n\n    if (sort == null || sort === 'on') {\n      res = res.sort(sortByLabel);\n    }\n\n    return res;\n  }, [data, qs, qsTitle]);\n\n  const items = useMemo(() => (\n    dataFormatted\n    .map(item => (\n      <li key={item.slug}>\n        <ConditionalWrapper\n            condition = {item.label.length > 10}\n            render = {childr => <Tooltip id={item.title} tooltip={item.label} placement='bottom' className='filter-title-tooltip'>{childr}</Tooltip>}>\n          <Link to={buildUrl(qsTitle, item.slug, multiSelect)} className={classNames('list-group-item list-group-item-action', { active: item.active })}>\n            <div className='name'>{item.label}</div>\n            <span className='count'>{`(${item.total})`}</span>\n            {item.active && <Icon icon='x-square' variant='light' />}\n          </Link>\n        </ConditionalWrapper>\n      </li>\n    )) ?? []\n  ), [dataFormatted, qsTitle, multiSelect, buildUrl]);\n\n  if (data != null && items.length === 0) return null;\n\n  return (\n    <Accordion.Item eventKey={qsTitle} className={classNames('filter-group', cssClass)}>\n      <Accordion.Header as='h3' className='list-group-title'>{title}</Accordion.Header>\n      <Accordion.Body as='ul' className='filter-list'>\n        {items}\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n};\n\nexport default Filter;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Accordion, Button, Card } from 'react-bootstrap';\n\nimport '../css/filter.css';\n\nimport Filter from './Filter';\nimport Icon from '../../common/components/Icon';\nimport { CategoryCount, RatingCount } from '../store/FilterTypes';\nimport Tooltip from '../../common/components/Tooltip';\n\nexport interface ISearchMenuProps {\n  qs: Record<string, string>;\n  courses:  Array<CategoryCount> | undefined;\n  cuisines: Array<CategoryCount> | undefined;\n  ratings:  Array<RatingCount>   | undefined;\n  tags:     Array<CategoryCount> | undefined;\n\n  hasActiveFilter: boolean;\n  resetFilterUrl: string;\n  openFilters: Array<string>;\n  setOpenFilters: (filters: Array<string>) => void;\n\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\nconst SearchMenu: React.FC<ISearchMenuProps> = ({\n    qs, courses, cuisines, ratings, tags,\n    hasActiveFilter, resetFilterUrl, openFilters, setOpenFilters,\n    buildUrl }: ISearchMenuProps) => {\n  const intl = useIntl();\n\n  const messages = defineMessages({\n    reset: {\n      id: 'filter.reset',\n      description: 'Filter reset',\n      defaultMessage: 'Reset',\n    },\n    filter_course: {\n      id: 'filter.filter_course',\n      description: 'Filter field course',\n      defaultMessage: 'Courses',\n    },\n    filter_cuisine: {\n      id: 'filter.filter_cuisine',\n      description: 'Filter field cuisine',\n      defaultMessage: 'Cuisines',\n    },\n    filter_rating: {\n      id: 'filter.filter_rating',\n      description: 'Filter field rating',\n      defaultMessage: 'Ratings',\n    },\n    filter_tag: {\n      id: 'filter.filter_tag',\n      description: 'Filter field tag',\n      defaultMessage: 'Tags',\n    },\n    title: {\n      id: 'filter.title',\n      description: 'Title',\n      defaultMessage: 'Title',\n    },\n    rating: {\n      id: 'filter.rating',\n      description: 'rating',\n      defaultMessage: 'Rating',\n    },\n    pub_date: {\n      id: 'filter.pub_date',\n      description: 'pub_date',\n      defaultMessage: 'Created Date',\n    },\n    filters: {\n      id: 'filter.filters',\n      description: 'Filters',\n      defaultMessage: 'Filters',\n    },\n    show_filters: {\n      id: 'filter.show_filters',\n      description: 'Show Filters',\n      defaultMessage: 'Show Filters',\n    },\n    hide_filters: {\n      id: 'filter.hide_filters',\n      description: 'Hide Filters',\n      defaultMessage: 'Hide Filters',\n    },\n    reset_filters: {\n      id: 'filter.reset_filters',\n      description: 'Reset Filters',\n      defaultMessage: 'Reset Filters',\n    },\n    filter_ordering: {\n      id: 'filter.filter_ordering',\n      description: 'Filter field ordering',\n      defaultMessage: 'Ordering',\n    },\n    x_stars: {\n      id: 'filter.x_stars',\n      description: 'X Stars',\n      defaultMessage: '{rating, number} stars',\n    },\n  });\n\n  const [showMenu, setShowMenu] = useState<boolean>(false);\n\n  const toggleMenu = () => {\n    setShowMenu(prev => !prev);\n  };\n\n  const mobileHeader = (\n    <div className='sidebar-header'>\n      <Button type='button' variant='transparent' className='filter-header' onClick={toggleMenu}>\n        {showMenu ? intl.formatMessage(messages.hide_filters) : intl.formatMessage(messages.show_filters)}\n        <Icon icon={showMenu ? 'chevron-up' : 'chevron-down'} variant='light' className={classNames({ 'reset-margin': hasActiveFilter })} />\n      </Button>\n      {hasActiveFilter && (\n        <div className='filter-header-clear'>\n          <Link className='clear-filter-mobile btn btn-transparent' to={resetFilterUrl}>\n            {intl.formatMessage(messages.reset)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n\n  const handleSelect = (eventKey: string | string[] | null) => {\n    const newOpenFilters: Array<string> = Array.isArray(eventKey) ? eventKey : [(eventKey ?? '')];\n    setOpenFilters(newOpenFilters);\n  };\n\n  return (\n    <Card>\n      <Card.Header className='visible-xs'>\n        {mobileHeader}\n      </Card.Header>\n      <Card.Header className='hidden-xs filter-title'>\n        {intl.formatMessage(messages.filters)}\n        {hasActiveFilter && (\n          <Tooltip id='clear-tooltip' tooltip={intl.formatMessage(messages.reset_filters)} placement='bottom'>\n            <Link className='clear-filter-desktop btn btn-transparent' to={resetFilterUrl}>\n              <Icon icon='arrow-counterclockwise' variant='light' />\n            </Link>\n          </Tooltip>\n        )}\n      </Card.Header>\n      <Card.Text as='div' className={classNames('sidebar', { 'hidden-xs': !showMenu })}>\n        <Accordion activeKey={openFilters} flush alwaysOpen className='filter-group-list' onSelect={handleSelect as any}>\n          <Filter\n              title    = {intl.formatMessage(messages.filter_course)}\n              qsTitle  = 'course'\n              data     = {courses}\n              qs       = {qs}\n              multiSelect\n              buildUrl = {buildUrl} />\n          <Filter\n              title    = {intl.formatMessage(messages.filter_cuisine)}\n              qsTitle  = 'cuisine'\n              data     = {cuisines}\n              qs       = {qs}\n              multiSelect\n              buildUrl = {buildUrl} />\n          <Filter\n              title    = {intl.formatMessage(messages.filter_rating)}\n              qsTitle  = 'rating'\n              data     = {ratings?.map(r => ({\n                  id:     r.rating,\n                  rating: r.rating,\n                  total:  r.total,\n                  slug:   String(r.rating),\n                  title:  intl.formatMessage(messages.x_stars, { rating: r.rating }),\n              }))}\n              qs       = {qs}\n              multiSelect\n              buildUrl = {buildUrl}\n              sort = 'off' />\n          <Filter\n              title    = {intl.formatMessage(messages.filter_tag)}\n              qsTitle  = 'tag'\n              data     = {tags}\n              qs       = {qs}\n              multiSelect\n              buildUrl = {buildUrl} />\n        </Accordion>\n        {hasActiveFilter && (\n          <div className='row reset-search-row hidden-xs'>\n            <Link className='btn btn-outline-danger reset-search hidden-xs' to={resetFilterUrl}>\n              {intl.formatMessage(messages.reset)}\n            </Link>\n          </div>\n        )}\n      </Card.Text>\n    </Card>\n  );\n};\n\nexport default SearchMenu;\n","import { useEffect, useMemo, useState } from 'react';\nimport { Dispatch } from 'redux';\n\nimport * as FilterActions from '../store/FilterActions';\nimport { CombinedStore } from '../../app/Store';\nimport SearchMenu from '../components/SearchMenu';\nimport { getResourcePath } from '../../common/utility';\nimport { useDispatch, useSelector } from '../../common/store/redux';\n\nexport interface ISearchMenuContainerProps {\n  qs:       Record<string, string>;\n  qsString: string;\n\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\nconst SearchMenuContainer: React.FC<ISearchMenuContainerProps> = ({\n    qs, qsString, buildUrl }: ISearchMenuContainerProps) => {\n  const dispatch = useDispatch();\n\n  const courses  = useSelector((state: CombinedStore) => state.browse.filters.courses.items);\n  const cuisines = useSelector((state: CombinedStore) => state.browse.filters.cuisines.items);\n  const ratings  = useSelector((state: CombinedStore) => state.browse.filters.ratings.items);\n  const tags     = useSelector((state: CombinedStore) => state.browse.filters.tags.items);\n\n  const [openFilters, setOpenFilters] = useState<Array<string>>(Object.keys(qs));\n\n  const qsMergedDefaults = qs;\n\n  const reloadData = () => {\n    const dispatchQueue: Array<(dispatch: Dispatch) => void> = [];\n\n    if (openFilters.includes('course') && courses?.[qsString] == null) {\n      dispatchQueue.push(FilterActions.loadCourses(qsMergedDefaults));\n    }\n    if (openFilters.includes('cuisine') && cuisines?.[qsString] == null) {\n      dispatchQueue.push(FilterActions.loadCuisines(qsMergedDefaults));\n    }\n    if (openFilters.includes('rating') && ratings?.[qsString] == null) {\n      dispatchQueue.push(FilterActions.loadRatings(qsMergedDefaults));\n    }\n    if (openFilters.includes('tag') && tags?.[qsString] == null) {\n      dispatchQueue.push(FilterActions.loadTags(qsMergedDefaults));\n    }\n\n    let delay = 0;\n    const ADD_DELAY = 50;\n    for (let ix = 0; ix < dispatchQueue.length; ++ix) {\n      setTimeout(() => {\n        dispatch(dispatchQueue[ix]);\n      }, delay);\n      delay += ADD_DELAY;\n    }\n  };\n\n  const handleChangeOpenFilters = (newOpenFilters: Array<string>) => {\n    setOpenFilters(newOpenFilters);\n  };\n\n  useEffect(() => {\n    reloadData();\n  }, [qsString, openFilters]);\n\n  const resetFilterUrl = useMemo(() => {\n    if (!qs.search) {\n      return getResourcePath('/browser');\n    } else {\n      const searchString = new URLSearchParams({ search: qs.search }).toString();\n      return getResourcePath(`/browser?${searchString}`);\n    }\n  }, [qs]);\n\n  const hasActiveFilter = Object.keys(qs).filter(key => !['limit', 'offset', 'search'].includes(key)).length !== 0;\n\n  return (\n    <SearchMenu\n        courses  = {courses?.[qsString]}\n        cuisines = {cuisines?.[qsString]}\n        ratings  = {ratings?.[qsString]}\n        tags     = {tags?.[qsString]}\n        qs       = {qs}\n\n        hasActiveFilter = {hasActiveFilter}\n        resetFilterUrl  = {resetFilterUrl}\n        openFilters    = {openFilters}\n        setOpenFilters = {handleChangeOpenFilters}\n\n        buildUrl = {buildUrl} />\n  );\n};\n\nexport default SearchMenuContainer;\n","import { useEffect, useRef, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\nimport * as _ from 'lodash-es';\n\nimport Icon from '../../common/components/Icon';\nimport Input from '../../common/components/Input/Input';\n\nexport interface ISearchBarProps {\n  value:  string;\n  doSearch: (value: string) => void;\n}\n\ninterface IFormData {\n  value: string;\n}\n\nconst SearchBar: React.FC<ISearchBarProps> = ({ value, doSearch }: ISearchBarProps) => {\n  const intl = useIntl();\n\n  const { formatMessage } = intl;\n  const messages = defineMessages({\n    input_placeholder: {\n      id: 'searchbar.placeholder',\n      description: 'SearchBar input placeholder',\n      defaultMessage: 'Enter a title, tag, or ingredient',\n    },\n  });\n\n  const [formData, setFormData] = useState<IFormData>({ value: value ?? '' });\n  const previousSearch = useRef<string>(value ?? '');\n\n  useEffect(() => {\n    if (formData.value !== value) {\n      setFormData({ value: value });\n    }\n  }, [value]);\n\n  useEffect(() => {\n    if (previousSearch.current !== formData.value) {\n      doSearch(formData.value);\n      previousSearch.current = formData.value;\n    }\n  }, [formData]);\n\n  const handleChange = (attr: string, val: string) => {\n    setFormData(prev => {\n      const newState = _.cloneDeep(prev);\n      _.set(newState, attr, val);\n      return newState;\n    });\n  };\n\n  const handleClearInput = () => {\n    setFormData({ value: '' });\n  };\n\n  const clearInput = (\n    <Button variant='secondary' className='search-clear' onClick={handleClearInput}>\n      <Icon icon='x' variant='light' size='2x' />\n    </Button>\n  );\n\n  return (\n    <Input\n        name  = 'value'\n        value = {formData.value}\n        placeholder = {formatMessage(messages.input_placeholder)}\n        required\n        inputAdornmentStart = {<Icon icon='search' variant='light' />}\n        inputAdornmentEnd = {formData.value.length > 0 ? clearInput : undefined}\n        onChange = {handleChange}\n        debounceTimeout = {400}\n        className = 'search-bar' />\n  );\n};\n\nexport default SearchBar;\n","import { defineMessages, useIntl } from 'react-intl';\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { SearchResult } from '../store/SearchTypes';\nimport P from '../../common/components/P';\nimport DefaultFilters from '../constants/DefaultFilters';\nimport { optionallyFormatMessage, toNumberDefault } from '../../common/utility';\n\nexport interface ISearchSummaryProps {\n  search:   SearchResult | undefined;\n  qs:       Record<string, string>;\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\nconst SearchSummary: React.FC<ISearchSummaryProps> = ({ search, qs, buildUrl }: ISearchSummaryProps) => {\n  const intl = useIntl();\n\n  const { formatMessage } = intl;\n  const messages = defineMessages({\n    search_summary_results: {\n      id: 'searchsummary.results',\n      description: 'Number of results, if there is no pagination.',\n      defaultMessage: '{resultsCount, plural, one {# result} other {# results}}',\n    },\n    search_summary_results_pagination: {\n      id: 'searchsummary.results_pagination',\n      description: 'Number of results, with pagination from - to.',\n      defaultMessage: '{offset}-{offsetLast} of {resultsCount} results',\n    },\n    search_summary_sort_by: {\n      id: 'searchsummary.sort_by',\n      description: 'Sort by title/...',\n      defaultMessage: 'Sort by: {sort}',\n    },\n\n    sort_by_pub_date: {\n      id: 'sort_by.pub_date',\n      defaultMessage: 'Create date',\n    },\n    sort_by_rating: {\n      id: 'sort_by.rating',\n      defaultMessage: 'Rating',\n    },\n    sort_by_title: {\n      id: 'sort_by.title',\n      defaultMessage: 'Title',\n    },\n  });\n\n  const toSortSlug = (sort: string): string => (\n    sort.startsWith('-') ? sort.substring(1) : sort\n  );\n\n  const resultsCountD: number | undefined = search?.totalRecipes ?? 0;\n  const offset: number = toNumberDefault(qs.offset, 0);\n  const limit: number  = toNumberDefault(qs.limit, DefaultFilters.limit ?? 12);\n  const withPagination = search != null && search.totalRecipes > limit;\n  const currentSort    = qs.ordering != null ? toSortSlug(qs.ordering) : toSortSlug('-pub_date');\n\n  const handleSortByClick = (event: React.MouseEvent<HTMLAnchorElement>, sortSlug: string) => {\n    if (currentSort === sortSlug) {\n      event.preventDefault();\n    }\n  };\n\n  const dropdownItems = ['title', '-pub_date', '-rating'].map(sort => {\n    const sortSlug = toSortSlug(sort);\n    return (\n      <Dropdown.Item key={sort} as={Link} to={buildUrl('ordering', sort)} active={currentSort === sortSlug} onClick={(event: React.MouseEvent<HTMLAnchorElement>) => handleSortByClick(event, sortSlug)}>\n        {optionallyFormatMessage(intl, 'sort_by.', sortSlug)}\n      </Dropdown.Item>\n    );\n  });\n\n  return (\n    <div className='search-summary'>\n      <P className='results'>\n        {withPagination  && formatMessage(messages.search_summary_results_pagination, { offset: offset + 1, offsetLast: Math.min(offset + limit, resultsCountD), resultsCount: resultsCountD })}\n        {!withPagination && formatMessage(messages.search_summary_results, { resultsCount: resultsCountD })}\n      </P>\n      <Dropdown className='sort-by-dropdown'>\n        <Dropdown.Toggle variant='outline-primary' id='sort-by-button' disabled={search == null}>\n          {formatMessage(messages.search_summary_sort_by, { sort: optionallyFormatMessage(intl, 'sort_by.', currentSort) })}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {dropdownItems}\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default SearchSummary;\n","import { Col, Row } from 'react-bootstrap';\n\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport { SearchResult } from '../store/SearchTypes';\nimport SearchResults from '../containers/SearchResults';\nimport SearchMenuContainer from '../containers/SearchMenuContainer';\nimport SearchBar from './SearchBar';\nimport Loading from './Loading';\nimport SearchSummary from './SearchSummary';\n\nexport interface ISearchProps {\n  search:   Record<string, SearchResult> | undefined;\n  qs:       Record<string, string>;\n  qsString: string;\n\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n  doSearch: (value: string) => void;\n  onOpenRecipe: (rec: RecipeList) => void;\n}\n\nconst Search: React.FC<ISearchProps> = ({\n    search, qs, qsString,\n    buildUrl, doSearch, onOpenRecipe }: ISearchProps) => {\n  const isInit  = search != null && Object.keys(search).length > 0;\n  const qsSearchResult = search?.[qsString];\n\n  return (\n    <>\n      <SearchBar\n          value    = {qs.search ?? ''}\n          doSearch = {doSearch} />\n      <SearchSummary\n          qs       = {qs}\n          search   = {qsSearchResult}\n          buildUrl = {buildUrl}\n          />\n      {!isInit && (\n        <Loading />\n      )}\n      {isInit && (\n        <Row>\n          <Col xs={12} className='filter-panel'>\n            <SearchMenuContainer\n                qs       = {qs}\n                qsString = {qsString}\n                buildUrl = {buildUrl}\n            />\n          </Col>\n          <Col xs={12} className='results-panel'>\n            <SearchResults\n                qs       = {qs}\n                qsString = {qsString}\n                buildUrl = {buildUrl}\n                onOpenRecipe = {onOpenRecipe}\n            />\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default Search;\n","import React, { useCallback, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useNavigate } from 'react-router';\nimport * as _ from 'lodash-es';\n\nimport '../css/browse.css';\n\nimport Search from '../components/Search';\nimport * as SearchActions from '../store/SearchActions';\nimport * as RecipeActions from '../../recipe/store/RecipeActions';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport DefaultFilters from '../constants/DefaultFilters';\nimport PageWrapper from '../../common/components/PageWrapper';\nimport { CombinedStore } from '../../app/Store';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport { getResourcePath, objToSearchString } from '../../common/utility';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function mergeDefaultFilters(\n    defaultFilters: Record<string, unknown>,\n    params: Record<string, string>\n  ): Record<string, string> {\n  const filterS: Record<string, string> = {};\n  Object.keys(defaultFilters).forEach(key => {\n    filterS[key] = String(defaultFilters[key]);\n  });\n\n  return _.merge(filterS, params);\n}\n\nexport function buildSearchString(route: string, qs: Record<string, string>, value: string): string {\n  const qsBuilder = _.cloneDeep(qs);\n\n  delete qsBuilder.offset;\n  if (value !== '') {\n    qsBuilder.search = value;\n  } else {\n    delete qsBuilder.search;\n  }\n\n  const str = objToSearchString(qsBuilder);\n  return getResourcePath(str ? `/${route}?${str}` : `/${route}`);\n}\n\nexport function buildSearchUrl(route: string, qs: Record<string, string>, name: string, value: string, multiSelect = false): string {\n  if (!name) return getResourcePath(`/${route}`);\n\n  const qsBuilder = _.cloneDeep(qs);\n\n  delete qsBuilder.offset;\n\n  if (value !== '') {\n    if (qsBuilder[name] && multiSelect) {\n      const query = qsBuilder[name].split(',');\n      if (query.includes(value.toString())) {\n        if (query.length === 1) {\n          delete qsBuilder[name];\n        } else {\n          let str = '';\n          // eslint-disable-next-line\n          query.map(val => { val != value ? str += val + ',' : ''});\n          qsBuilder[name] = str.substring(0, str.length - 1);\n        }\n      } else {\n        qsBuilder[name] = `${qsBuilder[name]},${value}`;\n      }\n    } else {\n      qsBuilder[name] = value;\n    }\n  } else {\n    delete qsBuilder[name];\n  }\n\n  const str = objToSearchString(qsBuilder);\n  return getResourcePath(str ? `/${route}?${str}` : `/${route}`);\n}\n\nconst BrowsePage: React.FC = () => {\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const nav = useNavigate();\n  const [searchParams] = useSearchParams();\n\n  const search   = useSelector((state: CombinedStore) => state.browse.search.items);\n\n  const qs = Object.fromEntries(searchParams);\n  const qsMergedDefaults = mergeDefaultFilters(DefaultFilters, qs);\n  const qsMergedString = objToSearchString(qsMergedDefaults);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    dispatch(SearchActions.loadRecipes(qsMergedDefaults));\n  }, [searchParams]);\n\n  const handleBuildUrl = useCallback((name: string, value: string, multiSelect = false) => (\n    buildSearchUrl('browser', qs, name, value, multiSelect)\n  ), [qs]);\n\n  const doSearch = useCallback((value: string) => {\n    const str = buildSearchString('browser', qs, value);\n    nav(str);\n  }, [qs, nav]);\n\n  const handleOpenRecipe = useCallback((rec: RecipeList) => {\n    dispatch(RecipeActions.preload(rec));\n  }, [dispatch]);\n\n  return (\n    <PageWrapper title={intl.messages['nav.recipes'] as string}>\n      <Search\n          qs        = {qsMergedDefaults}\n          qsString  = {qsMergedString}\n          buildUrl  = {handleBuildUrl}\n          doSearch  = {doSearch}\n          onOpenRecipe = {handleOpenRecipe}\n\n          search    = {search} />\n    </PageWrapper>\n  );\n};\n\nexport default BrowsePage;\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport '../css/pagination.css';\n\nexport interface IPaginationLinkProps {\n  title:     string;\n  offset:    number;\n  active?:   boolean;\n  disabled?: boolean;\n  buildUrl:  (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n  className?: string;\n}\n\nexport const PaginationLink: React.FC<IPaginationLinkProps> = ({ title, offset, active, buildUrl, disabled, className }: IPaginationLinkProps) => {\n  const handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    if (active || disabled) {\n      event.preventDefault();\n    }\n  };\n\n  return (\n    <li className={classNames('page-item', className, { active: active, disabled: disabled })}>\n      {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n      <Link className={classNames('page-link', 'btn-outline-primary', { active: active, disabled: disabled })} to={!disabled ? buildUrl('offset', String(offset)) : '#'} onClick={handleClick}>\n        {title}\n      </Link>\n    </li>\n  );\n};\n","import React from 'react';\nimport { Pagination as BootstraPagination } from 'react-bootstrap';\n\nimport { PaginationLink } from '../../common/components/Pagination';\n\nexport interface IPaginationProps {\n  offset:   number;\n  limit:    number;\n  count:    number;\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\ninterface IPaginationNumbersListProps {\n  offset: number;\n  limit:  number;\n  count:  number;\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n}\n\ntype PaginationPageRole = 'first' | 'last' | 'page' | 'next' | 'skipper-far' | 'skipper-near';\n\ntype PaginationPageNumber = {\n  index: number;\n  role:  PaginationPageRole;\n}\n\nfunction getFakeRollForFiller(numOfGeneratedLinks: number): PaginationPageRole {\n  if (numOfGeneratedLinks < 4) {\n    return 'next';\n  } else if (numOfGeneratedLinks < 6) {\n    return 'skipper-near';\n  } else {\n    return 'skipper-far';\n  }\n}\n\nfunction generatePageList(page: number, pages: number): Array<PaginationPageNumber> {\n  const pageList: Array<PaginationPageNumber> = [];\n\n  const numOfLinks = 8;\n\n  if (pages <= numOfLinks) {\n    for (let i = 1; i <= pages; i++) {\n      pageList.push({ index: i, role: 'page' });\n    }\n    return pageList;\n  }\n\n  /**\n   * Rules: As SPA, we want a consistent number of links, to avoid jumping.\n   * - Always the first and last page.\n   * - Always the next following page.\n   * - 2 Skipper before current page. Place redundant ones after.\n   * - 2 Skipper behind current page to last page. Place redundant ones after.\n   */\n\n  // First page\n  if (page > 1) {\n    pageList.push({ index: 1, role: 'first' });\n  }\n\n  // Add 2 skipper before current page, if applicable.\n  let intervalEnd = 1; // first page\n  let previousPage = intervalEnd;\n  if (page > 3) {\n    const skipperStep = Math.round((page - previousPage) / 2);\n    previousPage = page - skipperStep;\n    pageList.push({ index: previousPage, role: 'skipper-far' });\n  }\n  if (page > 2) {\n    const skipperStep = Math.ceil((page - previousPage) / 3);\n    if (page - skipperStep !== previousPage) {\n      previousPage = page - skipperStep;\n      pageList.push({ index: previousPage, role: 'skipper-near' });\n    }\n  }\n\n  // Current page\n  previousPage = page;\n  pageList.push({ index: page, role: 'page' });\n\n  // Following page\n  if (previousPage < pages - 1) {\n    previousPage += 1;\n    pageList.push({ index: previousPage, role: page === 1 ? 'first' : 'next' });\n  }\n\n  // On page 1, page === first -> fill up\n  if (page === 1) {\n    previousPage += 1;\n    pageList.push({ index: previousPage, role: 'next' });\n  }\n\n  // Use remaining skippers, that could not been placed before the current page, additionally after the current page.\n  if (pageList.length <= 4 && previousPage < pages - 1) {\n    previousPage += 1;\n    pageList.push({ index: previousPage, role: 'skipper-far' });\n  }\n  if (pageList.length <= 4 && previousPage < pages - 1) {\n    previousPage += 1;\n    pageList.push({ index: previousPage, role: 'skipper-near' });\n  }\n\n  if (previousPage < pages - 1) {\n    // Add 2 skipper after current page, if applicable.\n    const ixPage = pageList.length - 1;\n    intervalEnd = pages;\n    if (previousPage < pages - 2) {\n      const skipperStep = Math.ceil((intervalEnd - previousPage) / 2);\n      intervalEnd = previousPage + skipperStep;\n      pageList.push({ index: intervalEnd, role: 'skipper-near' });\n    }\n    if (previousPage < pages - 1) {\n      const skipperStep = Math.ceil((intervalEnd - previousPage) / 3);\n      if (skipperStep > 0) {\n        intervalEnd = previousPage + skipperStep;\n        pageList.splice(ixPage + 1, 0, { index: intervalEnd, role: 'skipper-far' });\n      }\n    }\n  }\n\n  // Last page\n  if (page !== pages) {\n    pageList.push({ index: pages, role: 'last' });\n  }\n\n  // Fill remaining slots up (should be always maxSize buttons).\n  let ixPrevFiller = pageList.findIndex(p => p.index === page);\n  if (ixPrevFiller === -1) throw new Error('Internal error: Page index not found.');\n  while (pageList.length < numOfLinks && ixPrevFiller > 0) {\n    while (ixPrevFiller > 0) {\n      const baseValue = pageList[ixPrevFiller].index;\n      const prevVal = pageList[ixPrevFiller - 1].index;\n      if (baseValue - prevVal > 1) {\n        pageList.splice(ixPrevFiller, 0, { index: baseValue - 1, role: getFakeRollForFiller(pageList.filter(p => p.role !== 'skipper-far').length) });\n        break;\n      }\n      --ixPrevFiller;\n    }\n  }\n\n  return pageList;\n}\n\nconst PaginationNumbersList: React.FC<IPaginationNumbersListProps> = ({ offset, limit, count, buildUrl }: IPaginationNumbersListProps) => {\n  const numOfPages = Math.ceil(count / limit);\n  const currentPage = Math.ceil(offset / limit) + 1;\n\n  const pageList = generatePageList(currentPage, numOfPages);\n\n  const pageListJsx: Array<React.ReactNode> = pageList.map(p => (\n    <PaginationLink title={String(p.index)} offset={limit * (p.index - 1)} key={String(p.index)} active={currentPage === p.index} buildUrl={buildUrl} className={p.role} />\n  ));\n\n  return <>{pageListJsx}</>;\n};\n\nconst Pagination: React.FC<IPaginationProps> = ({ offset, limit, count, buildUrl }: IPaginationProps) => {\n  const next = offset + limit;\n  const previous = offset - limit;\n\n  if (count <= limit) return null;\n\n  return (\n    <div>\n      <BootstraPagination>\n        <PaginationLink title='←' offset={previous} key='previous' buildUrl={buildUrl} disabled={previous < 0} />\n        <PaginationNumbersList    offset={offset}   limit={limit}  buildUrl={buildUrl} count={count} />\n        <PaginationLink title='→' offset={next}     key='next'     buildUrl={buildUrl} disabled={next > count} />\n      </BootstraPagination>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import classNames from 'classnames';\nimport { useMemo } from 'react';\n\nimport { toNumberDefault } from '../../common/utility';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport { PaginationProps } from '../constants/DefaultFilters';\nimport { SearchResult } from '../store/SearchTypes';\nimport ListRecipes from './ListRecipes';\nimport Pagination from './Pagination';\n\nexport interface IResultsProps {\n  pending:  boolean;\n  search:   SearchResult;\n  qs:       Record<string, string>;\n  defaults: Partial<PaginationProps>;\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n  onOpenRecipe: (rec: RecipeList) => void;\n}\n\nconst Results: React.FC<IResultsProps> = ({ pending, search, qs, defaults, buildUrl, onOpenRecipe }: IResultsProps) => {\n  const listJsx = useMemo(() => (\n    <ListRecipes\n        data = {search.recipes}\n        onOpenRecipe = {onOpenRecipe} />\n  ), [search.recipes, onOpenRecipe]);\n\n  const paginationJsx = useMemo(() => (\n    <Pagination\n        limit    = {toNumberDefault(qs.limit, defaults.limit ?? 12)}\n        count    = {search.totalRecipes}\n        offset   = {toNumberDefault(qs.offset, defaults.offset ?? 0)}\n        buildUrl = {buildUrl} />\n  ), [search.totalRecipes, qs, defaults, buildUrl, onOpenRecipe]);\n\n  return (\n    <div className={classNames('results-container', { pending: pending })}>\n      {listJsx}\n      {paginationJsx}\n    </div>\n  );\n};\n\nexport default Results;\n","import { defineMessages, useIntl } from 'react-intl';\n\nimport P from '../../common/components/P';\n\nconst NoResults: React.FC = () => {\n  const intl = useIntl();\n  const messages = defineMessages({\n    no_results: {\n      id: 'browse.no_results',\n      description: 'No results header',\n      defaultMessage: 'There are no results for your search.',\n    },\n  });\n\n  return (\n    <P className='no-results placeholder'>{intl.formatMessage(messages.no_results)}</P>\n  );\n};\n\nexport default NoResults;\n","import { useEffect, useState } from 'react';\n\nimport { useSelector } from '../../common/store/redux';\nimport DefaultFilters from '../constants/DefaultFilters';\nimport Results from '../components/Results';\nimport NoResults from '../components/NoResults';\nimport Loading from '../components/Loading';\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport { CombinedStore } from '../../app/Store';\nimport { SearchResult } from '../store/SearchTypes';\n\nexport interface ISearchResultsProps {\n  qs:       Record<string, string>;\n  qsString: string;\n\n  buildUrl: (qsTitle: string, recipeSlug: string, multiSelect?: boolean) => string;\n  onOpenRecipe: (rec: RecipeList) => void;\n}\n\nconst SearchResults: React.FC<ISearchResultsProps> = ({ qs, qsString, buildUrl, onOpenRecipe }: ISearchResultsProps) => {\n  const searchState = useSelector((state: CombinedStore) => state.browse.search);\n  const pending = searchState.meta.pending === PendingState.LOADING;\n\n  const [searchResults, setSearchResults] = useState<SearchResult | undefined>(undefined);\n\n  useEffect(() => {\n    if (searchState.meta.pending === PendingState.COMPLETED) {\n      setSearchResults(searchState.items?.[qsString]);\n    }\n  }, [searchState.meta.pending, searchState.items]);\n\n  useEffect(() => {\n    const res = searchState.items?.[qsString];\n    if (res) {\n      setSearchResults(res);\n    }\n  }, [qsString]);\n\n  return (\n    <>\n      {pending && !searchResults && <Loading />}\n      {!pending && (searchResults == null || searchResults.recipes.length === 0) && <NoResults />}\n      {searchResults != null && searchResults.recipes.length > 0 && (\n        <Results\n            pending  = {pending}\n            search   = {searchResults}\n            qs       = {qs}\n            defaults = {DefaultFilters}\n            buildUrl = {buildUrl}\n            onOpenRecipe = {onOpenRecipe}\n        />\n      )}\n    </>\n  );\n};\n\nexport default SearchResults;\n","import { handleError, request } from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { BROWSER_SEARCH_STORE, SearchDispatch, SearchResultDto, toSearchResult } from './SearchTypes';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { objToSearchString } from '../../common/utility';\nimport { toBasicAction } from '../../common/store/redux';\n\nconst FILTER_QUERY_PARAMETER_MAPPING: Record<string, string> = {\n  cuisine: 'cuisine__slug',\n  course:  'course__slug',\n  tag:     'tag__slug',\n};\n\nexport const loadRecipes = (filters: Record<string, string>) => (dispatch: SearchDispatch) => {\n  dispatch({ ...toBasicAction(BROWSER_SEARCH_STORE, ACTION.LOADING) });\n\n  const parsedFilters: Record<string, string> = {};\n  Object.keys(filters).forEach(f => {\n    if (filters[f] !== null) {\n      parsedFilters[f in FILTER_QUERY_PARAMETER_MAPPING ? FILTER_QUERY_PARAMETER_MAPPING[f] : f] = filters[f];\n    }\n  });\n\n  request()\n    .get(serverURLs.browse)\n    .query(parsedFilters)\n    .then(res => {\n      const resDto: SearchResultDto = res.body;\n      dispatch({\n        ...toBasicAction(\n          BROWSER_SEARCH_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filters),\n        payload: toSearchResult(resDto),\n      });\n    })\n    .catch(err => { dispatch(handleError(err, BROWSER_SEARCH_STORE)); });\n};\n\nexport const loadRandomRecipes = (filters: Record<string, string>) => (dispatch: SearchDispatch) => {\n  dispatch({ ...toBasicAction(BROWSER_SEARCH_STORE, ACTION.LOADING) });\n\n  const parsedFilters: Record<string, string> = {};\n  Object.keys(filters).forEach(f => {\n    if (filters[f] !== null) {\n      parsedFilters[f in FILTER_QUERY_PARAMETER_MAPPING ? FILTER_QUERY_PARAMETER_MAPPING[f] : f] = filters[f];\n    }\n  });\n\n  request()\n    .get(serverURLs.mini_browse)\n    .query(parsedFilters)\n    .then(res => {\n      const resDto: SearchResultDto = res.body;\n      dispatch({\n        ...toBasicAction(\n          BROWSER_SEARCH_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        id: objToSearchString(filters),\n        payload: toSearchResult(resDto),\n      });\n    })\n    .catch(err => { dispatch(handleError(err, BROWSER_SEARCH_STORE)); });\n};\n","import { useContext, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useLocation, useNavigate } from 'react-router';\n\nimport { AnyComponent } from '../../types/Types';\nimport DynamicHeightContext from '../context/DynamicHeightContext';\nimport ArrayReducerType from '../store/ArrayReducerType';\nimport ItemReducerType from '../store/ItemReducerType';\nimport { getEnv, getResourcePath } from '../utility';\nimport ErrorBoundary from './ErrorBoundary';\n\n/** {@link PageTitleFixer} Props. */\ninterface IPageWrapperProps {\n  /** Page title. */\n  title?:   string;\n  id?:      string;\n  state?:   ItemReducerType<unknown> | ArrayReducerType<unknown>;\n  /** Page component to render. */\n  children: AnyComponent;\n}\n\n/**\n * Strips slashes etc. of the path.\n *\n * Example:\n * location.pathname = /browse/\n * toCleanLocationPath = browse\n *\n * @param path - location.pathname\n *\n * @return Nice path without gibberish.\n */\nfunction toCleanLocationPath(path: string): string {\n  const pathNoHost      = path.startsWith(getEnv('PUBLIC_URL') ?? '') ? path.substring((getEnv('PUBLIC_URL') ?? '').length) : path;\n  const startsWithSlash = pathNoHost.startsWith('/');\n  const endsWithSlash   = pathNoHost.endsWith('/');\n  const pathNoSlashes   = pathNoHost.substring(startsWithSlash ? 1 : 0, endsWithSlash ? pathNoHost.length - 1 : undefined);\n\n  return pathNoSlashes;\n}\n\n/**\n * HOC to properly set the browser title to assure accessibilty.\n */\n const PageWrapper: React.FC<IPageWrapperProps> = ({ title, id, state, children }: IPageWrapperProps) => {\n  const nav = useNavigate();\n  const location = useLocation();\n  const error = state?.meta.error;\n\n  const dynamicHeightContext = useContext(DynamicHeightContext);\n\n  useEffect(() => {\n    // ARIA: Titles should contain the application name and page title.\n    document.title = (`${title != null && title.length > 0 ? `${title} | ` : ''}OwnRecipes`);\n  }, [title]);\n\n  useEffect(() => {\n    if (error && id == null) {\n      nav(getResourcePath('/NotFound'));\n    }\n  }, [id, error]);\n\n  return (\n    <Container className={toCleanLocationPath(location.pathname)} style={{ marginTop: `${dynamicHeightContext.toolbarHeight}px` }}>\n      <ErrorBoundary verbose printStack>\n        {children}\n      </ErrorBoundary>\n    </Container>\n  );\n};\n\nexport default PageWrapper;\n","import { Button } from 'react-bootstrap';\n\nimport '../css/ratings.css';\n\nimport Icon from '../../common/components/Icon';\nimport ConditionalWrapper from '../../common/components/ConditionalWrapper';\n\nexport interface IRatingsProps {\n  stars: number;\n  onChange?: (stars: number) => void;\n}\n\ninterface IStarProps {\n  stars: number;\n  num:   number;\n  onChange?: (stars: number) => void;\n}\n\nconst Star: React.FC<IStarProps> = ({ stars, num, onChange }: IStarProps) => {\n  const handleClick = () => {\n    if (onChange) {\n      onChange(num);\n    }\n  };\n\n  const isHalfFilled = stars > (num - 1) && stars < num;\n  const icon = isHalfFilled ? 'star-half' : 'star';\n  const variant = num > stars || isHalfFilled ? 'light' : 'filled';\n\n  return (\n    <ConditionalWrapper\n        condition={onChange != null}\n        render    = {childr => <Button variant='transparent' className='rating' onClick={handleClick}>{childr}</Button>}\n        key={num}>\n      <Icon key={num} icon={icon} variant={variant} size={onChange != null ? '2x' : '1x'} />\n    </ConditionalWrapper>\n  );\n};\n\nconst Ratings: React.FC<IRatingsProps> = ({ stars, onChange }: IRatingsProps) => {\n  let starss = stars;\n  if (stars > 5) {\n    starss = 5;\n  } else if (stars < 0) {\n    starss = 0;\n  }\n\n  const starsList: Array<React.ReactNode> = Array.from({ length: 5 }, (_, i) => i + 1).map(num => (\n    <Star key={num} stars={starss} num={num} onChange={onChange} />\n  ));\n\n  return (\n    <div className='rating-stars'>\n      {starsList}\n    </div>\n  );\n};\n\nexport default Ratings;\n","import { handleError, request } from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { Recipe, RecipeAction, RecipeActionTypes, RecipeDispatch, RecipeDto, RECIPE_STORE, toRecipe } from './RecipeTypes';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { toBasicAction } from '../../common/store/redux';\n\nexport const getRecipeSuccess = (recipe: Recipe): RecipeAction => (\n  { ...toBasicAction(RECIPE_STORE, ACTION.GET_SUCCESS), payload: recipe }\n);\n\nexport const load = (recipeSlug: string) => (dispatch: RecipeDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.recipe}${recipeSlug}/`)\n    .then(res => {\n      dispatch(getRecipeSuccess(toRecipe(res.body as RecipeDto)));\n    })\n    .catch(err => dispatch(handleError(err, RECIPE_STORE)));\n};\n\nexport const deleteRecipe = (recipeSlug: string) => (dispatch: RecipeDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_STORE, ACTION.DELETE_START) });\n  request()\n    .delete(`${serverURLs.recipe}${recipeSlug}/`)\n    .then(() => {\n      dispatch({ ...toBasicAction(RECIPE_STORE, RecipeActionTypes.RECIPE_DELETE), payload: { slug: recipeSlug } });\n    })\n    .catch(err => dispatch(handleError(err, RECIPE_STORE)));\n};\n\nexport const updateServings = (recipeSlug: string, value: number) => (dispatch: RecipeDispatch) => {\n  dispatch({\n    ...toBasicAction(\n      RECIPE_STORE,\n      RecipeActionTypes.RECIPE_INGREDIENT_SERVINGS_UPDATE\n    ),\n    payload: {\n      recipeSlug: recipeSlug,\n      customServings: value,\n    },\n  });\n};\n\nexport const resetServings = (recipeSlug: string) => (dispatch: RecipeDispatch) => {\n  dispatch({\n    ...toBasicAction(\n      RECIPE_STORE,\n      RecipeActionTypes.RECIPE_INGREDIENT_SERVINGS_RESET\n    ),\n    payload: {\n      recipeSlug: recipeSlug,\n    },\n  });\n};\n\nexport const checkIngredient = (recipeSlug: string, id: number, value: boolean) => (dispatch: RecipeDispatch) => {\n  dispatch({\n    ...toBasicAction(\n      RECIPE_STORE,\n      RecipeActionTypes.RECIPE_INGREDIENT_CHECK_INGREDIENT\n    ),\n    payload: {\n      recipeSlug: recipeSlug,\n      id: id,\n      value: value,\n    },\n  });\n};\n\nexport const checkSubRecipe = (recipeSlug: string, id: number, value: boolean) => (dispatch: RecipeDispatch) => {\n  dispatch({\n    ...toBasicAction(\n      RECIPE_STORE,\n      RecipeActionTypes.RECIPE_INGREDIENT_CHECK_SUBRECIPE\n    ),\n    payload: {\n      recipeSlug: recipeSlug,\n      id: id,\n      value: value,\n    },\n  });\n};\n\nexport const checkAll = (recipeSlug: string) => (dispatch: RecipeDispatch) => {\n  dispatch({\n    ...toBasicAction(\n      RECIPE_STORE,\n      RecipeActionTypes.RECIPE_INGREDIENT_CHECK_ALL\n    ),\n    payload: {\n      recipeSlug: recipeSlug,\n    },\n  });\n};\n\nexport const unCheckAll = (recipeSlug: string) => (dispatch: RecipeDispatch) => {\n  dispatch({\n    ...toBasicAction(\n      RECIPE_STORE,\n      RecipeActionTypes.RECIPE_INGREDIENT_UNCHECK_ALL\n    ),\n    payload: {\n      recipeSlug: recipeSlug,\n    },\n  });\n};\n\n/*\nexport const bulkAdd = (recipeState: Recipe, list: string) => (dispatch: RecipeDispatch) => {\n  const format = (i: Ingredient) => {\n    const quantity = i.quantity && i.quantity !== '0' ? `${i.quantity} ` : '';\n    const measurement = i.measurement ? `${i.measurement} ` : '';\n    return quantity + measurement + i.title;\n  };\n\n  let checkedIngredients = recipeState.ingredient_groups.map(item => item.ingredients.reduce((myList, ingredient) => {\n      if (ingredient && ingredient.checked) {\n        myList.push({ list: list, title: format(ingredient) });\n      }\n      return myList;\n    }, []));\n\n  const checkedSubRecipe = recipeState.subrecipes.reduce((myList, ingredient) => {\n    if (ingredient && ingredient.checked) {\n      myList.push({ list: list, title: format(ingredient) });\n    }\n    return myList;\n  }, []);\n\n  checkedIngredients = checkedIngredients.reduce((a, b) => a.concat(b), []).concat(checkedSubRecipe);\n\n  if (checkedIngredients.length > 0) {\n    dispatch({ ...toBasicAction(RECIPE_LIST_STORE, RecipeConstants.RECIPE_LIST_LOADING) });\n    request()\n      .post(serverURLs.bulk_list_item)\n      .send(checkedIngredients)\n      .then(res => {\n        dispatch({ ...toBasicAction(RECIPE_LIST_STORE, RecipeConstants.RECIPE_LIST_COMPLETE) });\n        dispatch({\n          ...toBasicAction(\n            RECIPE_LIST_STORE\n            RecipeConstants.RECIPE_INGREDIENT_UNCHECK_ALL\n          ),\n          payload: {\n            recipeSlug: recipeState.slug,\n          },\n        });\n      })\n      .catch(err => dispatch(handleError(err, RECIPE_LIST_STORE)));\n  }\n};\n*/\n\nexport const preload = (recipe: Partial<Recipe>) => (dispatch: RecipeDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_STORE, ACTION.PRELOAD), payload: recipe });\n};\n\nexport const reset = () => (dispatch: RecipeDispatch) => {\n  dispatch({ ...toBasicAction(RECIPE_STORE, ACTION.RESET) });\n};\n"],"names":["data","onOpenRecipe","IMAGE_PLACEHOLDER","useMemo","getRecipeImagePlaceholder","getRecipeImage","recipe","photoThumbnail","images","getResourcePath","Math","floor","random","length","recipes","map","link","slug","Col","Card","className","classNames","to","onClick","variant","src","alt","placeholder","Tooltip","id","tooltip","title","placement","as","Ratings","stars","rating","info","Row","xs","sm","lg","limit","ordering","parsedFilter","filters","parsedFilters","Object","keys","forEach","f","includes","qsTitle","qs","multiSelect","cssClass","buildUrl","sort","intl","useIntl","dataFormatted","res","item","active","split","total","label","optionallyFormatMessage","filter","sortByLabel","items","ConditionalWrapper","condition","render","childr","Icon","icon","Accordion","eventKey","courses","cuisines","ratings","tags","hasActiveFilter","resetFilterUrl","openFilters","setOpenFilters","messages","defineMessages","reset","description","defaultMessage","filter_course","filter_cuisine","filter_rating","filter_tag","pub_date","show_filters","hide_filters","reset_filters","filter_ordering","x_stars","useState","showMenu","setShowMenu","mobileHeader","Button","type","prev","formatMessage","activeKey","flush","alwaysOpen","onSelect","newOpenFilters","Array","isArray","r","String","qsString","dispatch","useDispatch","useSelector","state","browse","qsMergedDefaults","reloadData","dispatchQueue","push","toBasicAction","BROWSE_FILTER_COURSE_STORE","ACTION","request","get","serverURLs","query","then","objToSearchString","payload","body","results","catch","err","handleError","BROWSE_FILTER_CUISINE_STORE","FilterActions","BROWSE_FILTER_RATING_STORE","BROWSE_FILTER_TAGS_STORE","status","delay","ix","setTimeout","useEffect","search","searchString","URLSearchParams","toString","key","value","doSearch","input_placeholder","formData","setFormData","previousSearch","useRef","current","clearInput","size","Input","name","required","inputAdornmentStart","inputAdornmentEnd","undefined","onChange","attr","val","newState","_","debounceTimeout","search_summary_results","search_summary_results_pagination","search_summary_sort_by","sort_by_pub_date","sort_by_rating","sort_by_title","toSortSlug","startsWith","substring","resultsCountD","totalRecipes","offset","toNumberDefault","DefaultFilters","withPagination","currentSort","dropdownItems","sortSlug","Dropdown","Link","event","preventDefault","handleSortByClick","P","offsetLast","min","resultsCount","disabled","isInit","qsSearchResult","Loading","SearchResults","mergeDefaultFilters","defaultFilters","params","filterS","buildSearchString","route","qsBuilder","str","buildSearchUrl","nav","useNavigate","useSearchParams","searchParams","fromEntries","qsMergedString","window","scrollTo","SearchActions","handleBuildUrl","useCallback","handleOpenRecipe","rec","RecipeActions","PageWrapper","PaginationLink","PaginationNumbersList","count","numOfPages","ceil","currentPage","pageListJsx","page","pages","pageList","i","index","role","intervalEnd","previousPage","skipperStep","round","ixPage","splice","numOfGeneratedLinks","ixPrevFiller","findIndex","p","Error","baseValue","generatePageList","next","previous","pending","defaults","listJsx","ListRecipes","paginationJsx","no_results","searchState","meta","PendingState","searchResults","setSearchResults","FILTER_QUERY_PARAMETER_MAPPING","cuisine","course","tag","loadRecipes","BROWSER_SEARCH_STORE","resDto","toSearchResult","loadRandomRecipes","toCleanLocationPath","path","pathNoHost","getEnv","startsWithSlash","endsWithSlash","endsWith","children","location","useLocation","error","dynamicHeightContext","useContext","DynamicHeightContext","document","pathname","style","marginTop","toolbarHeight","verbose","printStack","Star","num","handleClick","isHalfFilled","starss","starsList","from","getRecipeSuccess","RECIPE_STORE","load","recipeSlug","toRecipe","deleteRecipe","delete","RecipeActionTypes","updateServings","customServings","preload"],"sourceRoot":""}