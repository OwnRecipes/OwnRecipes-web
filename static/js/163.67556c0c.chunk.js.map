{"version":3,"file":"static/js/163.67556c0c.chunk.js","mappings":"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","sources":["common/components/Button.tsx","common/components/Input/Checkbox.tsx","common/components/Modal.tsx","common/components/NavButton.tsx","common/components/PageWrapper.tsx","common/hooks/useBlocker.ts","common/components/NavigationPrompt.tsx","common/components/FormStatus.tsx","common/components/ReduxForm/ReFormStatus.tsx","common/components/ReduxForm/ReInitialValuesResetter.tsx","common/components/Toast.tsx","groceryList/store/GroceryListItemsActions.ts","groceryList/store/GroceryListItemActions.ts","groceryList/components/GroceryListFooter.tsx","groceryList/components/GroceryListSummary.tsx","groceryList/components/GroceryListHeader.tsx","groceryList/components/GroceryListNewItem.tsx","groceryList/components/GroceryListItem.tsx","groceryList/components/GroceryListItems.tsx","groceryList/components/GroceryList.tsx","groceryList/containers/GroceryListContainer.tsx","groceryList/containers/GroceryListPage.tsx","groceryList/store/GroceryListActions.ts","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/ToastFade.js","../node_modules/react-bootstrap/esm/ToastContext.js","../node_modules/react-bootstrap/esm/ToastHeader.js","../node_modules/react-bootstrap/esm/ToastBody.js","../node_modules/react-bootstrap/esm/Toast.js"],"sourcesContent":["import { forwardRef } from 'react';\nimport { Button as BootstrapButton } from 'react-bootstrap';\nimport { Placement } from 'react-bootstrap/esm/types';\n\nimport '../css/button.css';\nimport { CommonProps } from '../types/OverridableComponent';\nimport ConditionalWrapper from './ConditionalWrapper';\nimport Tooltip from './Tooltip';\n\nexport interface IButtonProps extends CommonProps {\n  id:         string;\n  type?:      'button' | 'reset' | 'submit';\n  variant?:   'primary' | 'secondary' | 'danger' | 'outline-primary' | 'outline-secondary' | 'outline-danger' | 'transparent';\n  size?:      'sm' | 'lg';\n  disabled?:  boolean;\n  onClick?:   (event: React.MouseEvent<HTMLButtonElement>) => void;\n\n  tooltip?:   string;\n  tooltipPlacement?: Placement;\n\n  children:   React.ReactNode;\n}\n\nconst Button = forwardRef<HTMLButtonElement, IButtonProps>(({\n  id,\n  tooltip, tooltipPlacement,\n  children, ...rest }: IButtonProps, ref) => (\n    <ConditionalWrapper\n        condition = {Boolean(tooltip)}\n        render = {childr => <Tooltip id={`${id}-tooltip`} tooltip={tooltip} placement={tooltipPlacement}>{childr}</Tooltip>}>\n      <BootstrapButton id={id} aria-label={tooltip || undefined} aria-describedby={undefined} {...rest} ref={ref}>\n        {children}\n      </BootstrapButton>\n    </ConditionalWrapper>\n));\n\nexport default Button;\n","import { createRef } from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport '../../css/checkbox.css';\n\nimport BaseInputComponent, { IBaseInputComponentProps } from './BaseInputComponent';\nimport Tooltip from '../Tooltip';\nimport ConditionalWrapper from '../ConditionalWrapper';\nimport Icon from '../Icon';\n\nexport interface ICheckboxProps extends IBaseInputComponentProps {\n  value?: boolean;\n\n  onChange?: (name: string, newValue: boolean) => void;\n}\n\nexport default class Checkbox extends BaseInputComponent<ICheckboxProps> {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private ref = createRef<any>();\n\n  focus(): boolean { // eslint-disable-line react/no-unused-class-component-methods\n    if (this.ref != null && this.ref.current) {\n      this.ref.current.focus();\n      return true;\n    }\n    return false;\n  }\n\n  getLabel(): React.ReactNode | undefined { // eslint-disable-line react/no-unused-class-component-methods\n    if (this.props.label == null) {\n      return null;\n    } else if (this.props.tooltip) {\n      return (\n        <>\n          {this.props.label}\n          &nbsp;\n          <Icon icon='info-circle' className='tooltip-icon' />\n        </>\n      );\n    } else {\n      return this.props.label;\n    }\n  }\n\n  handleChange = () => {\n    // event: React.ChangeEvent<HTMLInputElement>\n    // NOTE: bootstrap will pass as event.target.value always \"on\".\n    if (this.props.readOnly || this.props.disabled) return;\n    this.props.onChange?.(this.props.name, !this.props.value);\n  };\n\n  render() {\n    // console.log(`[Checkbox] name=${this.props.name}`);\n\n    const { value, onChange, // eslint-disable-line @typescript-eslint/no-unused-vars\n        name, style, tooltip,\n        label, className, helpText, errors, meta, ...rest } = this.props; // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    return (\n      <Form.Group\n          {...this.getGroupProps()}\n          controlId = {name}\n          className = {this.getFormGroupClassNames()}\n          style     = {style}>\n        <ConditionalWrapper\n            condition = {tooltip != null}\n            render    = {childr => <Tooltip id={`${name}-tooltip`} tooltip={tooltip}>{childr}</Tooltip>}>\n          {this.getHelpText()}\n          {this.getErrorMessage()}\n          <Form.Check\n              name  = {name}\n              checked = {value}\n              label = {this.getLabel()}\n              className = 'form-check' // BUG: always set form-check\n              onChange  = {this.handleChange}\n\n              {...rest}\n              ref = {this.ref} />\n        </ConditionalWrapper>\n      </Form.Group>\n    );\n  }\n}\n","import { forwardRef, useCallback } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Button, Modal as BootstrapModal } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport '../css/modal.css';\n\nimport Icon from './Icon';\nimport { CommonProps } from '../types/OverridableComponent';\nimport ErrorBoundary from './ErrorBoundary';\n\nexport interface IModalHeaderCloseButtonProps extends CommonProps {\n  onClose: (event: React.MouseEvent) => void;\n}\n\nconst messages = defineMessages({\n  accept: {\n    id: 'modal.accept',\n    description: 'Default modal accept button',\n    defaultMessage: 'Accept',\n  },\n  close: {\n    id: 'modal.close',\n    description: 'Default modal close button',\n    defaultMessage: 'Close',\n  },\n});\n\nexport const ModalHeaderCloseButton = forwardRef<HTMLButtonElement, IModalHeaderCloseButtonProps>(({\n  onClose, className, ...rest }: IModalHeaderCloseButtonProps, ref) => {\n    const { formatMessage } = useIntl();\n\n    return (\n      <Button type='button' onClick={onClose} variant='transparent' className={classNames('close-button', className)} aria-label={formatMessage(messages.close)} {...rest} ref={ref}>\n        <Icon icon='x' variant='light' size='2x' />\n      </Button>\n    );\n  });\n\nexport interface IModalProps extends CommonProps {\n  show: boolean;\n  title: string;\n\n  acceptTitle?: React.ReactNode;\n  closeTitle?: React.ReactNode;\n\n  onAccept?: () => void;\n  onClose?: (autoClose: boolean) => void;\n  noCloseButton?: boolean;\n\n  /**\n   * @defaultValue `lg`\n   */\n  size?: 'sm' | 'lg' | 'xl';\n\n  acceptButtonProps?: Partial<unknown>;\n  children: React.ReactNode;\n}\n\nconst Modal = forwardRef<HTMLDivElement, IModalProps>(({\n    show, title,\n    acceptTitle, closeTitle,\n    onAccept, onClose, noCloseButton,\n    size = 'lg', acceptButtonProps, children,\n    ...rest }: IModalProps, ref) => {\n  const { formatMessage } = useIntl();\n\n  const handleClose = useCallback(() => {\n    onClose?.(false);\n  }, [onClose]);\n\n  const handleAccept = useCallback(() => {\n    onClose?.(true);\n    onAccept?.();\n  }, [onClose, onAccept]);\n\n  const hasButton = onAccept != null || (onClose != null && !noCloseButton);\n\n  return (\n    <BootstrapModal\n        show = {show}\n        backdrop = 'static'\n        size = {size}\n        centered\n        onHide = {handleClose}\n        keyboard = {false}\n        {...rest}\n        ref = {ref}>\n      <BootstrapModal.Header>\n        <BootstrapModal.Title>{title}</BootstrapModal.Title>\n        {onClose != null && (\n          <ModalHeaderCloseButton onClose={handleClose} />\n        )}\n      </BootstrapModal.Header>\n\n      <BootstrapModal.Body>\n        <ErrorBoundary verbose printStack>\n          {children}\n        </ErrorBoundary>\n      </BootstrapModal.Body>\n\n      {hasButton && (\n        <BootstrapModal.Footer>\n          {onClose != null && !noCloseButton && (\n            <Button variant='outline-primary' onClick={handleClose}>\n              {closeTitle ?? formatMessage(messages.close)}\n            </Button>\n          )}\n          {onAccept != null && (\n            <Button variant='primary' onClick={handleAccept} {...acceptButtonProps}>\n              {acceptTitle ?? formatMessage(messages.accept)}\n            </Button>\n          )}\n        </BootstrapModal.Footer>\n      )}\n    </BootstrapModal>\n  );\n});\n\nexport default Modal;\n","import { forwardRef } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { CommonProps } from '../types/OverridableComponent';\nimport ConditionalWrapper from './ConditionalWrapper';\nimport Tooltip from './Tooltip';\nimport { IButtonProps } from './Button';\n\nexport interface INavButtonProps extends\n    Omit<IButtonProps, 'type'>,\n    CommonProps {\n  to: string;\n}\n\nconst NavButton = forwardRef<HTMLButtonElement, INavButtonProps>(({\n  id, to,\n  tooltip,\n  children, ...rest }: INavButtonProps, ref) => (\n    <ConditionalWrapper\n        condition = {Boolean(tooltip)}\n        render = {childr => <Tooltip id={`${id}-tooltip`} tooltip={tooltip}>{childr}</Tooltip>}>\n      <Button\n          type = 'button'\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          as = {Link as any}\n          to = {to}\n          aria-label = {tooltip}\n          {...rest}\n          ref = {ref}>\n        {children}\n      </Button>\n    </ConditionalWrapper>\n));\n\nexport default NavButton;\n","import { useContext, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useLocation, useNavigate } from 'react-router';\n\nimport { AnyComponent } from '../../types/Types';\nimport DynamicHeightContext from '../context/DynamicHeightContext';\nimport ArrayReducerType from '../store/ArrayReducerType';\nimport ItemReducerType from '../store/ItemReducerType';\nimport { getEnv, getRoutePath } from '../utility';\nimport ErrorBoundary from './ErrorBoundary';\n\n/** {@link PageTitleFixer} Props. */\ninterface IPageWrapperProps {\n  /** Page title. */\n  title?:   string;\n  id?:      string;\n  state?:   ItemReducerType<unknown> | ArrayReducerType<unknown>;\n  /** Page component to render. */\n  children: AnyComponent;\n}\n\n/**\n * Strips slashes etc. of the path.\n *\n * Example:\n * location.pathname = /browse/\n * toCleanLocationPath = browse\n *\n * @param path - location.pathname\n *\n * @return Nice path without gibberish.\n */\nfunction toCleanLocationPath(path: string): string {\n  const pathNoHost      = path.startsWith(getEnv('PUBLIC_URL') ?? '') ? path.substring((getEnv('PUBLIC_URL') ?? '').length) : path;\n  const startsWithSlash = pathNoHost.startsWith('/');\n  const endsWithSlash   = pathNoHost.endsWith('/');\n  const pathNoSlashes   = pathNoHost.substring(startsWithSlash ? 1 : 0, endsWithSlash ? pathNoHost.length - 1 : undefined);\n\n  return pathNoSlashes;\n}\n\n/**\n * HOC to properly set the browser title to assure accessibilty.\n */\n const PageWrapper: React.FC<IPageWrapperProps> = ({ title, id, state, children }: IPageWrapperProps) => {\n  const nav = useNavigate();\n  const location = useLocation();\n  const error = state?.meta.error;\n\n  const dynamicHeightContext = useContext(DynamicHeightContext);\n\n  useEffect(() => {\n    // ARIA: Titles should contain the application name and page title.\n    document.title = (`${title != null && title.length > 0 ? `${title} | ` : ''}OwnRecipes`);\n  }, [title]);\n\n  useEffect(() => {\n    if (error && id == null) {\n      const p = getRoutePath('/NotFound');\n      // console.log(`[PageWrapper] nav to \"${p}\"`);\n      nav(p);\n    }\n  }, [id, error]);\n\n  return (\n    <Container id='main-container' as='main' className={toCleanLocationPath(location.pathname)} style={{ marginTop: `${dynamicHeightContext.toolbarHeight}px` }}>\n      <ErrorBoundary verbose printStack>\n        {children}\n      </ErrorBoundary>\n    </Container>\n  );\n};\n\nexport default PageWrapper;\n","import { History, Transition } from 'history';\nimport { useCallback, useContext, useEffect } from 'react';\nimport { UNSAFE_NavigationContext as NavigationContext } from 'react-router-dom';\n\ntype ExtendNavigator = Navigator & Pick<History, 'block'>;\n\nexport function useBlocker(blocker: (tx: Transition) => void, when = true) {\n  const { navigator } = useContext(NavigationContext);\n\n  useEffect(() => {\n    if (!when) return;\n\n    const unblock = (navigator as unknown as ExtendNavigator).block(tx => {\n      const autoUnblockingTx = {\n        ...tx,\n        retry() {\n          unblock();\n          tx.retry();\n        },\n      };\n\n      blocker(autoUnblockingTx);\n    });\n\n    // eslint-disable-next-line consistent-return\n    return unblock;\n  }, [navigator, blocker, when]);\n}\n\nexport default function usePrompt(message: string, when = true) {\n  const blocker = useCallback((tx: Transition) => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm(message)) tx.retry();\n  }, [message]);\n\n  useBlocker(blocker, when);\n}\n","import { useMemo } from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { Beforeunload } from 'react-beforeunload';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport useBlocker from '../hooks/useBlocker';\n\nconst messages = defineMessages({\n  navigation_warning: {\n    id: 'navigationprompt.warning',\n    description: 'Prompt displayed when navigating on a dirty page (unsaved changes).',\n    defaultMessage: 'You have unsaved changed. If you continue, those change may be lost.',\n  },\n});\n\ninterface INavigationPromptProps {\n  isDirty?: boolean | undefined;\n}\n\nconst NavigationPrompt: React.FC<INavigationPromptProps> = ({ isDirty }: INavigationPromptProps) => {\n  const { formatMessage } = useIntl();\n\n  const promptMsg = useMemo(() => formatMessage(messages.navigation_warning), [formatMessage]);\n\n  const dirtyBlocker = useBlocker(promptMsg, isDirty);\n\n  return (\n    <>\n      {isDirty && (\n        <Beforeunload onBeforeunload={() => promptMsg} />\n      )}\n\n      {dirtyBlocker}\n    </>\n  );\n};\n\nexport default NavigationPrompt;\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/form_errors.css';\n\nimport { ValidationError } from '../store/Validation';\nimport Alert from './Alert';\nimport NavigationPrompt from './NavigationPrompt';\nimport P from './P';\nimport Toast from './Toast';\n\nconst messages = defineMessages({\n  form_errors_title: {\n    id: 'status.form_errors_title',\n    description: 'Title for the form error box.',\n    defaultMessage: 'The form contains an error.',\n  },\n  form_errors_alert: {\n    id: 'status.form_errors_alert',\n    description: 'Alert text for the form error box.',\n    defaultMessage: 'Please fix the described error(s) and continue.',\n  },\n  form_errors_table_heading_error: {\n    id: 'status.form_errors_table_heading_error',\n    description: 'The form-errors will be displayed as table, with an error column. This is the column\\'s title.',\n    defaultMessage: 'Error',\n  },\n  form_errors_table_heading_message: {\n    id: 'status.form_errors_table_heading_message',\n    description: 'The form-errors will be displayed as table, with a message column. This is the column\\'s title.',\n    defaultMessage: 'Message',\n  },\n\n  save_success: {\n    id: 'status.save_success',\n    description: 'Toast for successfully saved form.',\n    defaultMessage: 'Changes saved.',\n  },\n});\n\ninterface IFormStatusProps {\n  dirty: boolean;\n  submitting: boolean;\n  errors: Record<string, ValidationError> | undefined;\n\n  onSubmitSuccess?: () => void;\n}\n\nconst FormStatus: React.FC<IFormStatusProps> = ({\n    // eslint-disable-next-line arrow-body-style\n    dirty, submitting, errors, onSubmitSuccess }: IFormStatusProps) => {\n  // console.log(`[FormStatus] dirty=${dirty}, submitting=${submitting}, errors=${JSON.stringify(errors)}`);\n  return (\n    <>\n      <NavigationPrompt isDirty={dirty} />\n      <FormErrors errors={errors} />\n      <SubmitSuccess dirty={dirty} submitting={submitting} onSubmitSuccess={onSubmitSuccess} errors={errors} />\n    </>\n  );\n};\n\ninterface IFormErrorRowErrorProps {\n  name: string;\n  err: ValidationError;\n}\n\nconst FormErrorRowError: React.FC<IFormErrorRowErrorProps> = ({ name, err }: IFormErrorRowErrorProps) => {\n  const label = document.querySelector(`[data-api-field=\"${name}\"] > label`)?.textContent ?? name;\n\n  const errMsgs: Array<string> = [];\n  if (Array.isArray(err)) {\n    errMsgs.push(...(err.map(errr => errr.message)));\n  } else {\n    errMsgs.push(err.message);\n  }\n\n  return (\n    <tr>\n      <td>{label}</td>\n      <td>{errMsgs.join('. ')}</td>\n    </tr>\n  );\n};\n\nfunction getVisibleErrors(errors: Record<string, ValidationError>): Record<string, ValidationError> {\n  const visibleErrorsArray = Object.entries(errors).filter(([key]) => !key.startsWith('_'));\n  return Object.fromEntries(visibleErrorsArray);\n}\n\ninterface IFormErrorsProps {\n  errors: Record<string, ValidationError> | undefined;\n}\n\nconst FormErrors: React.FC<IFormErrorsProps> = ({ errors }: IFormErrorsProps) => {\n  const { formatMessage } = useIntl();\n\n  const visibleErrors = useMemo(() => (\n    errors != null ? getVisibleErrors(errors) : undefined\n  ), [errors]);\n\n  const errorTableRowsJsx = useMemo(() => {\n    if (visibleErrors == null || Object.keys(visibleErrors).length === 0) return [];\n    const res: Array<React.ReactNode> = [];\n    Object.keys(visibleErrors).forEach(key => {\n      const nextErr = visibleErrors[key];\n      res.push(<FormErrorRowError key={key} name={key} err={nextErr} />);\n    });\n    return res;\n  }, [visibleErrors]);\n\n  if (visibleErrors == null || Object.keys(visibleErrors).length === 0) return null;\n\n  // console.log(`[FormErrors] ${JSON.stringify(visibleErrors)}`);\n\n  const errorTableJsx = (\n    <table>\n      <thead>\n        <tr>\n          <th>{formatMessage(messages.form_errors_table_heading_error)}</th>\n          <th>{formatMessage(messages.form_errors_table_heading_message)}</th>\n        </tr>\n      </thead>\n      <tbody>\n        {errorTableRowsJsx}\n      </tbody>\n    </table>\n  );\n\n  return (\n    <Alert\n        severity = 'danger'\n        className = 'form-errors'\n        title = {formatMessage(messages.form_errors_title)}>\n      {errorTableJsx}\n      <P className='alert-post-message'>{formatMessage(messages.form_errors_alert)}</P>\n    </Alert>\n  );\n};\n\ninterface ISubmitSuccessProps {\n  dirty: boolean;\n  submitting: boolean;\n  errors: Record<string, ValidationError> | undefined;\n\n  onSubmitSuccess?: () => void;\n}\n\nconst SubmitSuccess: React.FC<ISubmitSuccessProps> = ({ dirty, submitting, errors, onSubmitSuccess }: ISubmitSuccessProps) => {\n  const { formatMessage } = useIntl();\n\n  const prevSubmitting = useRef<boolean>(false);\n  const [showSaveSuccess, setShowSaveSuccess] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (prevSubmitting.current === true && submitting === false && errors == null) {\n      setShowSaveSuccess(true);\n      onSubmitSuccess?.();\n    }\n\n    prevSubmitting.current = submitting;\n  }, [submitting]);\n\n  useEffect(() => {\n    if (dirty && showSaveSuccess) {\n      setShowSaveSuccess(false);\n    }\n  }, [dirty]);\n\n  const handleCloseSaveSuccessToast = useCallback(() => {\n    setShowSaveSuccess(false);\n  }, []);\n\n  return (\n    <Toast\n        show = {showSaveSuccess}\n        variant = 'success'\n        anchorOrigin={{ horizontal: 'center', vertical: 'bottom' }}\n        onClose = {handleCloseSaveSuccessToast}>\n      {formatMessage(messages.save_success)}\n    </Toast>\n  );\n};\n\nexport default FormStatus;\n","import { FormSpy } from 'react-final-form';\nimport { ValidationError } from '../../store/Validation';\nimport FormStatus from '../FormStatus';\n\nexport interface IReFormStatusProps {\n  onSubmitSuccess?: () => void;\n}\n\nconst ReFormStatus: React.FC<IReFormStatusProps> = ({\n  onSubmitSuccess }: IReFormStatusProps) => (\n    <FormSpy subscription={{ dirty: true, submitting: true, submitErrors: true }}>\n      {({ dirty, submitting, submitErrors }) => (\n        <FormStatus\n            dirty = {dirty}\n            submitting = {submitting}\n            errors = {(submitErrors) as Record<string, ValidationError>}\n            onSubmitSuccess = {onSubmitSuccess} />\n      )}\n    </FormSpy>\n);\n\nexport default ReFormStatus;\n","import { useEffect } from 'react';\nimport { FormApi } from 'final-form';\n\ninterface IInitialValuesResetterProps<T> {\n  form: FormApi<T, Partial<T>>;\n  initialValues: Partial<T> | undefined;\n}\nconst InitialValuesResetter = <T = {}>({ form, initialValues }: IInitialValuesResetterProps<T>) => {\n  useEffect(() => {\n    if (form && form.restart != null) {\n      // console.log('Reset form');\n      form.restart(initialValues);\n    }\n  }, [initialValues]);\n\n  return null;\n};\n\nexport default InitialValuesResetter;\n","import { forwardRef } from 'react';\nimport { Toast as ReactBootstrapToast } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport '../css/toast.css';\n\nimport { CommonProps } from '../types/OverridableComponent';\nimport Icon from './Icon';\n\nexport interface AnchorOriginPosition {\n  horizontal: 'center' | 'left' | 'right';\n  vertical: 'bottom' | 'top';\n}\n\nexport interface IToastProps extends CommonProps {\n  show: boolean;\n  autoHide?: number;\n\n  variant?: 'success';\n  anchorOrigin?: AnchorOriginPosition;\n\n  onClose?: () => void;\n\n  children: React.ReactNode;\n}\n\nfunction capitalize(str: string): string {\n  if (str.length === 0) {\n    return '';\n  } else if (str.length === 1) {\n    return str.toUpperCase();\n  } else {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n}\n\nconst Toast = forwardRef<HTMLDivElement, IToastProps>(({\n    show, autoHide = 6000, variant, anchorOrigin, onClose, children,\n    className, ...rest }: IToastProps, ref) => {\n  const anchorString = anchorOrigin != null ? `Toast-anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}` : undefined;\n\n  return (\n    <ReactBootstrapToast\n        show      = {show}\n        delay     = {autoHide}\n        autohide  = {autoHide > 0}\n        className = {classNames('simple-toast', className, anchorString, {\n          success: variant === 'success',\n        })}\n        onClose   = {onClose}\n        {...rest}\n        ref = {ref}>\n      <ReactBootstrapToast.Header closeButton={onClose != null}>\n        <>\n          {variant === 'success' && <div className='toast-icon'><Icon icon='check' variant='light' size='2x' /></div>}\n          <span className='toast-title'>{children}</span>\n        </>\n      </ReactBootstrapToast.Header>\n    </ReactBootstrapToast>\n  );\n});\n\nexport default Toast;\n","import { handleError, handleFormError, request } from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { toBasicAction } from '../../common/store/redux';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { GroceryListItemsActionTypes, GroceryListItemsDispatch, GROCERY_LIST_ITEMS_STORE } from './GroceryListItemsTypes';\nimport { GroceryListItem, GroceryListItemDto, toGroceryListItem } from './GroceryListItemTypes';\n\nexport const load = (listId: number) => (dispatch: GroceryListItemsDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEMS_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.list_item}?list=${listId}`)\n    .then(res => {\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_ITEMS_STORE,\n          ACTION.GET_SUCCESS\n        ),\n        payload: res.body.results.map((i: GroceryListItemDto) => toGroceryListItem(listId, i)),\n      });\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_ITEMS_STORE)));\n};\n\nexport const toggleItems = (listId: number, items: Array<GroceryListItem>, checked: boolean) => (dispatch: GroceryListItemsDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEMS_STORE, ACTION.GET_START) });\n\n  const ids = items.filter(i => i.completed !== checked).map(i => ({ id: i.id, completed: checked }));\n\n  request()\n    .patch(serverURLs.bulk_list_item)\n    .send(ids)\n    .then(() => {\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_ITEMS_STORE,\n          GroceryListItemsActionTypes.TOGGLE_ITEMS\n        ),\n        payload: ids,\n      });\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_ITEMS_STORE)));\n};\n\nexport const clearCompleted = async (dispatch: GroceryListItemsDispatch, listId: number, items: Array<GroceryListItem>) => {\n  const ids = items.filter(i => i.completed).map(i => i.id);\n\n  return request()\n    .delete(serverURLs.bulk_list_item)\n    .send(ids)\n    .then(() => {\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_ITEMS_STORE,\n          GroceryListItemsActionTypes.DELETE_COMPLETED_ITEMS\n        ),\n        payload: {\n          listId: listId,\n          ids: ids,\n        },\n      });\n    })\n    .catch(err => handleFormError(dispatch, err, GROCERY_LIST_ITEMS_STORE));\n};\n\nexport const reset = () => (dispatch: GroceryListItemsDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEMS_STORE, ACTION.RESET) });\n};\n","import { handleError, handleFormError, request } from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { AnyDispatch, toBasicAction } from '../../common/store/redux';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { GroceryListItem, GroceryListItemAction, GroceryListItemActionTypes, GroceryListItemCreate, GroceryListItemCreateDto, GroceryListItemDispatch, GroceryListItemUpdate, GROCERY_LIST_ITEM_STORE, toGroceryListItem } from './GroceryListItemTypes';\n\nexport const getGroceryListItemSuccess = (groceryList: GroceryListItem): GroceryListItemAction => (\n  { ...toBasicAction(GROCERY_LIST_ITEM_STORE, ACTION.GET_SUCCESS), payload: groceryList }\n);\n\nexport const load = (listId: number) => (dispatch: GroceryListItemDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEM_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.list_item}?list=${listId}`)\n    .then(res => {\n      dispatch(getGroceryListItemSuccess(toGroceryListItem(listId, res.body)));\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_ITEM_STORE)));\n};\n\nexport const create = async (dispatch: AnyDispatch, listId: number, item: GroceryListItemCreate) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEM_STORE, ACTION.CREATE_START) });\n\n  const dto: GroceryListItemCreateDto = {\n    list: listId,\n    ...item,\n  };\n\n  return request()\n    .post(serverURLs.list_item)\n    .send(dto)\n    .then(res => {\n      const groceryListItem = toGroceryListItem(listId, res.body);\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_ITEM_STORE,\n          ACTION.CREATE_SUCCESS\n        ),\n        payload: groceryListItem,\n      });\n    })\n    .catch(err => handleFormError(dispatch, err, GROCERY_LIST_ITEM_STORE));\n};\n\nexport const update = async (dispatch: AnyDispatch, listId: number, id: number, item: GroceryListItemUpdate) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEM_STORE, ACTION.UPDATE_START) });\n\n  return request()\n    .patch(`${serverURLs.list_item}${id}/`)\n    .send(item)\n    .then(res => {\n      const groceryListItem = toGroceryListItem(listId, res.body);\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_ITEM_STORE,\n          ACTION.UPDATE_SUCCESS\n        ),\n        payload: groceryListItem,\n      });\n    })\n    .catch(err => handleFormError(dispatch, err, GROCERY_LIST_ITEM_STORE));\n};\n\nexport const remove = (listId: number, id: number) => (dispatch: GroceryListItemDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEM_STORE, ACTION.DELETE_START) });\n\n  request()\n    .delete(`${serverURLs.list_item}${id}/`)\n    .then(() => {\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_ITEM_STORE,\n          ACTION.DELETE_SUCCESS\n        ),\n        payload: { listId: listId, id: id },\n      });\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_ITEM_STORE)));\n};\n\nexport const toggleItem = (listId: number, id: number, completed: boolean) => (dispatch: GroceryListItemDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEM_STORE, ACTION.UPDATE_START) });\n\n  request()\n    .patch(`${serverURLs.list_item}${id}/`)\n    .send({ completed: completed })\n    .then(() => {\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_ITEM_STORE,\n          GroceryListItemActionTypes.TOGGLE_ITEM\n        ),\n        payload: { listId: listId, id: id },\n      });\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_ITEM_STORE)));\n};\n\nexport const preload = (list: Partial<GroceryListItem>) => (dispatch: GroceryListItemDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEM_STORE, ACTION.PRELOAD), payload: list });\n};\n\nexport const reset = () => (dispatch: GroceryListItemDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_ITEM_STORE, ACTION.RESET) });\n};\n","import { useCallback, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/grocery_list_footer.css';\n\nimport { GroceryList } from '../store/GroceryListTypes';\nimport { GroceryListItem } from '../store/GroceryListItemTypes';\nimport { isDemoMode } from '../../common/utility';\nimport Button from '../../common/components/Button';\nimport Icon from '../../common/components/Icon';\nimport Toast from '../../common/components/Toast';\n\nconst messages = defineMessages({\n  clear_completed_tooltip: {\n    id: 'grocery_list.footer.clear_completed_tooltip',\n    defaultMessage: 'Clear completed',\n  },\n  copy_to_clipboard_tooltip: {\n    id: 'grocery_list.footer.copy_to_clipboard_tooltip',\n    defaultMessage: 'Copy to clipboard',\n  },\n  copy_to_clipboard_toast: {\n    id: 'grocery_list.footer.copy_to_clipboard_toast',\n    defaultMessage: 'Copied to clipboard.',\n  },\n});\n\nexport interface IGroceryListFooterProps {\n  list: GroceryList | undefined;\n  isNew: boolean;\n  items: Array<GroceryListItem> | undefined;\n  onClearCompleted: () => void;\n  isClearPending: boolean;\n  onCopyToClipboard: () => void;\n}\n\nconst GroceryListFooter: React.FC<IGroceryListFooterProps> = ({\n    list, isNew, items, onClearCompleted, isClearPending, onCopyToClipboard }: IGroceryListFooterProps) => {\n  const { formatMessage } = useIntl();\n\n  const [showCopyToast, setShowCopyToast] = useState<boolean>(false);\n\n  const handleCopyToClipboard = useCallback(() => {\n    onCopyToClipboard();\n    setTimeout(() => {\n      setShowCopyToast(true);\n    }, 0);\n  }, [onCopyToClipboard]);\n  const handleCloseCopyToast = useCallback(() => { setShowCopyToast(false); }, []);\n\n  if (!list || isNew) return null;\n\n  const hasCheckedItem = items?.find(i => i.completed) != null;\n\n  return (\n    <div className='grocery-list-footer print-hidden'>\n      {items != null && items.length > 0 && (\n        <>\n          <Button\n              id = 'clear-completed'\n              variant  = 'primary'\n              type     = 'button'\n              disabled = {isDemoMode() || !hasCheckedItem || isClearPending}\n              className = 'check'\n              onClick = {onClearCompleted}\n\n              tooltip = {formatMessage(messages.clear_completed_tooltip)}>\n            <Icon icon='check' variant='light' size='2x' />\n          </Button>\n          <Button\n              id = 'copy-to-clipboard'\n              variant  = 'outline-primary'\n              type     = 'button'\n              onClick = {handleCopyToClipboard}\n\n              tooltip={formatMessage(messages.copy_to_clipboard_tooltip)}>\n            <Icon icon='clipboard' />\n          </Button>\n        </>\n      )}\n      <Toast\n          show = {showCopyToast}\n          variant = 'success'\n          anchorOrigin = {{ horizontal: 'center', vertical: 'bottom' }}\n          onClose = {handleCloseCopyToast}>\n        {formatMessage(messages.copy_to_clipboard_toast)}\n      </Toast>\n    </div>\n  );\n};\n\nexport default GroceryListFooter;\n","import { useCallback } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Dropdown } from 'react-bootstrap';\n\nimport P from '../../common/components/P';\nimport { optionallyFormatMessage } from '../../common/utility';\nimport { GroceryList } from '../store/GroceryListTypes';\nimport { GroceryListItem } from '../store/GroceryListItemTypes';\nimport { GROCERY_LIST_FILTER } from '../containers/GroceryListContainer';\n\nconst messages = defineMessages({\n  groceryList_items_summary_empty: {\n    id: 'groceryList.items_summary_empty',\n    description: 'Summary for grocery list with no items.',\n    defaultMessage: 'Empty list',\n  },\n  groceryList_items_summary_completed: {\n    id: 'groceryList.items_summary_completed',\n    description: 'Number of items, all done.',\n    defaultMessage: '{sum, plural, one {# item} other {# items}}, all done 😀',\n  },\n  groceryList_items_summary_incompleted: {\n    id: 'groceryList.items_summary_incompleted',\n    description: 'Number of items, with not completed sum.',\n    defaultMessage: '{sum, plural, one {# item} other {# items}}, {sum_not_completed} not completed',\n  },\n  groceryList_filter_by: {\n    id: 'groceryList.filter_by',\n    description: 'Filter items',\n    defaultMessage: 'Show items: {filter}',\n  },\n\n  filter_off: {\n    id: 'groceryList.filter_items.ALL',\n    defaultMessage: 'All',\n  },\n  filter_active: {\n    id: 'groceryList.filter_items.ACTIVE',\n    defaultMessage: 'Not completed',\n  },\n  filter_completed: {\n    id: 'groceryList.filter_items.COMPLETED',\n    defaultMessage: 'Completed',\n  },\n});\n\nexport interface IGroceryListSummaryProps {\n  list: GroceryList | undefined;\n  items: Array<GroceryListItem> | undefined;\n  filter: GROCERY_LIST_FILTER;\n  onChangeFilter: (newFilter: GROCERY_LIST_FILTER) => void;\n}\n\nconst GroceryListSummary: React.FC<IGroceryListSummaryProps> = ({\n    list, items, filter, onChangeFilter }: IGroceryListSummaryProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const itemsCount = items?.length ?? 0;\n  const completedCount = items?.filter(i => i.completed).length ?? 0;\n  const incompletedCount = items?.filter(i => !i.completed).length ?? 0;\n\n  const handleFilterByClick = useCallback((event: React.MouseEvent<HTMLAnchorElement>, newFilter: GROCERY_LIST_FILTER) => {\n    if (filter === newFilter) {\n      event.preventDefault();\n    } else {\n      onChangeFilter(newFilter);\n    }\n  }, [filter, onChangeFilter]);\n\n  const dropdownItems = Object.values(GROCERY_LIST_FILTER).map(f => (\n    <Dropdown.Item key={f} active={filter === f} onClick={(event: React.MouseEvent<HTMLAnchorElement>) => handleFilterByClick(event, f)}>\n      {optionallyFormatMessage(intl, 'groceryList.filter_items.', f)}\n    </Dropdown.Item>\n  ));\n\n  return (\n    <div className='grocery-list-summary'>\n      <P className='summary'>\n        {itemsCount === 0 && formatMessage(messages.groceryList_items_summary_empty)}\n        {itemsCount > 0 && completedCount === itemsCount && formatMessage(messages.groceryList_items_summary_completed, { sum: list?.item_count ?? 0 })}\n        {itemsCount > 0 && incompletedCount > 0 && formatMessage(messages.groceryList_items_summary_incompleted, { sum: list?.item_count ?? 0, sum_not_completed: incompletedCount })}\n      </P>\n      <Dropdown className='filter-items-dropdown'>\n        <Dropdown.Toggle variant='outline-primary' id='filter-items-button' disabled={list == null || list.item_count === 0}>\n          {formatMessage(messages.groceryList_filter_by, { filter: optionallyFormatMessage(intl, 'groceryList.filter_items.', filter) })}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {dropdownItems}\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default GroceryListSummary;\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Form as ReduxForm, FormSpy } from 'react-final-form';\nimport { useLocation, useNavigate } from 'react-router';\nimport { Button, Dropdown, Form } from 'react-bootstrap';\n\nimport '../css/grocery_list_header.css';\n\nimport { GroceryList, GroceryListCreate, GroceryListUpdate } from '../store/GroceryListTypes';\nimport Icon from '../../common/components/Icon';\nimport Modal from '../../common/components/Modal';\nimport ReFormStatus from '../../common/components/ReduxForm/ReFormStatus';\nimport InitialValuesResetter from '../../common/components/ReduxForm/ReInitialValuesResetter';\nimport ReInput from '../../common/components/ReduxForm/ReInput';\nimport NavLink from '../../header/components/NavLink';\nimport NavButton from '../../common/components/NavButton';\nimport { getRoutePath } from '../../common/utility';\nimport GroceryListSummary from './GroceryListSummary';\nimport { GroceryListItem } from '../store/GroceryListItemTypes';\nimport { GROCERY_LIST_FILTER } from '../containers/GroceryListContainer';\nimport { ValidationResult } from '../../common/store/Validation';\n\nconst messages = defineMessages({\n  new_title_placeholder: {\n    id: 'grocery_list.header.title_placeholder',\n    defaultMessage: '(Enter a new title)',\n  },\n  confirm_delete_message: {\n    id: 'grocery_list.header.confirm_delete',\n    description: 'Are you sure you want to delete this list?',\n    defaultMessage: 'Are you sure you want to delete this list?',\n  },\n  edit_list: {\n    id: 'grocery_list.header.edit_list_button',\n    defaultMessage: 'Edit',\n  },\n  delete_list: {\n    id: 'grocery_list.header.delete_list_button',\n    defaultMessage: 'Delete',\n  },\n  back_to_lists: {\n    id: 'grocery_list.header.back_to_lists',\n    defaultMessage: 'To my grocery lists',\n  },\n});\n\nexport interface IGroceryListHeaderProps {\n  list: GroceryList | undefined;\n  isNew: boolean;\n  onCreate: (item: GroceryListCreate) => Promise<ValidationResult>;\n  onUpdate: (upd: GroceryListUpdate) => Promise<ValidationResult>;\n  onRemove: () => void;\n\n  items: Array<GroceryListItem> | undefined;\n  filter: GROCERY_LIST_FILTER;\n  onChangeFilter: (newFilter: GROCERY_LIST_FILTER) => void;\n}\n\ninterface FormDataProps {\n  title: string;\n}\n\nconst GroceryListHeader: React.FC<IGroceryListHeaderProps> = ({\n    list, isNew, onCreate, onUpdate, onRemove,\n    items, filter, onChangeFilter }: IGroceryListHeaderProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const location = useLocation();\n  const nav = useNavigate();\n\n  const parentPagePath = location.pathname.substring(0, location.pathname.lastIndexOf('/create'));\n\n  const titleRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const [editMode, setEditMode] = useState<boolean>(isNew);\n\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState<boolean>(false);\n  const handleDeleteClick  = useCallback(() => { setShowDeleteConfirm(true); }, []);\n  const handleDeleteAccept = useCallback(() => { onRemove(); }, [onRemove]);\n  const handleDeleteClose  = useCallback(() => { setShowDeleteConfirm(false); }, []);\n\n  const listSlug = list?.slug;\n\n  useEffect(() => {\n    if (editMode !== isNew) {\n      setEditMode(isNew);\n    }\n    if (showDeleteConfirm) {\n      setShowDeleteConfirm(false);\n    }\n  }, [isNew, list]);\n\n  const handleEditClick = useCallback(() => {\n    setEditMode(true);\n    if (inputRef != null && inputRef.current != null) {\n      setTimeout(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (inputRef.current as any).focus();\n      }, 1);\n    }\n  }, [inputRef?.current]);\n\n  const handleRevertClick = useCallback(() => {\n    setEditMode(false);\n  }, []);\n\n  const handleSubmit = useCallback(async (form: FormDataProps) => {\n    if (isNew) {\n      const createList: GroceryListCreate = {\n        title: form.title,\n      };\n      return onCreate(createList);\n    } else {\n      const updList: GroceryListUpdate = {\n        title: form.title,\n      };\n      return onUpdate(updList);\n    }\n  }, [isNew, onCreate, onUpdate]);\n  const handleSubmitSuccess = useCallback(() => {\n    if (isNew) {\n      nav(`${parentPagePath}/${listSlug}`);\n    }\n\n    setEditMode(false);\n    if (titleRef != null && titleRef.current != null) {\n      setTimeout(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (titleRef.current as any).focus();\n      }, 1);\n    }\n  }, [isNew, parentPagePath, listSlug, titleRef?.current]);\n\n  const initialValues: Partial<FormDataProps> = useMemo(() => (list ? { title: list.title } : {}), [list]);\n\n  return (\n    <>\n      <div className={classNames({\n          editing: editMode,\n          'list-header': true,\n        })}>\n        <div className='grocery-list-title-bar' tabIndex={-1} ref={titleRef}>\n          {list && !isNew && !editMode && (\n            <>\n              <NavButton id='to-grocery-lists' variant='transparent' to={getRoutePath('/grocery-lists')} className='print-hidden' tooltip={formatMessage(messages.back_to_lists)}><Icon icon='caret-left' /></NavButton>\n              <h2>{list.title}</h2>\n            </>\n          )}\n\n          {editMode && (\n            <ReduxForm\n                initialValues = {initialValues}\n                onSubmit = {handleSubmit}\n                subscription = {{}}\n                render = {({ form, handleSubmit: renderSubmit }) => (\n                  <Form onSubmit={renderSubmit} className='change-grocery-list-title-form'>\n                    <ReFormStatus onSubmitSuccess={handleSubmitSuccess} />\n\n                    <InitialValuesResetter form={form} initialValues={initialValues} />\n\n                    <div className='title-group'>\n                      <ReInput\n                          name = 'title'\n                          placeholder = {formatMessage(messages.new_title_placeholder)}\n                          maxLength = {250}\n                          ref = {inputRef}\n                          />\n                      <FormSpy subscription={{ values: true, submitting: true }}>\n                        {({ values, submitting }) => (\n                          <>\n                            <Button type='submit' variant='outline-primary' disabled={!values.title || submitting}>\n                              <Icon icon='check' variant='light' size='2x' />\n                            </Button>\n                            {!isNew && (\n                              <Button type='button' variant='outline-secondary' disabled={!values.title || submitting} onClick={handleRevertClick}>\n                                <Icon icon='x' variant='light' size='2x' />\n                              </Button>\n                            )}\n                          </>\n                        )}\n                      </FormSpy>\n                    </div>\n                  </Form>\n            )} />\n          )}\n\n          {!editMode && (\n            <Dropdown>\n              <Dropdown.Toggle id='grocery-header-option-menu' variant='transparent' className='print-hidden'>\n                <Icon icon='three-dots-vertical' variant='light' />\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu id='grocery-header-option-menu-dropdown'>\n                <Dropdown.Item onClick={handleEditClick}>{formatMessage(messages.edit_list)}</Dropdown.Item>\n                <Dropdown.Item onClick={handleDeleteClick}>{formatMessage(messages.delete_list)}</Dropdown.Item>\n                <Dropdown.Divider />\n                <NavLink to={`${parentPagePath}/create`} active={false}>{intl.messages['nav.grocery_list_create'] as string}</NavLink>\n              </Dropdown.Menu>\n            </Dropdown>\n          )}\n\n        </div>\n        {!isNew && (\n          <GroceryListSummary\n              list   = {list}\n              items  = {items}\n              filter = {filter}\n              onChangeFilter = {onChangeFilter} />\n        )}\n      </div>\n\n      <Modal\n          show = {showDeleteConfirm}\n          title = {intl.messages['recipe.confirm_delete_title'] as string}\n          acceptTitle = {intl.messages['recipe.confirm_delete_accept'] as string}\n          onAccept = {handleDeleteAccept}\n          onClose  = {handleDeleteClose}\n          acceptButtonProps = {{ variant: 'danger' }}>\n        {intl.formatMessage(messages.confirm_delete_message)}\n      </Modal>\n    </>\n  );\n};\n\nexport default GroceryListHeader;\n","import { useCallback, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Button } from 'react-bootstrap';\n\nimport { GroceryListItemCreate } from '../store/GroceryListItemTypes';\nimport Input from '../../common/components/Input/Input';\nimport Icon from '../../common/components/Icon';\nimport { formatValidation, ValidationResult } from '../../common/store/Validation';\n\nconst messages = defineMessages({\n  new_item_placeholder: {\n    id: 'groceryList.items.new_item_placeholder',\n    description: 'New item input, placeholder.',\n    defaultMessage: '(New item)',\n  },\n});\n\nexport interface IGroceryListNewItemProps {\n  onAddItem: (item: GroceryListItemCreate) => Promise<ValidationResult>;\n}\n\nconst GroceryListNewItem: React.FC<IGroceryListNewItemProps> = ({\n    onAddItem }: IGroceryListNewItemProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const [newTitle, setNewTitle] = useState<string>('');\n  const [error, setError] = useState<ValidationResult | undefined>();\n\n  const handleAddItem = useCallback(async (newTitlee: string) => {\n    onAddItem({ title: newTitlee })\n        .then(() => {\n          setNewTitle('');\n        })\n        .catch((e: ValidationResult) => { setError(e); });\n  }, [onAddItem]);\n\n  const handleAddItemClick = useCallback(() => {\n    handleAddItem(newTitle);\n  }, [handleAddItem, newTitle]);\n\n  const handleLabelChange = useCallback((_name: string, newValue: string) => {\n    if (newValue !== newTitle) {\n      setNewTitle(newValue);\n    }\n  }, [newTitle]);\n\n  const handleKeyDown = useCallback((event: React.KeyboardEvent<HTMLElement>) => {\n    if (event.defaultPrevented || event.ctrlKey || event.shiftKey) return;\n    if (event.key === 'Enter') {\n      handleAddItem((event.currentTarget as HTMLInputElement).value);\n    }\n  }, [handleAddItem]);\n\n  return (\n    <>\n      <Input\n          name  = 'newItem'\n          value = {newTitle}\n          placeholder = {formatMessage(messages.new_item_placeholder)}\n          errors      = {formatValidation(intl, error?.newItem)}\n          className   = 'new-item-input grocery-list-item-margin'\n          onChange    = {handleLabelChange}\n          onKeyDown   = {handleKeyDown}\n          />\n      <Button\n          variant = 'primary'\n          disabled = {newTitle.length === 0}\n          onClick = {handleAddItemClick}\n          className = 'grocery-list-item-margin'>\n        <Icon icon='arrow-right' variant='light' />\n      </Button>\n    </>\n  );\n};\n\nexport default GroceryListNewItem;\n","import { forwardRef, RefObject, useCallback, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { Dropdown, Col, Form, Row } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Form as ReduxForm } from 'react-final-form';\n\nimport Icon from '../../common/components/Icon';\nimport Checkbox from '../../common/components/Input/Checkbox';\nimport Modal from '../../common/components/Modal';\nimport { ValidationResult } from '../../common/store/Validation';\nimport { GroceryListItem, GroceryListItemUpdate } from '../store/GroceryListItemTypes';\nimport ReFormStatus from '../../common/components/ReduxForm/ReFormStatus';\nimport InitialValuesResetter from '../../common/components/ReduxForm/ReInitialValuesResetter';\nimport ReInput from '../../common/components/ReduxForm/ReInput';\n\nconst messages = defineMessages({\n  edit_button: {\n    id: 'grocery_list.item.edit_button',\n    defaultMessage: 'Edit',\n  },\n  delete_button: {\n    id: 'grocery_list.item.delete_button',\n    defaultMessage: 'Delete',\n  },\n  old_title: {\n    id: 'grocery_list.item.old_title_label',\n    defaultMessage: 'Item',\n  },\n  new_title: {\n    id: 'grocery_list.item.new_title_label',\n    defaultMessage: 'New Title',\n  },\n});\n\nexport interface IGroceryListItemFCProps {\n  item: GroceryListItem;\n  className?: string;\n  onToggle:  (itemId: number, completed: boolean) => void;\n  onUpdate:  (itemId: number, upd: GroceryListItemUpdate) => Promise<ValidationResult>;\n  onDelete:  (itemId: number) => void;\n}\n\nconst GroceryListItemFC: React.FC<IGroceryListItemFCProps> = ({\n    item, className,\n    onToggle, onUpdate, onDelete }: IGroceryListItemFCProps) => {\n  const { formatMessage } = useIntl();\n\n  const [showEdit, setShowEdit] = useState<boolean>(false);\n  const submitRef = useRef<HTMLButtonElement>(null);\n\n  const handleToggle = useCallback(() => {\n    onToggle(item.id, !item.completed);\n  }, [onToggle, item]);\n\n  const handleEditClick = useCallback(() => {\n    setShowEdit(true);\n  }, []);\n  const handleEditClose = useCallback((autoClose?: boolean) => {\n    if (autoClose) return;\n    setShowEdit(false);\n  }, []);\n  const handleEditSubmit = useCallback(() => {\n    submitRef.current?.click();\n  }, [submitRef.current]);\n  const handleEditItem = useCallback(async (upd: GroceryListItemUpdate) => (\n    onUpdate(item.id, upd)\n  ), [onUpdate, item.id]);\n\n  const handleDeleteItem = useCallback(() => {\n    onDelete(item.id);\n  }, [onDelete, item.id]);\n\n  return (\n    <div className={classNames('grocery-list-item', className)}>\n      <Checkbox\n          name  = {`${item.listId}-${item.id}-toggle`}\n          label = {item.title}\n          value = {item.completed}\n          onChange = {handleToggle}\n          className = 'grocery-list-item-cb grocery-list-item-margin'\n          />\n      <Dropdown className='options-dropdown print-hidden'>\n        <Dropdown.Toggle variant='transparent'>\n          <Icon icon='three-dots-vertical' variant='light' />\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu id='grocery-header-option-menu-dropdown'>\n          <Dropdown.Item onClick={handleEditClick}>{formatMessage(messages.edit_button)}</Dropdown.Item>\n          <Dropdown.Item onClick={handleDeleteItem}>{formatMessage(messages.delete_button)}</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n\n      {showEdit && (\n        <Modal\n            show\n            title = {formatMessage(messages.edit_button)}\n            onAccept = {handleEditSubmit}\n            onClose = {handleEditClose}\n            size = 'sm'>\n          <EditItemForm item={item} onSubmit={handleEditItem} onSubmitSuccess={handleEditClose} submitRef={submitRef} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\ninterface IEditItemFormProps {\n  item: GroceryListItem;\n  onSubmit: (upd: GroceryListItemUpdate) => Promise<ValidationResult>;\n  onSubmitSuccess: () => void;\n  submitRef: RefObject<HTMLButtonElement>;\n}\n\ninterface IEditItemFormDataProps {\n  oldTitle: string;\n  newTitle: string;\n}\n\nconst EditItemForm = forwardRef<HTMLFormElement, IEditItemFormProps>(({\n    item, onSubmit, onSubmitSuccess, submitRef }: IEditItemFormProps, ref) => {\n  const { formatMessage } = useIntl();\n\n  const [initialValues] = useState<Partial<IEditItemFormDataProps>>({ oldTitle: item.title, newTitle: item.title });\n\n  const handleSubmit = useCallback(async (form: IEditItemFormDataProps) => {\n    if (item.title === form.newTitle) return null;\n    const upd: GroceryListItemUpdate = {\n      title: form.newTitle,\n    };\n    return onSubmit(upd);\n  }, [item.title, onSubmit]);\n\n  // if (!show) return null;\n\n  return (\n    <ReduxForm\n        initialValues = {initialValues}\n        onSubmit = {handleSubmit}\n        subscription = {{}}\n        render = {({ form, handleSubmit: renderSubmit }) => (\n          <Form onSubmit={renderSubmit} ref={ref}>\n            <ReFormStatus onSubmitSuccess={onSubmitSuccess} />\n\n            <InitialValuesResetter form={form} initialValues={initialValues} />\n            <Row>\n              <Col>\n                <ReInput\n                    name   = 'oldTitle'\n                    label  = {formatMessage(messages.old_title)}\n                    readOnly />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <ReInput\n                    name   = 'newTitle'\n                    label  = {formatMessage(messages.new_title)}\n                    required\n                    autoFocus />\n              </Col>\n            </Row>\n            <button type='submit' ref={submitRef} className='visibility-hidden'>Submit</button>\n          </Form>\n        )} />\n  );\n});\n\nexport default GroceryListItemFC;\n","import { useCallback, useMemo } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/grocery_list_items.css';\n\nimport { GroceryList } from '../store/GroceryListTypes';\nimport { GroceryListItem, GroceryListItemCreate, GroceryListItemUpdate } from '../store/GroceryListItemTypes';\nimport Checkbox from '../../common/components/Input/Checkbox';\nimport GroceryListNewItem from './GroceryListNewItem';\nimport GroceryListItemFC from './GroceryListItem';\nimport { ValidationResult } from '../../common/store/Validation';\nimport { GROCERY_LIST_FILTER } from '../containers/GroceryListContainer';\nimport P from '../../common/components/P';\n\nconst messages = defineMessages({\n  toggle_all: {\n    id: 'grocery_list.items.toggle_all',\n    defaultMessage: 'Toggle all',\n  },\n  filtered_items_info: {\n    id: 'grocery_list.items.filtered_items_info',\n    defaultMessage: '({sum, plural, one {# filtered item} other {# filtered items}})',\n  },\n});\n\nexport interface IGroceryListItemsProps {\n  list: GroceryList | undefined;\n  isNew: boolean;\n  items: Array<GroceryListItem> | undefined;\n  filter: GROCERY_LIST_FILTER;\n\n  onAddItem:     (itemCreate: GroceryListItemCreate) => Promise<ValidationResult>;\n  onToggleItem:  (itemId: number, completed: boolean) => void;\n  onToggleItems: (items: Array<GroceryListItem>, newCompleted: boolean) => void;\n  onUpdateItem:  (itemId: number, upd: GroceryListItemUpdate) => Promise<ValidationResult>;\n  onDeleteItem:  (itemId: number) => void;\n}\n\nexport function filterListItems(items: Array<GroceryListItem>, filter: GROCERY_LIST_FILTER): Array<GroceryListItem> {\n  switch (filter) {\n    case GROCERY_LIST_FILTER.ALL:\n      return items;\n    case GROCERY_LIST_FILTER.ACTIVE:\n      return items.filter(i => !i.completed);\n    case GROCERY_LIST_FILTER.COMPLETED:\n      return items.filter(i => i.completed);\n    default: return items;\n  }\n}\n\nconst GroceryListItems: React.FC<IGroceryListItemsProps> = ({\n    list, isNew, items, filter, onAddItem, onToggleItem, onToggleItems, onUpdateItem, onDeleteItem }: IGroceryListItemsProps) => {\n  const { formatMessage } = useIntl();\n\n  const filteredItems = useMemo(() => filterListItems(items ?? [], filter), [filterListItems, items, filter]);\n\n  const handleToggleItemsClick = useCallback(() => {\n    const allItemsCompleted = filteredItems.find(i => !i.completed) == null;\n    onToggleItems(filteredItems, !allItemsCompleted);\n  }, [onToggleItems, filteredItems]);\n\n  if (!list || isNew || items == null) return null;\n\n  const itemsJsx: Array<React.ReactNode> = filteredItems.map(i => (\n    <li key={`${i.listId}-${i.id}`}>\n      <GroceryListItemFC\n          item = {i}\n          className = 'grocery-list-flex-container'\n          onToggle = {onToggleItem}\n          onUpdate = {onUpdateItem}\n          onDelete = {onDeleteItem}\n          />\n    </li>\n  ));\n\n  const hasUncheckedItem = items.find(i => !i.completed) != null;\n  const numberOfHiddenItems = items.length - filteredItems.length;\n\n  return (\n    <>\n      <Checkbox\n          name = 'toggle-all'\n          label = {formatMessage(messages.toggle_all)}\n          value = {items != null && items.length > 0 && !hasUncheckedItem}\n          readOnly = {items == null || filteredItems.length === 0}\n          errors = {undefined} /* TODO get error from meta */\n          className = 'toggle-all grocery-list-item-margin'\n          onChange = {handleToggleItemsClick}\n          />\n      {numberOfHiddenItems > 0 && (\n        <div className='grocery-list-flex-container'>\n          <Checkbox\n              name = 'hidden-placeholder-toggle'\n              value = {false}\n              disabled\n              className = 'dummy-checkbox visibility-hidden'\n              />\n          <P className='placeholder grocery-list-item-margin'>{formatMessage(messages.filtered_items_info, { sum: numberOfHiddenItems })}</P>\n        </div>\n      )}\n      <ul className='grocery-list-items'>\n        {itemsJsx}\n        <li className='print-hidden'>\n          <div className='grocery-list-flex-container'>\n            <Checkbox\n                name = 'new-item-toggle'\n                value = {false}\n                disabled\n                className = 'dummy-checkbox visibility-hidden'\n                />\n            <GroceryListNewItem\n                onAddItem = {onAddItem}\n                />\n          </div>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default GroceryListItems;\n","import { ValidationResult } from '../../common/store/Validation';\nimport { GROCERY_LIST_FILTER } from '../containers/GroceryListContainer';\nimport { GroceryListItem, GroceryListItemCreate, GroceryListItemUpdate } from '../store/GroceryListItemTypes';\nimport { GroceryList, GroceryListCreate, GroceryListUpdate } from '../store/GroceryListTypes';\nimport GroceryListFooter from './GroceryListFooter';\nimport GroceryListHeader from './GroceryListHeader';\nimport GroceryListItems from './GroceryListItems';\n\nexport interface IGroceryListFCProps {\n  list: GroceryList | undefined;\n  isNew: boolean;\n  onCreate: (item: GroceryListCreate) => Promise<ValidationResult>;\n  onUpdate: (upd: GroceryListUpdate) => Promise<ValidationResult>;\n  onRemove: () => void;\n\n  items: Array<GroceryListItem> | undefined;\n  filter: GROCERY_LIST_FILTER;\n  onChangeFilter: (newFilter: GROCERY_LIST_FILTER) => void;\n\n  onAddItem: (itemCreate: GroceryListItemCreate) => Promise<ValidationResult>;\n  onToggleItem: (itemId: number, completed: boolean) => void;\n  onToggleItems: (items: Array<GroceryListItem>, newCompleted: boolean) => void;\n  onUpdateItem:  (itemId: number, upd: GroceryListItemUpdate) => Promise<ValidationResult>;\n  onDeleteItem:  (itemId: number) => void;\n\n  isClearPending: boolean;\n  onClearCompleted: () => void;\n\n  onCopyToClipboard: () => void;\n}\n\nconst GroceryListFC: React.FC<IGroceryListFCProps> = ({\n    list, isNew, onCreate, onUpdate, onRemove,\n    items, filter, onChangeFilter,\n    onAddItem, onToggleItem, onToggleItems, onUpdateItem, onDeleteItem,\n    isClearPending, onClearCompleted,\n    onCopyToClipboard }: IGroceryListFCProps) => { // eslint-disable-line arrow-body-style\n  return (\n    <>\n      <GroceryListHeader\n          list     = {list}\n          isNew    = {isNew}\n          onCreate = {onCreate}\n          onUpdate = {onUpdate}\n          onRemove = {onRemove}\n\n          items    = {items}\n          filter   = {filter}\n          onChangeFilter = {onChangeFilter}\n          />\n      <GroceryListItems\n          list     = {list}\n          isNew    = {isNew}\n          items    = {items}\n          filter   = {filter}\n          onAddItem     = {onAddItem}\n          onToggleItem  = {onToggleItem}\n          onToggleItems = {onToggleItems}\n          onUpdateItem    = {onUpdateItem}\n          onDeleteItem  = {onDeleteItem}\n          />\n      <GroceryListFooter\n          list     = {list}\n          isNew    = {isNew}\n          items    = {items}\n          isClearPending   = {isClearPending}\n          onClearCompleted = {onClearCompleted}\n          onCopyToClipboard = {onCopyToClipboard}\n          />\n    </>\n  );\n};\n\nexport default GroceryListFC;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router';\n\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport * as GroceryListActions from '../store/GroceryListActions';\nimport * as GroceryListItemActions from '../store/GroceryListItemActions';\nimport * as GroceryListItemsActions from '../store/GroceryListItemsActions';\nimport { RootState } from '../../app/Store';\nimport { GroceryList, GroceryListCreate, GroceryListUpdate } from '../store/GroceryListTypes';\nimport GroceryListFC from '../components/GroceryList';\nimport useCrash from '../../common/hooks/useCrash';\nimport { copyToClipboard, getRoutePath } from '../../common/utility';\nimport { GroceryListItem, GroceryListItemCreate, GroceryListItemUpdate } from '../store/GroceryListItemTypes';\n\nexport interface IGroceryListContainerProps {\n  isNew: boolean;\n}\n\nexport enum GROCERY_LIST_FILTER {\n  ALL = 'ALL',\n  ACTIVE = 'ACTIVE',\n  COMPLETED = 'COMPLETED'\n}\n\nfunction toClipboardText(list: GroceryList, items: Array<GroceryListItem>): string {\n  const titleText = `${list.title}:`;\n  const itemsText = items\n      .map(i => `${i.completed ? '[x]' : '[ ]'} ${i.title}`)\n      .join('\\n');\n\n  return `${titleText}\\n${itemsText}`;\n}\n\nconst GroceryListContainer: React.FC<IGroceryListContainerProps> = ({\n    isNew }: IGroceryListContainerProps) => {\n  const dispatch = useDispatch();\n  const crash = useCrash();\n  const nav = useNavigate();\n\n  const groceryListState = useSelector((state: RootState) => state.groceryList);\n  const { item: list } = groceryListState;\n  const listSlug = list?.slug;\n  const prevList = useRef<GroceryList | undefined>();\n\n  const groceryListItemsState = useSelector((state: RootState) => state.groceryListItems);\n  const { items: listItems } = groceryListItemsState;\n  const prevListItems = useRef<Array<GroceryListItem> | undefined>();\n\n  const [filter, setFilter] = useState<GROCERY_LIST_FILTER>(GROCERY_LIST_FILTER.ALL);\n  const [isDeleting, setIsDeleting] = useState<boolean>(false);\n  const [isClearing, setIsClearing] = useState<boolean>(false);\n\n  const createList = useCallback(async (listCreate: GroceryListCreate) => GroceryListActions.create(dispatch, listCreate), [dispatch]);\n  const updateList = useCallback(async (upd: GroceryListUpdate) => GroceryListActions.update(dispatch, listSlug ?? '', upd), [listSlug, dispatch]);\n  const removeList = useCallback(() => {\n    if (list?.id == null) { crash('Invalid state: list item may not be null'); return; }\n    setIsDeleting(true);\n    dispatch(GroceryListActions.remove(list.id, listSlug ?? ''));\n  }, [list?.id, listSlug, dispatch]);\n\n  const clearCompleted = useCallback(() => {\n    if (list?.id == null) { crash('Invalid state: list item may not be null'); return; }\n    setIsClearing(true);\n    const completedItems = listItems?.filter(i => i.completed) ?? [];\n    GroceryListItemsActions.clearCompleted(dispatch, list.id, completedItems)\n      .then(() => {\n        setIsClearing(false);\n      });\n  }, [list?.id, listItems, dispatch]);\n\n  const addItem = useCallback(async (itemCreate: GroceryListItemCreate) => (\n    GroceryListItemActions.create(dispatch, list?.id ?? 0, itemCreate)\n  ), [list?.id, dispatch]);\n\n  const toggleItem = useCallback((itemId: number, completed: boolean) => {\n    if (list?.id == null) { crash('Invalid state: list item may not be null'); return; }\n    // setIsToggling(true);\n    dispatch(GroceryListItemActions.toggleItem(list.id, itemId, completed));\n  }, [list?.id, dispatch]);\n\n  const toggleItems = useCallback((items: Array<GroceryListItem>, newCompleted: boolean) => {\n    if (list?.id == null || listItems == null) { crash('Invalid state: list item may not be null'); return; }\n    // setIsToggling(true);\n    dispatch(GroceryListItemsActions.toggleItems(list.id, items, newCompleted));\n  }, [list?.id, listItems, dispatch]);\n\n  const updateItem = useCallback(async (itemId: number, update: GroceryListItemUpdate) => {\n    if (list?.id == null) { crash('Invalid state: list item may not be null'); return undefined; }\n    return GroceryListItemActions.update(dispatch, list.id, itemId, update);\n  }, [list?.id, dispatch]);\n\n  const removeItem = useCallback((itemId: number) => {\n    if (list == null) { crash('Invalid state: list item may not be null'); return; }\n    // setIsDeletingItem(true);\n    dispatch(GroceryListItemActions.remove(list.id, itemId));\n  }, [list, dispatch]);\n\n  // Handle deletion\n  useEffect(() => {\n    if (prevList.current == null) {\n      prevList.current = list;\n    } else if (isDeleting && prevList.current != null && list == null) {\n      nav(getRoutePath('/grocery-lists'));\n    }\n  }, [list]);\n\n  // Handle clear\n  useEffect(() => {\n    if (prevListItems.current == null) {\n      prevListItems.current = listItems;\n    } else if (isClearing) {\n      setIsClearing(false);\n    }\n  }, [listItems]);\n\n  const handleCopyToClipboard = useCallback(() => {\n    if (list == null) { crash('Invalid state: list item may not be null'); return; }\n    const text = toClipboardText(list, listItems ?? []);\n    copyToClipboard(text);\n  }, [list, listItems]);\n\n  return (\n    <GroceryListFC\n        list     = {list}\n        isNew    = {isNew}\n        onCreate = {createList}\n        onUpdate = {updateList}\n        onRemove = {removeList}\n\n        items    = {listItems}\n        filter   = {filter}\n        onChangeFilter = {setFilter}\n\n        onAddItem     = {addItem}\n        onToggleItem  = {toggleItem}\n        onToggleItems = {toggleItems}\n        onUpdateItem  = {updateItem}\n        onDeleteItem  = {removeItem}\n\n        isClearPending = {isClearing}\n        onClearCompleted = {clearCompleted}\n\n        onCopyToClipboard = {handleCopyToClipboard}\n        />\n  );\n};\n\nexport default GroceryListContainer;\n","import { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport { defineMessages, useIntl } from 'react-intl';\nimport * as _ from 'lodash-es';\n\nimport { RootState } from '../../app/Store';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport * as GroceryListActions from '../store/GroceryListActions';\nimport * as GroceryListItemsActions from '../store/GroceryListItemsActions';\nimport PageWrapper from '../../common/components/PageWrapper';\nimport { getResourcePath } from '../../common/utility';\nimport GroceryListContainer from './GroceryListContainer';\n\nconst GroceryListPage: React.FC = () => {\n  const { formatMessage } = useIntl();\n  const messages = defineMessages({\n    new_grocery_list: {\n      id: 'grocery_list.new_grocery_list',\n      description: 'New GroceryList documentTitle',\n      defaultMessage: 'New grocery list',\n    },\n  });\n\n  const params = useParams();\n  const nav = useNavigate();\n  const dispatch = useDispatch();\n\n  const groceryListState  = useSelector((state: RootState) => state.groceryList);\n  const groceryListMeta   = groceryListState.meta;\n  const groceryListItemsState  = useSelector((state: RootState) => state.groceryListItems);\n  const groceryListItemsMeta   = groceryListItemsState.meta;\n\n  const listSlug = params.list;\n  const isNew = listSlug === 'create';\n  // Load GroceryList\n  useEffect(() => {\n    if (listSlug) {\n      window.scrollTo(0, 0);\n      if (isNew) {\n        dispatch(GroceryListActions.reset());\n        dispatch(GroceryListItemsActions.reset());\n      } else {\n        dispatch(GroceryListActions.load(listSlug));\n      }\n    }\n  }, [listSlug]);\n\n  useEffect(() => {\n    if (groceryListState.item?.id && !isNew) {\n      dispatch(GroceryListItemsActions.load(groceryListState.item.id));\n    }\n  }, [groceryListState.item?.id, isNew]);\n\n  // If list not found, redirect to lists\n  useEffect(() => {\n    if (_.get(groceryListMeta.error, 'status') === 404) {\n      nav(getResourcePath('/grocery-lists'));\n    }\n  }, [groceryListMeta.error]);\n\n  // If list not found, redirect to lists\n  useEffect(() => {\n    if (_.get(groceryListItemsMeta.error, 'status') === 404) {\n      nav(getResourcePath('/grocery-lists'));\n    }\n  }, [groceryListItemsMeta.error]);\n\n  // componentWillUnmount\n  useEffect(() => () => {\n    dispatch(GroceryListActions.reset());\n    dispatch(GroceryListItemsActions.reset());\n  }, []);\n\n  return (\n    <PageWrapper title={isNew ? formatMessage(messages.new_grocery_list) : groceryListState.item?.title}>\n      <GroceryListContainer isNew={isNew} />\n    </PageWrapper>\n  );\n};\n\nexport default GroceryListPage;\n","import { handleError, handleFormError, request } from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { GroceryList, GroceryListAction, GroceryListActionTypes, GroceryListBulkAdd, GroceryListCreate, GroceryListDispatch, GroceryListDto, GroceryListUpdate, GROCERY_LIST_STORE, toGroceryList } from './GroceryListTypes';\nimport { Ingredient, SubRecipe } from '../../recipe/store/RecipeTypes';\nimport { AnyDispatch, toBasicAction } from '../../common/store/redux';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { GroceryListItemDto, toGroceryListItem } from './GroceryListItemTypes';\n\nexport const getGroceryListSuccess = (groceryList: GroceryList): GroceryListAction => (\n  { ...toBasicAction(GROCERY_LIST_STORE, ACTION.GET_SUCCESS), payload: groceryList }\n);\n\nexport const load = (listId: string) => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.list}${listId}/`)\n    .then(res => {\n      dispatch(getGroceryListSuccess(toGroceryList(res.body as GroceryListDto)));\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_STORE)));\n};\n\nexport const create = async (dispatch: AnyDispatch, item: GroceryListCreate) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.CREATE_START) });\n\n  return request()\n    .post(serverURLs.list)\n    .send(item)\n    .then(res => {\n      const groceryList = toGroceryList(res.body);\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_STORE,\n          ACTION.CREATE_SUCCESS\n        ),\n        payload: groceryList,\n      });\n    })\n    .catch(err => handleFormError(dispatch, err, GROCERY_LIST_STORE));\n};\n\nexport const update = async (dispatch: AnyDispatch, slug: string, item: Partial<GroceryListUpdate>) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.UPDATE_START) });\n\n  return request()\n    .patch(`${serverURLs.list}${slug}/`)\n    .send(item)\n    .then(res => {\n      const groceryList = toGroceryList(res.body);\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_STORE,\n          ACTION.UPDATE_SUCCESS\n        ),\n        payload: groceryList,\n      });\n    })\n    .catch(err => handleFormError(dispatch, err, GROCERY_LIST_STORE));\n};\n\nexport const remove = (id: number, slug: string) => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.DELETE_START) });\n\n  request()\n    .delete(`${serverURLs.list}${slug}/`)\n    .then(() => {\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_STORE,\n          ACTION.DELETE_SUCCESS\n        ),\n        payload: { id: id },\n      });\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_STORE)));\n};\n\nfunction format(i: Ingredient | SubRecipe, formatter: FormatterFunc) {\n  const quantityS = i.quantity && i.quantity !== '0' ? i.quantity : undefined;\n  const formatted = formatter(i.measurement, i.quantity);\n  return [quantityS, formatted, i.title].filter(Boolean).join(' ');\n}\n\ntype FormatterFunc = (measurement: string | undefined, quantity: string | undefined) => string;\n\nexport const bulkAdd = async (dispatch: AnyDispatch, list: number, data: GroceryListBulkAdd, formatter: FormatterFunc) => {\n  const checkedIngredients = data.ingredientGroups.flatMap(ig => ig.ingredients.map(i => ({ list: list, title: format(i, formatter) })));\n  const checkedSubRecipe = data.subrecipes.map(sr => ({ list: list, title: format(sr, formatter) }));\n  const allItems = checkedIngredients.concat(checkedSubRecipe);\n\n  if (allItems.length > 0) {\n    dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.UPDATE_START) });\n    return request()\n      .post(serverURLs.bulk_list_item)\n      .send(allItems)\n      .then(res => {\n        dispatch({ ...toBasicAction(GROCERY_LIST_STORE, GroceryListActionTypes.BULK_ADD), payload: res.body.map((i: GroceryListItemDto) => toGroceryListItem(list, i)) });\n        dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.UPDATE_SUCCESS) });\n      })\n      .catch(err => dispatch(handleError(err, GROCERY_LIST_STORE)));\n  } else {\n    return null;\n  }\n};\n\nexport const preload = (list: Partial<GroceryList>) => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.PRELOAD), payload: list });\n};\n\nexport const reset = () => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.RESET) });\n};\n","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import * as React from 'react';\nimport { ENTERING, EXITING } from 'react-transition-group/Transition';\nimport Fade from './Fade';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'showing',\n  [EXITING]: 'showing show'\n};\nconst ToastFade = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(Fade, {\n  ...props,\n  ref: ref,\n  transitionClasses: fadeStyles\n}));\nToastFade.displayName = 'ToastFade';\nexport default ToastFade;","import * as React from 'react';\nconst ToastContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onClose() {}\n});\nexport default ToastContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CloseButton from './CloseButton';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst ToastHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = true,\n  className,\n  children,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast-header');\n  const context = useContext(ToastContext);\n  const handleClick = useEventCallback(e => {\n    context == null ? void 0 : context.onClose == null ? void 0 : context.onClose(e);\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    className: classNames(bsPrefix, className),\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick,\n      \"data-dismiss\": \"toast\"\n    })]\n  });\n});\nToastHeader.displayName = 'ToastHeader';\nexport default ToastHeader;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('toast-body');","import * as React from 'react';\nimport { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport ToastFade from './ToastFade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Toast = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  transition: Transition = ToastFade,\n  show = true,\n  animation = true,\n  delay = 5000,\n  autohide = false,\n  onClose,\n  bg,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast');\n\n  // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n  const delayRef = useRef(delay);\n  const onCloseRef = useRef(onClose);\n  useEffect(() => {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  const autohideTimeout = useTimeout();\n  const autohideToast = !!(autohide && show);\n  const autohideFunc = useCallback(() => {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(() => {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  const toastContext = useMemo(() => ({\n    onClose\n  }), [onClose]);\n  const hasAnimation = !!(Transition && animation);\n  const toast = /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(bsPrefix, className, bg && `bg-${bg}`, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  });\n  return /*#__PURE__*/_jsx(ToastContext.Provider, {\n    value: toastContext,\n    children: hasAnimation && Transition ? /*#__PURE__*/_jsx(Transition, {\n      in: show,\n      unmountOnExit: true,\n      children: toast\n    }) : toast\n  });\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});"],"names":["Button","forwardRef","_ref","ref","id","tooltip","tooltipPlacement","children","rest","_objectWithoutProperties","_excluded","_jsx","ConditionalWrapper","condition","Boolean","render","childr","Tooltip","concat","placement","BootstrapButton","_objectSpread","undefined","Checkbox","_BaseInputComponent","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","createRef","handleChange","_this$props$onChange","_this$props","props","readOnly","disabled","onChange","name","value","_createClass","key","this","current","focus","label","_jsxs","_Fragment","Icon","icon","className","_this$props2","style","helpText","errors","meta","Form","getGroupProps","controlId","getFormGroupClassNames","getHelpText","getErrorMessage","checked","getLabel","BaseInputComponent","messages","defineMessages","accept","description","defaultMessage","close","ModalHeaderCloseButton","onClose","formatMessage","useIntl","type","onClick","variant","classNames","size","Modal","_ref2","show","title","acceptTitle","closeTitle","onAccept","noCloseButton","_ref2$size","acceptButtonProps","_excluded2","handleClose","useCallback","handleAccept","hasButton","BootstrapModal","backdrop","centered","onHide","keyboard","ErrorBoundary","verbose","printStack","NavButton","to","as","Link","toCleanLocationPath","path","_getEnv","_getEnv2","pathNoHost","startsWith","getEnv","substring","startsWithSlash","endsWithSlash","endsWith","state","nav","useNavigate","location","useLocation","error","dynamicHeightContext","useContext","DynamicHeightContext","useEffect","document","p","getRoutePath","Container","pathname","marginTop","toolbarHeight","usePrompt","message","when","blocker","navigator","NavigationContext","unblock","block","tx","autoUnblockingTx","retry","useBlocker","window","confirm","navigation_warning","isDirty","promptMsg","useMemo","dirtyBlocker","Beforeunload","onBeforeunload","form_errors_title","form_errors_alert","form_errors_table_heading_error","form_errors_table_heading_message","save_success","FormErrorRowError","_document$querySelect","_document$querySelect2","err","querySelector","textContent","errMsgs","isArray","push","_toConsumableArray","map","errr","join","FormErrors","_ref5","visibleErrors","visibleErrorsArray","Object","entries","filter","_ref3","_slicedToArray","fromEntries","getVisibleErrors","errorTableRowsJsx","keys","res","forEach","nextErr","errorTableJsx","Alert","severity","P","SubmitSuccess","_ref6","dirty","submitting","onSubmitSuccess","prevSubmitting","useRef","_useState","useState","_useState2","showSaveSuccess","setShowSaveSuccess","handleCloseSaveSuccessToast","Toast","anchorOrigin","horizontal","vertical","NavigationPrompt","FormSpy","subscription","submitErrors","FormStatus","form","initialValues","restart","capitalize","str","toUpperCase","charAt","slice","_ref$autoHide","autoHide","anchorString","ReactBootstrapToast","delay","autohide","success","closeButton","clearCompleted","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","listId","items","ids","wrap","_context","prev","next","i","completed","abrupt","request","delete","serverURLs","send","then","toBasicAction","GROCERY_LIST_ITEMS_STORE","GroceryListItemsActionTypes","payload","catch","handleFormError","stop","_x","_x2","_x3","reset","ACTION","create","item","dto","GROCERY_LIST_ITEM_STORE","list","post","groceryListItem","toGroceryListItem","body","update","_callee2","_context2","patch","_x4","_x5","_x6","_x7","clear_completed_tooltip","copy_to_clipboard_tooltip","copy_to_clipboard_toast","isNew","onClearCompleted","isClearPending","onCopyToClipboard","showCopyToast","setShowCopyToast","handleCopyToClipboard","setTimeout","handleCloseCopyToast","hasCheckedItem","find","isDemoMode","groceryList_items_summary_empty","groceryList_items_summary_completed","groceryList_items_summary_incompleted","groceryList_filter_by","filter_off","filter_active","filter_completed","_items$length","_items$filter$length","_items$filter$length2","_list$item_count","_list$item_count2","onChangeFilter","intl","itemsCount","completedCount","incompletedCount","handleFilterByClick","event","newFilter","preventDefault","dropdownItems","values","GROCERY_LIST_FILTER","f","Dropdown","active","optionallyFormatMessage","sum","item_count","sum_not_completed","new_title_placeholder","confirm_delete_message","edit_list","delete_list","back_to_lists","onCreate","onUpdate","onRemove","parentPagePath","lastIndexOf","titleRef","inputRef","editMode","setEditMode","_useState3","_useState4","showDeleteConfirm","setShowDeleteConfirm","handleDeleteClick","handleDeleteAccept","handleDeleteClose","listSlug","slug","handleEditClick","handleRevertClick","handleSubmit","createList","updList","handleSubmitSuccess","editing","tabIndex","ReduxForm","onSubmit","renderSubmit","ReFormStatus","InitialValuesResetter","ReInput","placeholder","maxLength","_ref4","NavLink","GroceryListSummary","new_item_placeholder","onAddItem","newTitle","setNewTitle","setError","handleAddItem","newTitlee","e","handleAddItemClick","handleLabelChange","_name","newValue","handleKeyDown","defaultPrevented","ctrlKey","shiftKey","currentTarget","Input","formatValidation","newItem","onKeyDown","edit_button","delete_button","old_title","new_title","EditItemForm","submitRef","oldTitle","upd","Row","Col","required","autoFocus","onToggle","onDelete","showEdit","setShowEdit","handleToggle","handleEditClose","autoClose","handleEditSubmit","_submitRef$current","click","handleEditItem","handleDeleteItem","toggle_all","filtered_items_info","filterListItems","ALL","ACTIVE","COMPLETED","onToggleItem","onToggleItems","onUpdateItem","onDeleteItem","filteredItems","handleToggleItemsClick","allItemsCompleted","itemsJsx","GroceryListItemFC","hasUncheckedItem","numberOfHiddenItems","GroceryListNewItem","GroceryListHeader","GroceryListItems","GroceryListFooter","useDispatch","crash","useCrash","useSelector","groceryList","prevList","listItems","groceryListItems","prevListItems","setFilter","isDeleting","setIsDeleting","_useState5","_useState6","isClearing","setIsClearing","listCreate","GroceryListActions","updateList","removeList","_listItems$filter","completedItems","GroceryListItemsActions","addItem","_callee3","itemCreate","_list$id","_context3","GroceryListItemActions","toggleItem","itemId","GroceryListItemActionTypes","handleError","toggleItems","newCompleted","updateItem","_callee4","_context4","removeItem","text","titleText","itemsText","toClipboardText","copyToClipboard","GroceryListFC","_groceryListState$ite2","_groceryListState$ite3","new_grocery_list","params","useParams","groceryListState","groceryListMeta","groceryListItemsMeta","scrollTo","_groceryListState$ite","get","results","_","getResourcePath","PageWrapper","GroceryListContainer","load","GROCERY_LIST_STORE","toGroceryList","remove","format","formatter","quantity","measurement","bulkAdd","data","checkedIngredients","checkedSubRecipe","allItems","ingredientGroups","flatMap","ig","ingredients","subrecipes","sr","GroceryListActionTypes","_x8","_x9","scrollbarSize","recalc","canUseDOM","scrollDiv","createElement","position","top","width","height","overflow","appendChild","offsetWidth","clientWidth","removeChild","createWithBsPrefix","ModalDialog","React","bsPrefix","contentClassName","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","displayName","ModalHeader","_ref$closeLabel","closeLabel","_ref$closeButton","AbstractModalHeader","DivStyledAsH4","divWithClassName","Component","DialogTransition","Fade","timeout","BackdropTransition","dialogClassName","_ref$dialogAs","dialogAs","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","_ref$show","_ref$animation","animation","_ref$backdrop","_ref$keyboard","onEscapeKeyDown","onShow","container","_ref$autoFocus","_ref$enforceFocus","enforceFocus","_ref$restoreFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","propsManager","manager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","_useCallbackRef","useCallbackRef","_useCallbackRef2","modal","setModalRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","dialog","useWillUnmount","removeEventListener","handleDialogMouseDown","handleMouseUp","target","handleStaticModalAnimation","transitionEnd","handleClick","handleStaticBackdropClick","renderBackdrop","backdropProps","baseModalStyle","display","ModalContext","BaseModal","isAppearing","addEventListener","transition","backdropTransition","renderDialog","dialogProps","role","onMouseUp","onMouseDown","assign","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","_ref$as","decoratedBsPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","brkPoint","cols","propValue","infix","fadeStyles","_fadeStyles","_defineProperty","ENTERING","EXITING","ToastFade","transitionClasses","ToastHeader","closeVariant","context","ToastContext","CloseButton","_ref$transition","Transition","_ref$delay","_ref$autohide","bg","delayRef","onCloseRef","autohideTimeout","useTimeout","autohideToast","autohideFunc","set","toastContext","hasAnimation","toast","in","unmountOnExit","ToastBody"],"sourceRoot":""}