{"version":3,"file":"static/js/918.56fa7bcc.chunk.js","mappings":"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","sources":["browse/components/ListRecipes.tsx","browse/store/MiniBrowseActions.ts","browse/containers/MiniBrowse.tsx","common/components/Button.tsx","common/components/Loading.tsx","common/components/Modal.tsx","common/components/NavButton.tsx","groceryList/store/GroceryListActions.ts","rating/components/Ratings.tsx","rating/components/RatingComment.tsx","rating/components/RatingComments.tsx","rating/components/NewRating.tsx","rating/components/RatingsHeader.tsx","rating/components/RatingsWrapper.tsx","rating/store/actions.ts","rating/containers/Ratings.tsx","recipe/components/RecipeFooter.tsx","recipe/components/IngredientsHeader.tsx","common/components/ReduxForm/ReSelect.tsx","recipe/components/AddToGroceryListModal.tsx","recipe/components/IngredientsFooter.tsx","recipe/components/IngredientsPanel.tsx","recipe/containers/IngredientsPanelContainer.tsx","common/components/ImageViewer.tsx","recipe/context/CookingModeContext.ts","common/hooks/useWakeLock.ts","recipe/components/CookingModeButton.tsx","recipe/components/RecipeHeader.tsx","recipe/components/DirectionsPanel.tsx","recipe/components/RecipeScheme.tsx","recipe/context/CookingModeContextProvider.tsx","common/components/pageVisibility/utils.ts","common/components/pageVisibility/usePageVisibility.ts","recipe/components/CookingModeHandler.tsx","recipe/containers/RecipeContainer.tsx","recipe/containers/RecipePage.tsx"],"sourcesContent":["import { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport '../css/list-recipes.css';\n\nimport Ratings from '../../rating/components/Ratings';\nimport { RecipeList } from '../../recipe/store/RecipeTypes';\nimport { getRecipeImagePlaceholder, getResourcePath, getRoutePath } from '../../common/utility';\nimport Tooltip from '../../common/components/Tooltip';\n\nexport interface IListRecipes {\n  data:   Array<RecipeList> | undefined;\n  onOpenRecipe: (rec: RecipeList) => void;\n}\n\nfunction getRecipeImage(recipe: RecipeList) {\n  if (recipe.photoThumbnail) {\n    return recipe.photoThumbnail;\n  } else {\n    const images = ['fish', 'fried-eggs', 'pizza', 'soup', 'steak'];\n    return getResourcePath(`/images/${images[Math.floor(Math.random() * images.length)]}.jpg`);\n  }\n}\n\nconst ListRecipes: React.FC<IListRecipes> = ({ data, onOpenRecipe }: IListRecipes) => {\n  const IMAGE_PLACEHOLDER = useMemo(() => getRecipeImagePlaceholder(), []);\n\n  const recipes = data?.map(recipe => {\n    const link = getRoutePath(`/recipe/${recipe.slug}`);\n    return (\n      <Col key={recipe.id}>\n        <Card className={classNames('recipe')}>\n          <Link to={link} onClick={() => onOpenRecipe(recipe)}>\n            <Card.Img variant='top' src={getRecipeImage(recipe)} alt='' placeholder={IMAGE_PLACEHOLDER} />\n            <Card.Title as='h3'><Tooltip id={recipe.slug} tooltip={recipe.title} placement='bottom' className='card-title-tooltip'>{recipe.title}</Tooltip></Card.Title>\n            <div><Ratings stars={recipe.rating} /></div>\n            <Card.Text>{recipe.info}</Card.Text>\n          </Link>\n        </Card>\n      </Col>\n    );\n  });\n\n  return (\n    <Row xs={1} sm={2} lg={4} className='g-4 recipes-list'>\n      {recipes}\n    </Row>\n  );\n};\n\nexport default ListRecipes;\n","import { handleError, request } from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { MiniBrowseDispatch, MINI_BROWSE_STORE } from './MiniBrowseTypes';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { toRecipeList } from '../../recipe/store/RecipeTypes';\nimport { toBasicAction } from '../../common/store/redux';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const loadMiniBrowse = (filter: string) => (dispatch: MiniBrowseDispatch) => {\n  dispatch({ ...toBasicAction(MINI_BROWSE_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.mini_browse}${filter ? `&${filter}` : ''}`)\n    .then(res => {\n        dispatch({\n          ...toBasicAction(\n            MINI_BROWSE_STORE,\n            ACTION.GET_SUCCESS\n          ),\n          payload: res.body.results?.map(toRecipeList),\n        });\n    })\n    .catch(err => dispatch(handleError(err, MINI_BROWSE_STORE)));\n};\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useLocation, useParams } from 'react-router';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/browse.css';\n\nimport { RootState } from '../../app/Store';\nimport Icon from '../../common/components/Icon';\nimport Button from '../../common/components/Button';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport { Recipe, RecipeList } from '../../recipe/store/RecipeTypes';\nimport * as RecipeActions from '../../recipe/store/RecipeActions';\nimport ListRecipes from '../components/ListRecipes';\nimport * as MiniBrowseActions from '../store/MiniBrowseActions';\n\nconst messages = defineMessages({\n  shuffleSuggestionsButton: {\n    id: 'browse.shuffle_suggestions_button_title',\n    description: 'Title/tooltip of the icon button to shuffle the suggestions.',\n    defaultMessage: 'Shuffle suggestions',\n  },\n});\n\ninterface IMiniBrowseProps {\n  heading: string;\n  count: number;\n  filters?: Record<string, string>;\n}\n\nfunction buildUrlFilter(count: number, filters: Record<string, string> | undefined): string {\n  const searchParams = new URLSearchParams(filters);\n  searchParams.append('limit', count.toString());\n  return searchParams.toString();\n}\n\nconst MiniBrowse: React.FC<IMiniBrowseProps> = ({ heading, count, filters }: IMiniBrowseProps) => {\n  const { formatMessage }  = useIntl();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const params = useParams();\n\n  const slug = params.recipe;\n\n  const miniBrowseItems = useSelector((state: RootState) => state.browse.browserMini.items);\n  const differentMiniBrowseItems = useMemo(() => miniBrowseItems?.filter(itm => itm.slug !== slug), [slug, miniBrowseItems]);\n  const recipeSlug = params.recipe ?? '';\n\n  useEffect(() => {\n    dispatch(MiniBrowseActions.loadMiniBrowse(buildUrlFilter(count, filters)));\n  }, [location]);\n\n  const handleShuffleClick = useCallback(() => {\n    dispatch(MiniBrowseActions.loadMiniBrowse(buildUrlFilter(count, filters)));\n  }, [dispatch, buildUrlFilter, count, filters]);\n\n  const handleOpenRecipe = useCallback((rec: RecipeList) => {\n    if (recipeSlug !== rec.slug) {\n      dispatch(RecipeActions.preload(rec as Recipe));\n    }\n  }, [recipeSlug, dispatch]);\n\n  if (differentMiniBrowseItems != null && differentMiniBrowseItems.length === 0) return null;\n\n  return (\n    <>\n      <h2 id='suggestions-heading'>{heading}</h2>\n      <Button id='shuffle-suggestions-button' variant='outline-primary' onClick={handleShuffleClick} className='print-hidden' tooltip={formatMessage(messages.shuffleSuggestionsButton)}>\n        <Icon icon='arrow-repeat' variant='light' />\n      </Button>\n      <ListRecipes data={differentMiniBrowseItems} onOpenRecipe={handleOpenRecipe} />\n    </>\n  );\n};\n\nexport default MiniBrowse;\n","import { forwardRef } from 'react';\nimport { Button as BootstrapButton } from 'react-bootstrap';\nimport { Placement } from 'react-bootstrap/esm/types';\n\nimport '../css/button.css';\nimport { CommonProps } from '../types/OverridableComponent';\nimport ConditionalWrapper from './ConditionalWrapper';\nimport Tooltip from './Tooltip';\n\nexport interface IButtonProps extends CommonProps {\n  id:         string;\n  type?:      'button' | 'reset' | 'submit';\n  variant?:   'primary' | 'secondary' | 'danger' | 'outline-primary' | 'outline-secondary' | 'outline-danger' | 'transparent';\n  size?:      'sm' | 'lg';\n  disabled?:  boolean;\n  onClick?:   (event: React.MouseEvent<HTMLButtonElement>) => void;\n\n  tooltip?:   string;\n  tooltipPlacement?: Placement;\n\n  children:   React.ReactNode;\n}\n\nconst Button = forwardRef<HTMLButtonElement, IButtonProps>(({\n  id,\n  tooltip, tooltipPlacement,\n  children, ...rest }: IButtonProps, ref) => (\n    <ConditionalWrapper\n        condition = {Boolean(tooltip)}\n        render = {childr => <Tooltip id={`${id}-tooltip`} tooltip={tooltip} placement={tooltipPlacement}>{childr}</Tooltip>}>\n      <BootstrapButton id={id} aria-label={tooltip || undefined} aria-describedby={undefined} {...rest} ref={ref}>\n        {children}\n      </BootstrapButton>\n    </ConditionalWrapper>\n));\n\nexport default Button;\n","import CircularProgress from './CircularProgress';\n\ninterface ILoadingProps {\n  message?: string;\n}\n\nconst Loading = ({ message }: ILoadingProps) => (\n  <div className='spinner'>\n    {message && <h3 className='no-results'>{ message }</h3>}\n    <CircularProgress />\n  </div>\n);\n\nexport default Loading;\n","import { forwardRef, useCallback } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Button, Modal as BootstrapModal } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport '../css/modal.css';\n\nimport Icon from './Icon';\nimport { CommonProps } from '../types/OverridableComponent';\nimport ErrorBoundary from './ErrorBoundary';\n\nexport interface IModalHeaderCloseButtonProps extends CommonProps {\n  onClose: (event: React.MouseEvent) => void;\n}\n\nconst messages = defineMessages({\n  accept: {\n    id: 'modal.accept',\n    description: 'Default modal accept button',\n    defaultMessage: 'Accept',\n  },\n  close: {\n    id: 'modal.close',\n    description: 'Default modal close button',\n    defaultMessage: 'Close',\n  },\n});\n\nexport const ModalHeaderCloseButton = forwardRef<HTMLButtonElement, IModalHeaderCloseButtonProps>(({\n  onClose, className, ...rest }: IModalHeaderCloseButtonProps, ref) => {\n    const { formatMessage } = useIntl();\n\n    return (\n      <Button type='button' onClick={onClose} variant='transparent' className={classNames('close-button', className)} aria-label={formatMessage(messages.close)} {...rest} ref={ref}>\n        <Icon icon='x' variant='light' size='2x' />\n      </Button>\n    );\n  });\n\nexport interface IModalProps extends CommonProps {\n  show: boolean;\n  title: string;\n\n  acceptTitle?: React.ReactNode;\n  closeTitle?: React.ReactNode;\n\n  onAccept?: () => void;\n  onClose?: (autoClose: boolean) => void;\n  noCloseButton?: boolean;\n\n  /**\n   * @defaultValue `lg`\n   */\n  size?: 'sm' | 'lg' | 'xl';\n\n  acceptButtonProps?: Partial<unknown>;\n  children: React.ReactNode;\n}\n\nconst Modal = forwardRef<HTMLDivElement, IModalProps>(({\n    show, title,\n    acceptTitle, closeTitle,\n    onAccept, onClose, noCloseButton,\n    size = 'lg', acceptButtonProps, children,\n    ...rest }: IModalProps, ref) => {\n  const { formatMessage } = useIntl();\n\n  const handleClose = useCallback(() => {\n    onClose?.(false);\n  }, [onClose]);\n\n  const handleAccept = useCallback(() => {\n    onClose?.(true);\n    onAccept?.();\n  }, [onClose, onAccept]);\n\n  const hasButton = onAccept != null || (onClose != null && !noCloseButton);\n\n  return (\n    <BootstrapModal\n        show = {show}\n        backdrop = 'static'\n        size = {size}\n        centered\n        onHide = {handleClose}\n        keyboard = {false}\n        {...rest}\n        ref = {ref}>\n      <BootstrapModal.Header>\n        <BootstrapModal.Title>{title}</BootstrapModal.Title>\n        {onClose != null && (\n          <ModalHeaderCloseButton onClose={handleClose} />\n        )}\n      </BootstrapModal.Header>\n\n      <BootstrapModal.Body>\n        <ErrorBoundary verbose printStack>\n          {children}\n        </ErrorBoundary>\n      </BootstrapModal.Body>\n\n      {hasButton && (\n        <BootstrapModal.Footer>\n          {onClose != null && !noCloseButton && (\n            <Button variant='outline-primary' onClick={handleClose}>\n              {closeTitle ?? formatMessage(messages.close)}\n            </Button>\n          )}\n          {onAccept != null && (\n            <Button variant='primary' onClick={handleAccept} {...acceptButtonProps}>\n              {acceptTitle ?? formatMessage(messages.accept)}\n            </Button>\n          )}\n        </BootstrapModal.Footer>\n      )}\n    </BootstrapModal>\n  );\n});\n\nexport default Modal;\n","import { forwardRef } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { CommonProps } from '../types/OverridableComponent';\nimport ConditionalWrapper from './ConditionalWrapper';\nimport Tooltip from './Tooltip';\nimport { IButtonProps } from './Button';\n\nexport interface INavButtonProps extends\n    Omit<IButtonProps, 'type'>,\n    CommonProps {\n  to: string;\n}\n\nconst NavButton = forwardRef<HTMLButtonElement, INavButtonProps>(({\n  id, to,\n  tooltip,\n  children, ...rest }: INavButtonProps, ref) => (\n    <ConditionalWrapper\n        condition = {Boolean(tooltip)}\n        render = {childr => <Tooltip id={`${id}-tooltip`} tooltip={tooltip}>{childr}</Tooltip>}>\n      <Button\n          type = 'button'\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          as = {Link as any}\n          to = {to}\n          aria-label = {tooltip}\n          {...rest}\n          ref = {ref}>\n        {children}\n      </Button>\n    </ConditionalWrapper>\n));\n\nexport default NavButton;\n","import { handleError, handleFormError, request } from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport { GroceryList, GroceryListAction, GroceryListActionTypes, GroceryListBulkAdd, GroceryListCreate, GroceryListDispatch, GroceryListDto, GroceryListUpdate, GROCERY_LIST_STORE, toGroceryList } from './GroceryListTypes';\nimport { Ingredient, SubRecipe } from '../../recipe/store/RecipeTypes';\nimport { AnyDispatch, toBasicAction } from '../../common/store/redux';\nimport { ACTION } from '../../common/store/ReduxHelper';\nimport { GroceryListItemDto, toGroceryListItem } from './GroceryListItemTypes';\n\nexport const getGroceryListSuccess = (groceryList: GroceryList): GroceryListAction => (\n  { ...toBasicAction(GROCERY_LIST_STORE, ACTION.GET_SUCCESS), payload: groceryList }\n);\n\nexport const load = (listId: string) => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.list}${listId}/`)\n    .then(res => {\n      dispatch(getGroceryListSuccess(toGroceryList(res.body as GroceryListDto)));\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_STORE)));\n};\n\nexport const create = async (dispatch: AnyDispatch, item: GroceryListCreate) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.CREATE_START) });\n\n  return request()\n    .post(serverURLs.list)\n    .send(item)\n    .then(res => {\n      const groceryList = toGroceryList(res.body);\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_STORE,\n          ACTION.CREATE_SUCCESS\n        ),\n        payload: groceryList,\n      });\n    })\n    .catch(err => handleFormError(dispatch, err, GROCERY_LIST_STORE));\n};\n\nexport const update = async (dispatch: AnyDispatch, slug: string, item: Partial<GroceryListUpdate>) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.UPDATE_START) });\n\n  return request()\n    .patch(`${serverURLs.list}${slug}/`)\n    .send(item)\n    .then(res => {\n      const groceryList = toGroceryList(res.body);\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_STORE,\n          ACTION.UPDATE_SUCCESS\n        ),\n        payload: groceryList,\n      });\n    })\n    .catch(err => handleFormError(dispatch, err, GROCERY_LIST_STORE));\n};\n\nexport const remove = (id: number, slug: string) => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.DELETE_START) });\n\n  request()\n    .delete(`${serverURLs.list}${slug}/`)\n    .then(() => {\n      dispatch({\n        ...toBasicAction(\n          GROCERY_LIST_STORE,\n          ACTION.DELETE_SUCCESS\n        ),\n        payload: { id: id },\n      });\n    })\n    .catch(err => dispatch(handleError(err, GROCERY_LIST_STORE)));\n};\n\nfunction format(i: Ingredient | SubRecipe, formatter: FormatterFunc) {\n  const quantityS = i.quantity && i.quantity !== '0' ? i.quantity : undefined;\n  const formatted = formatter(i.measurement, i.quantity);\n  return [quantityS, formatted, i.title].filter(Boolean).join(' ');\n}\n\ntype FormatterFunc = (measurement: string | undefined, quantity: string | undefined) => string;\n\nexport const bulkAdd = async (dispatch: AnyDispatch, list: number, data: GroceryListBulkAdd, formatter: FormatterFunc) => {\n  const checkedIngredients = data.ingredientGroups.flatMap(ig => ig.ingredients.map(i => ({ list: list, title: format(i, formatter) })));\n  const checkedSubRecipe = data.subrecipes.map(sr => ({ list: list, title: format(sr, formatter) }));\n  const allItems = checkedIngredients.concat(checkedSubRecipe);\n\n  if (allItems.length > 0) {\n    dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.UPDATE_START) });\n    return request()\n      .post(serverURLs.bulk_list_item)\n      .send(allItems)\n      .then(res => {\n        dispatch({ ...toBasicAction(GROCERY_LIST_STORE, GroceryListActionTypes.BULK_ADD), payload: res.body.map((i: GroceryListItemDto) => toGroceryListItem(list, i)) });\n        dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.UPDATE_SUCCESS) });\n      })\n      .catch(err => dispatch(handleError(err, GROCERY_LIST_STORE)));\n  } else {\n    return null;\n  }\n};\n\nexport const preload = (list: Partial<GroceryList>) => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.PRELOAD), payload: list });\n};\n\nexport const reset = () => (dispatch: GroceryListDispatch) => {\n  dispatch({ ...toBasicAction(GROCERY_LIST_STORE, ACTION.RESET) });\n};\n","import { useCallback } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Button } from 'react-bootstrap';\n\nimport '../css/ratings.css';\n\nimport Icon from '../../common/components/Icon';\nimport ConditionalWrapper from '../../common/components/ConditionalWrapper';\n\nexport interface IRatingsProps {\n  stars: number;\n  onChange?: (stars: number) => void;\n}\n\ninterface IStarProps {\n  stars: number;\n  num:   number;\n  onChange?: (stars: number) => void;\n}\n\nconst Star: React.FC<IStarProps> = ({ stars, num, onChange }: IStarProps) => {\n  const { formatMessage } = useIntl();\n  const messages = defineMessages({\n    star_alt: {\n      id: 'rating_comments.star_alt',\n      description: 'Alt text for star button, for screen reader.',\n      defaultMessage: 'Select to rate item {stars, plural, one {# star} other {# stars}}',\n    },\n  });\n\n  const handleClick = useCallback(() => {\n    onChange?.(num);\n  }, [onChange, num]);\n\n  const isHalfFilled = stars > (num - 1) && stars < num;\n  const icon = isHalfFilled ? 'star-half' : 'star';\n  const variant = num > stars || isHalfFilled ? 'light' : 'filled';\n\n  return (\n    <ConditionalWrapper\n        condition = {onChange != null}\n        render    = {childr => <Button variant='transparent' className='rating' onClick={handleClick}>{childr}</Button>}\n        key={num}>\n      <Icon key={num} icon={icon} variant={variant} size={onChange != null ? '2x' : '1x'} ariaLabel={onChange ? formatMessage(messages.star_alt, { stars: num }) : undefined} />\n    </ConditionalWrapper>\n  );\n};\n\nconst Ratings: React.FC<IRatingsProps> = ({ stars, onChange }: IRatingsProps) => {\n  const { formatMessage } = useIntl();\n  const messages = defineMessages({\n    stars_alt: {\n      id: 'rating_comments.stars_alt',\n      description: 'Alt text for read-only stars (view).',\n      defaultMessage: '{stars} out of 5 stars',\n    },\n  });\n\n  let starss = stars;\n  if (stars > 5) {\n    starss = 5;\n  } else if (stars < 0) {\n    starss = 0;\n  }\n\n  const starsList: Array<React.ReactNode> = Array.from({ length: 5 }, (_, i) => i + 1).map(num => (\n    <Star key={num} stars={starss} num={num} onChange={onChange} />\n  ));\n\n  return (\n    <div className='rating-stars'>\n      <span aria-hidden>{starsList}</span>\n      <span className='sr-only'>{formatMessage(messages.stars_alt, { stars: starss })}</span>\n    </div>\n  );\n};\n\nexport default Ratings;\n","import { useCallback, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router';\nimport { defineMessages, useIntl } from 'react-intl';\nimport classNames from 'classnames';\nimport { Col, Row } from 'react-bootstrap';\n\nimport { Rating } from '../store/types';\nimport Icon from '../../common/components/Icon';\nimport P from '../../common/components/P';\nimport Modal from '../../common/components/Modal';\nimport PageScroller from '../../common/components/PageScroller';\nimport Ratings from './Ratings';\nimport Button from '../../common/components/Button';\n\nexport interface IRatingCommentProps {\n  rating:     Rating;\n  onDelete?:  (ratingId: number) => void;\n}\n\ninterface IRatingTimestampProps {\n  rating: Rating;\n}\n\nconst RatingTimestamp: React.FC<IRatingTimestampProps> = ({ rating }: IRatingTimestampProps) => {\n  const { locale } = useIntl();\n  if (rating.updateDate && new Date(rating.updateDate).getTime() > 0) {\n    return <Link className='rating-timestamp' to={`#rating-${rating.id}`}>{new Date(rating.updateDate).toLocaleString(locale)}</Link>;\n  } else if (rating.pubDate && new Date(rating.pubDate).getTime() > 0) {\n    return <Link className='rating-timestamp' to={`#rating-${rating.id}`}>{new Date(rating.pubDate).toLocaleString(locale)}</Link>;\n  } else {\n    return null;\n  }\n};\n\ninterface IRatingCommentCommentProps {\n  rating: Rating;\n}\n\nconst RatingCommentComment: React.FC<IRatingCommentCommentProps> = ({ rating }: IRatingCommentCommentProps) => {\n  const markup: Array<React.ReactNode> = [];\n\n  const pList = rating.comment.split('\\n').filter(Boolean);\n  pList.forEach((p, index) => {\n    markup.push(\n      // eslint-disable-next-line react/no-array-index-key\n      <P key={`${index}-p`}>\n        {p}\n      </P>\n    );\n  });\n\n  return (\n    <>\n      {markup}\n    </>\n  );\n};\n\nconst messages = defineMessages({\n  delete_button: {\n    id: 'rating_comments.delete_button',\n    description: 'Label of the delete comment icon button',\n    defaultMessage: 'Delete comment',\n  },\n  confirm_delete_message: {\n    id: 'rating_comments.confirm_delete',\n    description: 'Are you sure you want to delete this comment?',\n    defaultMessage: 'Are you sure you want to delete this comment?',\n  },\n});\n\nconst RatingComment: React.FC<IRatingCommentProps> = ({\n    rating, onDelete }: IRatingCommentProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const { hash } = useLocation();\n  const hashId = (hash ?? '').replace('#', '');\n\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState<number | undefined>();\n  const handleDeleteClick  = useCallback((ratingId: number) => { setShowDeleteConfirm(ratingId); }, []);\n  const handleDeleteAccept = useCallback(() => { onDelete?.(showDeleteConfirm ?? 0); }, [showDeleteConfirm]);\n  const handleDeleteClose  = useCallback(() => { setShowDeleteConfirm(undefined); }, []);\n\n  const ratingContainerId = `rating-${rating.id}`;\n\n  return (\n    <div id={ratingContainerId} className={classNames('rating-comment', { 'perma-link-active': ratingContainerId === hashId })}>\n      <PageScroller uriFragmentId={ratingContainerId} />\n      <Row>\n        <Col xs>\n          <Ratings stars={rating.rating || 0} />\n          <div className='rating-username'>{rating.userName}</div>\n        </Col>\n        <Col xs='auto' className='d-flex' style={{ alignItems: 'start' }}>\n          <RatingTimestamp rating={rating} />\n          {onDelete && (\n            <Button id={`delete-${rating.id}`} variant='outline-danger' className='rating-delete-button' size='sm' tooltip={formatMessage(messages.delete_button)} onClick={() => handleDeleteClick(rating.id)}>\n              <Icon icon='trash' />\n            </Button>\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={12}>\n          <RatingCommentComment rating={rating} />\n        </Col>\n      </Row>\n\n      <Modal\n          show = {showDeleteConfirm != null}\n          title = {intl.messages['recipe.confirm_delete_title'] as string}\n          acceptTitle = {intl.messages['recipe.confirm_delete_accept'] as string}\n          onAccept = {handleDeleteAccept}\n          onClose  = {handleDeleteClose}\n          acceptButtonProps = {{ variant: 'danger' }}>\n        {formatMessage(messages.confirm_delete_message)}\n      </Modal>\n    </div>\n  );\n};\n\nexport default RatingComment;\n","import { useCallback } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Col, Row } from 'react-bootstrap';\n\nimport { Rating } from '../store/types';\nimport P from '../../common/components/P';\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport CircularProgress from '../../common/components/CircularProgress';\nimport RatingComment from './RatingComment';\n\nexport interface IRatingCommentsProps {\n  recipeSlug: string;\n  ratings:    Array<Rating> | undefined;\n  userId:     number | undefined;\n  pending:    PendingState;\n\n  removeRating: (recipe: string, rating: number) => void;\n}\n\nconst RatingComments: React.FC<IRatingCommentsProps> = ({ recipeSlug, ratings, userId, pending, removeRating }: IRatingCommentsProps) => {\n  const { formatMessage } = useIntl();\n  const messages = defineMessages({\n    no_comments: {\n      id: 'rating_comments.no_comments',\n      description: 'Placeholder for no comments',\n      defaultMessage: '(No comments yet. Be the first!)',\n    },\n  });\n\n  const handleDeleteAccept = useCallback((ratingId: number) => removeRating(recipeSlug, ratingId), [removeRating, recipeSlug]);\n\n  const ratingsList = ratings?.map(rating => (\n    <RatingComment\n        key = {rating.id}\n        rating = {rating}\n        onDelete = {rating.userId === userId ? handleDeleteAccept : undefined} />\n  )) ?? [];\n\n  return (\n    <>\n      {pending === PendingState.LOADING && <CircularProgress variant='three-bounce' />}\n      {ratingsList.length === 0 && (\n        <Row key='be-the-first'><Col><P className='placeholder'>{formatMessage(messages.no_comments)}</P></Col></Row>\n      )}\n      {ratingsList}\n    </>\n  );\n};\n\nexport default RatingComments;\n","import { useCallback, useState } from 'react';\nimport { Button, Col, Form, Row } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Field, Form as ReduxForm, FormSpy } from 'react-final-form';\n\nimport { RatingCreate } from '../store/types';\nimport InitialValuesResetter from '../../common/components/ReduxForm/ReInitialValuesResetter';\nimport ReInput from '../../common/components/ReduxForm/ReInput';\nimport { requiredValidator, ValidationResult } from '../../common/store/Validation';\nimport ReFormStatus from '../../common/components/ReduxForm/ReFormStatus';\nimport Ratings from './Ratings';\n\nexport interface INewRatingProps {\n  show: boolean;\n  recipeSlug: string;\n  userId: number;\n\n  addRating: (recipeSlug: string, rating: RatingCreate) => Promise<ValidationResult>;\n  onAddRatingSuccess: () => void;\n}\n\nexport interface IFormDataProps {\n  rating:  number;\n  comment: string;\n}\n\nconst NewRating: React.FC<INewRatingProps> = ({ show, recipeSlug, userId, addRating, onAddRatingSuccess }: INewRatingProps) => {\n  const { formatMessage } = useIntl();\n  const messages = defineMessages({\n    new_rating_title: {\n      id: 'newRating.create.title',\n      description: 'Fieldset legend for creating a new rating',\n      defaultMessage: 'Your new rating',\n    },\n    rating_placeholder: {\n      id: 'newRating.create.rating_placeholder',\n      description: 'Rating placeholder',\n      defaultMessage: 'Rate this recipe from 0 to 5',\n    },\n    rating_label: {\n      id: 'newRating.create.rating_label',\n      description: 'Rating label',\n      defaultMessage: 'Rating',\n    },\n    rating_comment_placeholder: {\n      id: 'newRating.create.rating_comment_placeholder',\n      description: 'Rating placeholder',\n      defaultMessage: 'Leave a comment!',\n    },\n    rating_comment_label: {\n      id: 'newRating.create.rating_comment_label',\n      description: 'Rating label',\n      defaultMessage: 'Comments',\n    },\n    submit: {\n      id: 'newRating.create.submit',\n      description: 'Submit recipe button',\n      defaultMessage: 'Comment',\n    },\n  });\n\n  const [initialValues] = useState<Partial<IFormDataProps>>({ rating: 0, comment: '' });\n\n  const handleSubmit = useCallback(async (form: IFormDataProps) => {\n    const newRating: RatingCreate = {\n      rating:     form.rating,\n      comment:    form.comment,\n      userId:     userId,\n    };\n    return addRating(recipeSlug, newRating);\n  }, [recipeSlug, userId, addRating]);\n\n  if (!show) return null;\n\n  return (\n    <ReduxForm\n        initialValues = {initialValues}\n        onSubmit = {handleSubmit}\n        subscription = {{}}\n        render = {({ form, handleSubmit: renderSubmit }) => (\n          <Form onSubmit={renderSubmit} className='new-rating'>\n            <ReFormStatus onSubmitSuccess={onAddRatingSuccess} />\n\n            <InitialValuesResetter form={form} initialValues={initialValues} />\n            <fieldset>\n              <legend className='new-rating-heading'>{formatMessage(messages.new_rating_title)}</legend>\n              <Row>\n                <Col className='form-group required'>\n                  <div className='form-label'>{formatMessage(messages.rating_label)}</div>\n                  <Field name='rating' validate={requiredValidator} validateFields={[]}>\n                    {fprops => (\n                      <Ratings\n                          stars = {fprops.input.value}\n                          onChange = {(value: number) => { fprops.input.onChange(value); }} />\n                    )}\n                  </Field>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <ReInput\n                      name   = 'comment'\n                      rows   = {4}\n                      label  = {formatMessage(messages.rating_comment_label)}\n                      placeholder = {formatMessage(messages.rating_comment_placeholder)}\n                      maxLength = {1000}\n                      required />\n                </Col>\n              </Row>\n              <Row>\n                <Col xs={12} className='toolbar'>\n                  <FormSpy subscription={{ values: true, submitting: true }}>\n                    {({ values, submitting }) => (\n                      <Button type='submit' variant='primary' disabled={!values.rating || !values.comment || submitting}>\n                        {formatMessage(messages.submit)}\n                      </Button>\n                    )}\n                  </FormSpy>\n                </Col>\n              </Row>\n            </fieldset>\n          </Form>\n        )} />\n  );\n};\n\nexport default NewRating;\n","import { Button, Card, Col, Row } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport HeaderLink from '../../common/components/HeaderLink';\nimport UserRole from '../../common/types/UserRole';\n\nexport interface IRatingsHeaderProps {\n  userRole:  UserRole | undefined;\n  showNewRating: boolean;\n  onShowNewRating: () => void;\n}\n\nconst RatingsHeader: React.FC<IRatingsHeaderProps> = ({ userRole, showNewRating, onShowNewRating }: IRatingsHeaderProps) => {\n  const { formatMessage } = useIntl();\n  const messages = defineMessages({\n    title: {\n      id: 'recipe.comments.title',\n      description: 'Comments heading',\n      defaultMessage: 'Comments',\n    },\n    new_rating_button: {\n      id: 'recipe.comments.new_rating',\n      description: 'Label for the new rating button',\n      defaultMessage: 'New rating',\n    },\n  });\n\n  return (\n    <Card.Header>\n      <Row>\n        <Col className='ratings-heading-col'>\n          <h2 id='ratings-heading'>\n            {formatMessage(messages.title)}\n            <HeaderLink linkFor='ratings-heading' />\n          </h2>\n        </Col>\n        {!showNewRating && userRole != null && [UserRole.USER, UserRole.STAFF, UserRole.ADMIN].includes(userRole) && (\n          <Col xs='auto'>\n            <Button variant='outline-primary' onClick={onShowNewRating}>{formatMessage(messages.new_rating_button)}</Button>\n          </Col>\n        )}\n      </Row>\n    </Card.Header>\n  );\n};\n\nexport default RatingsHeader;\n","import { useCallback, useState } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport '../css/recipe-rating-wrapper.css';\n\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport UserRole from '../../common/types/UserRole';\nimport { Rating, RatingCreate } from '../store/types';\nimport RatingComments from './RatingComments';\nimport NewRating from './NewRating';\nimport RatingsHeader from './RatingsHeader';\nimport { ValidationResult } from '../../common/store/Validation';\n\nexport interface IRatingsWrapperProps {\n  recipeSlug: string;\n  ratings:    Array<Rating> | undefined;\n  userId:     number | undefined;\n  userRole:   UserRole | undefined;\n  pending:    PendingState;\n\n  addRating: (recipeSlug: string, rating: RatingCreate) => Promise<ValidationResult>;\n  removeRating: (recipeSlug: string, ratingId: number) => void;\n}\n\nconst RatingsWrapper: React.FC<IRatingsWrapperProps> = ({ recipeSlug, ratings, userId, userRole, pending, addRating, removeRating }: IRatingsWrapperProps) => {\n  const [showNewRating, setShowNewRating] = useState<boolean>(false);\n\n  const handleAddRatingSuccess = useCallback(() => {\n    setShowNewRating(false);\n  }, []);\n\n  return (\n    <Card className='rating-panel' as='article'>\n      <RatingsHeader userRole={userRole} showNewRating={showNewRating} onShowNewRating={() => setShowNewRating(true)} />\n      <Card.Body>\n        {userId != null && userRole != null && [UserRole.USER, UserRole.STAFF, UserRole.ADMIN].includes(userRole) && (\n          <NewRating show={showNewRating} recipeSlug={recipeSlug} userId={userId} addRating={addRating} onAddRatingSuccess={handleAddRatingSuccess} />\n        )}\n        <RatingComments recipeSlug={recipeSlug} ratings={ratings} pending={pending} userId={userId} removeRating={removeRating} />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default RatingsWrapper;\n","import { RatingCreate, RatingDispatch, RatingsDispatch, RATINGS_STORE, RATING_STORE, toRating } from './types';\nimport { handleError, handleFormError, request } from '../../common/CustomSuperagent';\nimport { serverURLs } from '../../common/config';\nimport ReduxHelper, { ACTION } from '../../common/store/ReduxHelper';\nimport { AnyDispatch, toBasicAction } from '../../common/store/redux';\n\nexport const load = (recipeSlug: string) => (dispatch: RatingsDispatch) => {\n  dispatch({ ...toBasicAction(RATINGS_STORE, ACTION.GET_START) });\n  request()\n    .get(`${serverURLs.ratings}?recipe__slug=${recipeSlug}`)\n    .then(res => dispatch({\n      ...toBasicAction(\n        RATINGS_STORE,\n        ACTION.GET_SUCCESS\n      ),\n      id: recipeSlug,\n      payload: ReduxHelper.transformEntities(res.body.results, toRating),\n    }))\n    .catch(err => dispatch(handleError(err, RATINGS_STORE)));\n};\n\nexport const add = async (dispatch: AnyDispatch, recipeSlug: string, rating: RatingCreate) => {\n  dispatch({ ...toBasicAction(RATING_STORE, ACTION.CREATE_START) });\n  return request()\n    .post(serverURLs.ratings)\n    .send({\n      recipe:  recipeSlug,\n      rating:  rating.rating,\n      comment: rating.comment,\n      author:  rating.userId,\n    })\n    .then(res => {\n      dispatch({\n        ...toBasicAction(\n          RATING_STORE,\n          ACTION.CREATE_SUCCESS\n        ),\n        payload: {\n          recipe: recipeSlug,\n          rating:   toRating(res.body),\n        },\n      });\n      return null;\n    })\n    .catch(err => handleFormError(dispatch, err, RATINGS_STORE));\n};\n\nexport const remove = (recipeSlug: string, id: number) => (dispatch: RatingDispatch) => {\n  dispatch({ ...toBasicAction(RATING_STORE, ACTION.DELETE_START) });\n  request()\n    .delete(`${serverURLs.ratings}${id}/`)\n    .then(() => dispatch({\n      ...toBasicAction(\n        RATING_STORE,\n        ACTION.DELETE_SUCCESS\n      ),\n      payload: {\n        ratingId: id,\n        recipe:   recipeSlug,\n      },\n    }))\n    .catch(err => dispatch(handleError(err, RATINGS_STORE)));\n};\n","import { useCallback, useEffect } from 'react';\n\nimport RatingsWrapper from '../components/RatingsWrapper';\nimport * as RatingsActions from '../store/actions';\nimport { RatingCreate } from '../store/types';\nimport { RootState } from '../../app/Store';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport ErrorBoundary from '../../common/components/ErrorBoundary';\n\nconst Ratings: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const account = useSelector((state: RootState) => state.account.item);\n  const recipe  = useSelector((state: RootState) => state.recipe.item);\n  const ratingsState = useSelector((state: RootState) => state.ratings);\n\n  const recipeSlug = recipe?.slug;\n  const recipeRating = recipe?.rating;\n\n  const addRating = useCallback(async (recSlug: string, rating: RatingCreate) => RatingsActions.add(dispatch, recSlug, rating), [dispatch]);\n  const removeRatingCallback = useCallback((recSlug: string, ratingId: number) => dispatch(RatingsActions.remove(recSlug, ratingId)), [dispatch]);\n\n  useEffect(() => {\n    if (recipeSlug == null || recipeRating == null || recipeRating === 0) return;\n    dispatch(RatingsActions.load(recipeSlug));\n  }, [recipeSlug, recipeRating]);\n\n  if (recipeSlug == null) return null;\n  const ratings = recipeSlug != null && ratingsState.items != null ? ratingsState.items[recipeSlug] : undefined;\n\n  return (\n    <ErrorBoundary verbose printStack>\n      <RatingsWrapper\n          recipeSlug = {recipeSlug}\n          userId     = {account?.id}\n          userRole   = {account?.role}\n          ratings    = {ratings}\n          pending    = {ratingsState.meta.pending}\n\n          addRating  = {addRating}\n          removeRating = {removeRatingCallback} />\n    </ErrorBoundary>\n  );\n};\n\nexport default Ratings;\n","import { useIntl } from 'react-intl';\n\nimport { RootState } from '../../app/Store';\nimport { useSelector } from '../../common/store/redux';\nimport { Recipe } from '../store/RecipeTypes';\nimport MiniBrowse from '../../browse/containers/MiniBrowse';\nimport ErrorBoundary from '../../common/components/ErrorBoundary';\n\nexport interface IRecipeFooterProps {\n  recipe?: Recipe;\n}\n\nfunction getFilters(recipe: Recipe): Record<string, string> | undefined {\n  const res: Record<string, string> = {};\n  if (recipe.course) {\n    res.course__slug = recipe.course.title;\n  }\n  if (recipe.cuisine) {\n    res.cuisine__slug = recipe.cuisine.title;\n  }\n  return Object.keys(res).length > 0 ? res : undefined;\n}\n\nconst RecipeFooter: React.FC<IRecipeFooterProps> = ({ recipe }: IRecipeFooterProps) => {\n  const intl = useIntl();\n\n  const miniBrowseMeta = useSelector((state: RootState) => state.browse.browserMini.meta);\n\n  if (!miniBrowseMeta.hasConnection || miniBrowseMeta.error\n      || !recipe?.author) return null;\n\n  return (\n    <ErrorBoundary verbose printStack>\n      <hr />\n      <article className='recipe-footer'>\n        <MiniBrowse\n            heading = {intl.messages['nav.home.recommended_recipes_title'] as string}\n            count = {4}\n            filters = {getFilters(recipe)} />\n      </article>\n    </ErrorBoundary>\n  );\n};\n\nexport default RecipeFooter;\n","import { useCallback, useMemo } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Button, Form } from 'react-bootstrap';\nimport { Form as ReduxForm } from 'react-final-form';\n\nimport { Recipe } from '../store/RecipeTypes';\nimport { PendingState, ReducerMeta } from '../../common/store/GenericReducerType';\nimport Icon from '../../common/components/Icon';\nimport InitialValuesResetter from '../../common/components/ReduxForm/ReInitialValuesResetter';\nimport ReInput from '../../common/components/ReduxForm/ReInput';\nimport HeaderLink from '../../common/components/HeaderLink';\nimport { ValidationResult } from '../../common/store/Validation';\n\nexport interface IIngredientsHeaderProps {\n  recipe:      Recipe | undefined;\n  recipeMeta:  ReducerMeta;\n\n  updateServings: (servings: number) => Promise<ValidationResult>;\n}\n\nconst messages = defineMessages({\n  ingredients: {\n    id: 'recipe.ingredients',\n    description: 'Ingredients',\n    defaultMessage: 'Ingredients',\n  },\n  ingredients_for_servings: {\n    id: 'recipe.ingredients_for_servings',\n    description: 'Ingredients for[ n servings]',\n    defaultMessage: 'Ingredients for',\n  },\n  servings: {\n    id: 'recipe.servings',\n    description: 'Servings',\n    defaultMessage: 'Servings',\n  },\n  servings_input_tooltip: {\n    id: 'recipe.servings_input_tooltip',\n    description: 'Accessible tooltip for the (change) servings input',\n    defaultMessage: 'Amount of servings',\n  },\n  servings_update_button: {\n    id: 'recipe.servings_update_button',\n    description: 'Label for the button to change the servings',\n    defaultMessage: 'Update servings',\n  },\n});\n\nexport interface IFormDataProps {\n  servings: number;\n}\n\nconst IngredientsHeader: React.FC<IIngredientsHeaderProps> = ({\n    recipe, recipeMeta, updateServings }: IIngredientsHeaderProps) => {\n  const { formatMessage } = useIntl();\n\n  const customServings = recipe?.customServings;\n\n  const handleSubmit = useCallback(async (form: IFormDataProps) => updateServings(form.servings), [updateServings]);\n\n  const initialValues: Partial<IFormDataProps> = useMemo(() => ({\n    servings: customServings,\n  }), [customServings]);\n\n  const pending  = recipeMeta.pending;\n  const servings = recipe?.customServings ?? 0;\n  const hasNoIngredients = pending === PendingState.COMPLETED\n      && recipe?.subrecipes != null && recipe.subrecipes.length === 0\n      && recipe?.ingredientGroups != null && recipe.ingredientGroups.length === 0;\n\n  return (\n    <>\n      {(hasNoIngredients || servings === 0) && (\n        <h2 id='ingredients-heading'>\n          {formatMessage(messages.ingredients)}\n          <HeaderLink linkFor='ingredients-heading' />\n        </h2>\n      )}\n      {!hasNoIngredients && servings > 0 && (\n        <div className='ingredients-for-servings-row'>\n          <h2 id='ingredients-heading'>\n            {formatMessage(messages.ingredients_for_servings)}\n            <HeaderLink linkFor='ingredients-heading' />\n            <span className='print-only'>{`: ${recipe?.customServings ?? ''} ${formatMessage(messages.servings)}`}</span>\n          </h2>\n          <div className='custom-servings print-hidden'>\n            <ReduxForm\n                initialValues = {initialValues}\n                onSubmit = {handleSubmit}\n                subscription = {{}}\n                render = {({ form, handleSubmit: renderSubmit }) => (\n                  <Form onSubmit={renderSubmit} className='custom-servings'>\n                    <InitialValuesResetter form={form} initialValues={initialValues} />\n                    <ReInput\n                        name  = 'servings'\n                        type  = 'number'\n                        aria-label = {formatMessage(messages.servings_input_tooltip)}\n                        min   = {0}\n                        max   = {1000}\n                        autoComplete = 'off' />\n                    <Button type='submit' variant='primary' aria-label={formatMessage(messages.servings_update_button)}>\n                      <Icon icon='arrow-repeat' variant='light' />\n                      {formatMessage(messages.servings)}\n                    </Button>\n                  </Form>\n                )} />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default IngredientsHeader;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { forwardRef } from 'react';\nimport { Field } from 'react-final-form';\nimport { useIntl } from 'react-intl';\n\nimport { formatValidation, requiredValidator } from '../../store/Validation';\nimport { ISelectProps, Select } from '../Input/Select';\n\nexport interface IReSelectProps extends ISelectProps {\n  format?: (value: any, name: string) => string;\n  parse?:  (value: any, name: string) => any;\n}\n\nconst ReSelect = forwardRef<Select, IReSelectProps>(({\n    name, required, data, format, parse,\n    onChange, onFocus, onBlur, ...rest }: IReSelectProps, ref) => {\n  const intl = useIntl();\n\n  return (\n    <Field name={name} validate={required ? requiredValidator : undefined} validateFields={[]} format={format} parse={parse}>\n      {fprops => (\n        <Select\n            {...rest}\n            required = {required}\n\n            name     = {fprops.input.name}\n            value    = {fprops.input.value}\n            data     = {data}\n            errors   = {formatValidation(intl, fprops.meta.error || (!fprops.meta.dirtySinceLastSubmit ? fprops.meta.submitError : undefined))}\n            meta     = {fprops.meta}\n            onChange = {(namee: string, value: string | undefined) => { fprops.input.onChange(value); onChange?.(namee, value); }}\n            onFocus  = {(event: React.FocusEvent<HTMLElement, Element>) => { fprops.input.onFocus(event); onFocus?.(event); }}\n            onBlur   = {(event: React.FocusEvent<HTMLElement, Element>) => { fprops.input.onBlur(event);  onBlur?.(event); }}\n            ref = {ref} />\n      )}\n    </Field>\n  );\n});\n\nexport default ReSelect;\n","import { forwardRef, RefObject, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Col, Form, Row } from 'react-bootstrap';\nimport { Form as ReduxForm } from 'react-final-form';\nimport { FormApi } from 'final-form';\n\nimport '../css/add_to_grocery_list_modal.css';\n\nimport { RootState } from '../../app/Store';\nimport Modal from '../../common/components/Modal';\nimport { ValidationResult } from '../../common/store/Validation';\nimport { Ingredient, IngredientGroup, SubRecipe } from '../store/RecipeTypes';\nimport ReFormStatus from '../../common/components/ReduxForm/ReFormStatus';\nimport InitialValuesResetter from '../../common/components/ReduxForm/ReInitialValuesResetter';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport Checkbox from '../../common/components/Input/Checkbox';\nimport useCrash from '../../common/hooks/useCrash';\nimport Icon from '../../common/components/Icon';\nimport Button from '../../common/components/Button';\nimport P from '../../common/components/P';\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport { GroceryList, GroceryListBulkAdd, GroceryListCreate } from '../../groceryList/store/GroceryListTypes';\nimport * as GroceryListsActions from '../../groceryList/store/GroceryListsActions';\nimport * as GroceryListActions from '../../groceryList/store/GroceryListActions';\nimport ReSelect from '../../common/components/ReduxForm/ReSelect';\nimport MeasurementContext from '../../common/context/MeasurementContext';\nimport IngredientGroups from './IngredientGroups';\nimport SubRecipes from './SubRecipes';\nimport { formatMeasurement } from './Ingredients';\n\nexport interface IAddToGroceryListModalProps {\n  show: boolean;\n  subrecipes: Array<SubRecipe> | undefined;\n  ingredients: Array<IngredientGroup> | undefined;\n  onSaveSuccess: () => void;\n  onClose: () => void;\n}\n\ninterface AddToGroceryListData {\n  list: number;\n  ingredients: Array<{ slug: string, title: string, ingredients: Array<number> }>;\n  subrecipes: Array<number>;\n}\n\nconst AddToGroceryListModal: React.FC<IAddToGroceryListModalProps> = ({\n    show, subrecipes, ingredients, onSaveSuccess, onClose }: IAddToGroceryListModalProps) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  const measurementContext = useContext(MeasurementContext);\n  const formatMeasurementCb = useCallback((measurement: string | undefined, quantity: string | undefined) => formatMeasurement(intl, measurementContext, measurement, quantity), [measurementContext, intl]);\n\n  const bulkAdd = useCallback(async (list: number, data: GroceryListBulkAdd) => GroceryListActions.bulkAdd(dispatch, list, data, formatMeasurementCb), [dispatch]);\n  const createList = useCallback(async (item: GroceryListCreate) => GroceryListActions.create(dispatch, item), [dispatch]);\n\n  const groceryListsState = useSelector((state: RootState) => state.groceryLists);\n  const { items: lists } = groceryListsState;\n  useEffect(() => {\n    dispatch(GroceryListsActions.load());\n  }, []);\n\n  const bulkAddPending = useSelector((state: RootState) => state.groceryList.meta.pending);\n\n  const submitRef = useRef<HTMLButtonElement>(null);\n\n  const handleEditSubmit = useCallback(() => {\n    submitRef.current?.click();\n  }, [submitRef.current]);\n  const handleSubmit = useCallback(async (form: AddToGroceryListData) => {\n    const allIngredients = ingredients?.flatMap(ig => ig.ingredients) ?? [];\n    const allSubrecipes  = subrecipes != null ? [...subrecipes] : [];\n\n    const addIngredientGroups: Array<IngredientGroup> = [];\n    form.ingredients.forEach(ig => {\n      const addIngredients: Array<Ingredient> = ig.ingredients.map(i => allIngredients.find(ii => ii.id === i)).filter(Boolean) as Array<Ingredient>;\n      if (ig.ingredients.length > 0) {\n        addIngredientGroups.push({ slug: ig.slug, title: ig.title, ingredients: addIngredients });\n      }\n    });\n\n    const addSubrecipes: Array<SubRecipe> = allSubrecipes.filter(s => form.subrecipes.includes(s.child_recipe_id));\n\n    const bulkAddData: GroceryListBulkAdd = {\n      ingredientGroups: addIngredientGroups,\n      subrecipes: addSubrecipes,\n    };\n\n    return bulkAdd(form.list, bulkAddData);\n  }, [ingredients, subrecipes, bulkAdd]);\n  const handleSubmitSuccess = useCallback(() => {\n    onSaveSuccess();\n    onClose();\n  }, [onSaveSuccess, onClose]);\n  const handleModalClose = useCallback((autoClose: boolean) => {\n    if (!autoClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  if (!show || lists == null || subrecipes == null || ingredients == null) return null;\n\n  return (\n    <Modal\n        show = {show}\n        title = {intl.messages['recipe.recipe_ingredient_button.add_groceries'] as string}\n        onAccept = {handleEditSubmit}\n        acceptButtonProps = {{ disabled: lists.length === 0 || bulkAddPending === PendingState.SAVING }}\n        onClose  = {handleModalClose}\n        className = 'add-to-grocery-list-modal'>\n      <AddToGroceryListForm\n          lists = {lists}\n          subrecipes = {subrecipes}\n          ingredients = {ingredients}\n          onSubmit = {handleSubmit}\n          onSubmitSuccess = {handleSubmitSuccess}\n          onAddList = {createList}\n          submitRef = {submitRef} />\n    </Modal>\n  );\n};\n\ninterface IAddToGroceryListProps {\n  lists:       Array<GroceryList>;\n  subrecipes:  Array<SubRecipe>;\n  ingredients: Array<IngredientGroup>;\n  onSubmit: (upd: AddToGroceryListData) => Promise<ValidationResult>;\n  onSubmitSuccess: () => void;\n  onAddList: (item: GroceryListCreate) => Promise<ValidationResult>;\n  submitRef: RefObject<HTMLButtonElement>;\n}\n\ninterface IAddToGroceryListFormDataProps {\n  list: string;\n  subrecipes:  Record<string, boolean>;\n  ingredients: Record<string, Record<string, boolean>>;\n}\n\nfunction initializeCheckboxes(cbs: Array<string>): Record<string, boolean> {\n  const res: Record<string, boolean> = {};\n  cbs.forEach(cb => {\n    res[cb] = true;\n  });\n  return res;\n}\n\nfunction initializeInredientGroupsCheckboxes(igs: Array<IngredientGroup>): Record<string, Record<string, boolean>> {\n  const res: Record<string, Record<string, boolean>> = {};\n  igs.forEach(ig => {\n    res[ig.slug] = { ...initializeCheckboxes(ig.ingredients.flatMap(i => `cb-${i.id}`)) };\n  });\n  return res;\n}\n\nfunction uniquify<T>(arr: Array<T>): Array<T> {\n  return Array.from(new Set(arr));\n}\n\nconst AddToGroceryListForm = forwardRef<HTMLFormElement, IAddToGroceryListProps>(({\n    lists, subrecipes, ingredients, onSubmit, onSubmitSuccess, onAddList, submitRef }: IAddToGroceryListProps, ref) => {\n  const crash = useCrash();\n\n  const [initialValues] = useState<Partial<IAddToGroceryListFormDataProps>>({\n    list: lists.length > 0 ? lists[lists.length - 1].id.toString() : undefined,\n    ingredients: initializeInredientGroupsCheckboxes(ingredients),\n    subrecipes: {\n      ...initializeCheckboxes(subrecipes.flatMap(sr => `cb-${sr.child_recipe_id}`)),\n    },\n  });\n  // console.log(`initialValues=${JSON.stringify(initialValues, undefined, 2)}`);\n\n  const handleSubmit = useCallback(async (form: IAddToGroceryListFormDataProps): Promise<ValidationResult> => {\n    /*\n      form is something like:\n\n      list: 2,\n      ingredients: {\n        default: {\n          cb-123: true,\n          cb-124: true,\n        },\n        dough: {\n          cb-223: true,\n          cb-625: true,\n        },\n      subrecipe-cb-451: true,\n    */\n\n    const addSubrecipes: Array<number> = [];\n    Object.keys(form.subrecipes).forEach(s => {\n      if (form.subrecipes[s]) {\n        addSubrecipes.push(parseInt(s.substring(s.indexOf('-') + 1)));\n      }\n    });\n    const addIngredientGroups: Array<{ slug: string, title: string, ingredients: Array<number> }> = [];\n    Object.keys(form.ingredients ?? {}).forEach(igSlug => {\n      const addIgIngredients: Set<number> = new Set();\n      const ig = ingredients.find(igg => igg.slug === igSlug);\n      if (!ig) { crash(`Invalid state: There is not IngredientGroup for slug \"${igSlug}\"`); return; }\n      const igIngredients = form.ingredients[igSlug];\n      Object.keys(igIngredients).forEach(i => {\n        if (igIngredients[i]) {\n          addIgIngredients.add(parseInt(i.substring(i.indexOf('-') + 1)));\n        }\n      });\n      if (Object.keys(igIngredients).length > 0) {\n        addIngredientGroups.push({ slug: ig.slug, title: ig.title, ingredients: Array.from(addIgIngredients) });\n      }\n    });\n\n    const upd: AddToGroceryListData = {\n      list:        parseInt(form.list),\n      ingredients: addIngredientGroups,\n      subrecipes:  uniquify(addSubrecipes),\n    };\n    return onSubmit(upd);\n  }, [ingredients, onSubmit]);\n\n  return (\n    <ReduxForm\n        initialValues = {initialValues}\n        onSubmit = {handleSubmit}\n        subscription = {{}}\n        render = {({ form, handleSubmit: renderSubmit }) => (\n          <Form onSubmit={renderSubmit} ref={ref}>\n            <ReFormStatus onSubmitSuccess={onSubmitSuccess} />\n            <InitialValuesResetter form={form} initialValues={initialValues} />\n\n            <ListRow\n                lists = {lists}\n                form = {form}\n                onAddList = {onAddList} />\n\n            {lists.length > 0 && (\n              <>\n                <Row className='additional-checkbox-row'>\n                  <Col>\n                    <ToggleAllCheckbox\n                        name = 'toggle-all'\n                        form = {form}\n                        />\n                  </Col>\n                </Row>\n\n                <Row className='ingredients-and-subrecipes'>\n                  <Col>\n                    <SubRecipes\n                        subRecipes = {subrecipes}\n                        selectable\n                        />\n                    <IngredientGroups\n                        groups = {ingredients}\n                        hasSubrecipes = {subrecipes != null && subrecipes.length > 0}\n                        selectable\n                        />\n                  </Col>\n                </Row>\n              </>\n            )}\n            <button type='submit' ref={submitRef} className='visibility-hidden'>Submit</button>\n          </Form>\n        )} />\n  );\n});\n\nconst messages = defineMessages({\n  list: {\n    id: 'grocery_list.form.list',\n    defaultMessage: 'List',\n  },\n  new_text: {\n    id: 'grocery_list.item.new_text',\n    defaultMessage: 'Create a new grocery list to get started.',\n  },\n  new_list_title: {\n    id: 'grocery_list.item.new_title',\n    defaultMessage: 'My grocery list',\n  },\n});\n\ninterface IListRowProps {\n  lists: Array<GroceryList>;\n  form: FormApi<IAddToGroceryListFormDataProps, Partial<IAddToGroceryListFormDataProps>>;\n  onAddList: (item: GroceryListCreate) => Promise<ValidationResult>;\n}\n\nconst ListRow: React.FC<IListRowProps> = ({\n    lists, form, onAddList }: IListRowProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const [addedNewList, setAddedNewList] = useState<boolean>(false);\n  const prevListIds = useRef<Array<number> | undefined>();\n\n  const handleAddListClick = useCallback(() => {\n    const newListTitle = `${formatMessage(messages.new_list_title)}`;\n    const suffixes = lists\n        .filter(l => l.title.startsWith(newListTitle))\n        .map(l => parseInt(l.title.substring(newListTitle.length)))\n        .filter(i => !Number.isNaN(i) || i < 0)\n        .sort((a, b) => a - b);\n    const suffix = suffixes.length > 0 ? (suffixes[suffixes.length - 1] + 1) : 1;\n\n    prevListIds.current = lists.map(l => l.id);\n    onAddList({ title: `${newListTitle} ${suffix}` })\n        .then(() => {\n          setAddedNewList(true);\n        });\n  }, [lists, onAddList, formatMessage]);\n\n  useEffect(() => {\n    if (prevListIds.current == null) return;\n    const newIds = lists.map(l => l.id);\n\n    const newList = newIds.find(i => !prevListIds.current?.includes(i));\n    if (!newList) return;\n    form.change('list', newList.toString());\n\n    prevListIds.current = [];\n  }, [lists]);\n\n  return (\n    <Row>\n      <Col className='input-with-button'>\n        {lists.length === 0 && (\n          <>\n            <P>{formatMessage(messages.new_text)}</P>\n            <Button id='add-list-button' type='button' onClick={handleAddListClick} variant='primary' className='add-list-button'>\n              {intl.messages['nav.grocery_list_create'] as string}\n            </Button>\n          </>\n        )}\n        {lists.length > 0 && (\n          <>\n            <ReSelect\n                name   = 'list'\n                label  = {formatMessage(messages.list)}\n                data   = {lists.map(l => ({ value: l.id.toString(), label: l.title }))}\n                readOnly = {lists.length === 0}\n                disabled = {lists.length === 0} />\n            {!addedNewList && (\n              <Button id='add-list-button' type='button' onClick={handleAddListClick} variant='transparent' className='add-list-button' tooltip={intl.messages['nav.grocery_list_create'] as string}>\n                <Icon icon='plus-lg' variant='light' size='2x' />\n              </Button>\n            )}\n          </>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\ninterface IToggleAllCheckboxProps {\n  name: string;\n  form: FormApi<IAddToGroceryListFormDataProps, Partial<IAddToGroceryListFormDataProps>>;\n}\n\nconst ToggleAllCheckbox: React.FC<IToggleAllCheckboxProps> = ({\n    name, form }: IToggleAllCheckboxProps) => {\n  const intl = useIntl();\n  const [value, setValue] = useState<boolean>(true);\n\n  const handleChange = useCallback((_name: string, newValue: boolean) => {\n    setValue(newValue);\n\n    const registeredFields = form.getRegisteredFields();\n\n    const ingredientGroupsCbs = registeredFields.filter(f => f.startsWith('ingredients.') && f.includes('cb-'));\n    const subrecipesCbs = registeredFields.filter(f => f.startsWith('subrecipes.') && f.includes('cb-'));\n\n    const allCbs = [...ingredientGroupsCbs, ...subrecipesCbs];\n    allCbs.forEach(cbKey => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      form.change(cbKey as any, newValue);\n    });\n  }, [form]);\n\n  return (\n    <Checkbox\n        name   = {name}\n        label  = {intl.messages['grocery_list.items.toggle_all'] as string}\n        value  = {value}\n        onChange = {handleChange} />\n  );\n};\n\nexport default AddToGroceryListModal;\n","import { useCallback, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\n\nimport '../css/ingredients_footer.css';\n\nimport { getRoutePath, isDemoMode } from '../../common/utility';\nimport Icon from '../../common/components/Icon';\nimport ConditionalWrapper from '../../common/components/ConditionalWrapper';\nimport { IngredientGroup, SubRecipe } from '../store/RecipeTypes';\nimport AddToGroceryListModal from './AddToGroceryListModal';\nimport Toast from '../../common/components/Toast';\n\nconst messages = defineMessages({\n  add_groceries: {\n    id: 'recipe.recipe_ingredient_button.add_groceries',\n    description: 'Add groceries to list',\n    defaultMessage: 'Add to grocery list',\n  },\n  add_groceries_success_toast: {\n    id: 'recipe.recipe_ingredient_button.success_toast',\n    description: 'Add groceries to list success toast',\n    defaultMessage: 'Groceries added to the list.',\n  },\n});\n\nexport interface IIngredientsFooterProps {\n  subrecipes: Array<SubRecipe> | undefined;\n  ingredients: Array<IngredientGroup> | undefined;\n  isAuthenticated: boolean;\n}\n\nconst IngredientsFooter: React.FC<IIngredientsFooterProps> = ({\n    isAuthenticated, subrecipes, ingredients }: IIngredientsFooterProps) => {\n  const { formatMessage } = useIntl();\n\n  const [showGroceriesModal, setShowGroceriesModal] = useState<boolean>(false);\n  const handleAddGroceries = useCallback(() => {\n    setShowGroceriesModal(true);\n  }, []);\n  const handleGroceriesModalClose = useCallback(() => {\n    setShowGroceriesModal(false);\n  }, []);\n\n  const [showGroceriesSuccessToast, setShowGroceriesSuccessToast] = useState<boolean>(false);\n  const handleAddToGroceryListSuccess = useCallback(() => {\n    setShowGroceriesSuccessToast(true);\n  }, []);\n  const handleCloseAddGroceryListToast = useCallback(() => {\n    setShowGroceriesSuccessToast(false);\n  }, []);\n\n  return (\n    <div className='ingredients-footer print-hidden'>\n      <ConditionalWrapper\n          condition = {!isAuthenticated}\n          render = {childr => <Link to={getRoutePath('/login')}>{childr}</Link>}>\n        <Button onClick={handleAddGroceries} variant='primary' disabled={isDemoMode()}>\n          <Icon icon='clipboard2-check' />\n          {formatMessage(messages.add_groceries)}\n        </Button>\n      </ConditionalWrapper>\n\n      <AddToGroceryListModal\n          show = {showGroceriesModal}\n          subrecipes = {subrecipes}\n          ingredients = {ingredients}\n          onClose = {handleGroceriesModalClose}\n          onSaveSuccess = {handleAddToGroceryListSuccess}\n          />\n\n      <Toast\n          show = {showGroceriesSuccessToast}\n          variant = 'success'\n          anchorOrigin = {{ horizontal: 'center', vertical: 'bottom' }}\n          onClose = {handleCloseAddGroceryListToast}>\n        {formatMessage(messages.add_groceries_success_toast)}\n      </Toast>\n    </div>\n  );\n};\n\nexport default IngredientsFooter;\n","import { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/ingredients_panel.css';\n\nimport { Recipe } from '../store/RecipeTypes';\nimport { PendingState, ReducerMeta } from '../../common/store/GenericReducerType';\nimport P from '../../common/components/P';\nimport Loading from '../../common/components/Loading';\nimport { ValidationResult } from '../../common/store/Validation';\nimport SubRecipes from './SubRecipes';\nimport IngredientGroups from './IngredientGroups';\nimport IngredientsHeader from './IngredientsHeader';\nimport IngredientFooter from './IngredientsFooter';\n\nconst messages = defineMessages({\n  no_ingredients: {\n    id: 'recipe.recipe_ingredient_button.no_ingredients',\n    description: 'No ingredients provided message',\n    defaultMessage: '(This recipe has no ingredients.)',\n  },\n});\n\nexport interface IIngredientsPanelProps {\n  recipe:      Recipe | undefined;\n  recipeMeta:  ReducerMeta;\n  userId:      number | undefined;\n\n  updateServings: (servings: number) => Promise<ValidationResult>;\n}\n\nconst IngredientsPanel: React.FC<IIngredientsPanelProps> = ({ recipe, recipeMeta, userId, updateServings }: IIngredientsPanelProps) => {\n  const { formatMessage } = useIntl();\n\n  const pending = recipeMeta.pending;\n  const hasNoIngredients = pending === PendingState.COMPLETED\n      && recipe?.subrecipes != null && recipe.subrecipes.length === 0\n      && recipe?.ingredientGroups != null && recipe.ingredientGroups.length === 0;\n\n  return (\n    <article className='ingredients-panel'>\n      <IngredientsHeader recipe={recipe} recipeMeta={recipeMeta} updateServings={updateServings} />\n      {pending === PendingState.LOADING && recipe?.ingredientGroups == null && <Loading />}\n      {hasNoIngredients && (\n        <P className='placeholder'>{formatMessage(messages.no_ingredients)}</P>\n      )}\n      {!hasNoIngredients && (\n        <>\n          <div className='ingredient-groups'>\n            <SubRecipes\n                withHeaderLink\n                subRecipes = {recipe?.subrecipes}\n                />\n            <IngredientGroups\n                withHeaderLink\n                groups  = {recipe?.ingredientGroups}\n                hasSubrecipes = {recipe?.subrecipes != null && recipe?.subrecipes.length > 0}\n                />\n          </div>\n          <IngredientFooter\n              subrecipes = {recipe?.subrecipes}\n              ingredients = {recipe?.ingredientGroups}\n              isAuthenticated = {userId != null} />\n        </>\n      )}\n    </article>\n  );\n};\n\nexport default IngredientsPanel;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport '../css/ingredients_panel.css';\n\nimport { useDispatch } from '../../common/store/redux';\nimport { Recipe } from '../store/RecipeTypes';\nimport { updateServings } from '../store/RecipeActions';\nimport { ReducerMeta } from '../../common/store/GenericReducerType';\nimport IngredientsPanel from '../components/IngredientsPanel';\n\nexport interface IIngredientsPanelContainerProps {\n  recipe:      Recipe | undefined;\n  recipeMeta:  ReducerMeta;\n  userId:      number | undefined;\n}\n\nconst IngredientsPanelContainer: React.FC<IIngredientsPanelContainerProps> = ({ recipe, recipeMeta, userId }: IIngredientsPanelContainerProps) => {\n  const dispatch = useDispatch();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const recipeSlug = recipe?.slug ?? '';\n\n  const handleUpdateServings = useCallback((servings: number) => {\n    setSearchParams({ ...searchParams, servings: String(servings) });\n    return dispatch(updateServings(recipeSlug, servings));\n  }, [searchParams, recipeSlug, dispatch]);\n\n  const locationServings = useMemo(() => {\n    const serv = searchParams.get('servings');\n    if (!serv) return undefined;\n    const servNumber = Number.parseFloat(serv);\n    if (Number.isNaN(servNumber)) return undefined;\n    return servNumber;\n  }, [searchParams]);\n\n  const customServings = recipe?.customServings;\n\n  useEffect(() => {\n    if (locationServings && locationServings !== customServings) {\n      handleUpdateServings(locationServings);\n    }\n  }, [handleUpdateServings, locationServings, customServings]);\n\n  return (\n    <IngredientsPanel\n        recipe     = {recipe}\n        recipeMeta = {recipeMeta}\n        userId     = {userId}\n        updateServings = {handleUpdateServings}\n        />\n  );\n};\n\nexport default IngredientsPanelContainer;\n","import { Children, forwardRef, isValidElement, useCallback, useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport '../css/image_viewer.css';\n\nimport { CommonProps } from '../types/OverridableComponent';\nimport { ModalHeaderCloseButton } from './Modal';\nimport { IImageProps } from './Image';\nimport Icon from './Icon';\nimport ErrorBoundary from './ErrorBoundary';\n\nexport interface IImageViewerProps extends CommonProps {\n  children: React.ReactElement<IImageProps>; // | Array<React.ReactElement<IImageProps>>;\n}\n\nconst ImageViewer = forwardRef<HTMLButtonElement, IImageViewerProps>(({\n    className, children, ...rest }: IImageViewerProps, ref) => {\n  const [openModal, setOpenModal] = useState<boolean>(false);\n\n  const handleOpenModal  = useCallback(() => { setOpenModal(true); }, []);\n  const handleCloseModal = useCallback(() => { setOpenModal(false); }, []);\n\n  return (\n    <ErrorBoundary verbose={false} printStack={false}>\n      <Button\n          type = 'button'\n          className = {classNames('image-viewer', className)}\n          onClick = {handleOpenModal}\n          {...rest}\n          ref = {ref}\n          >\n        {children}\n      </Button>\n\n      <Modal\n          show = {openModal}\n          fullscreen\n          onHide = {handleCloseModal}\n          className = 'image-viewer-dialog'\n          >\n        <ErrorBoundary verbose printStack>\n          <ImageViewerContent\n              onClose = {handleCloseModal}>\n            {children}\n          </ImageViewerContent>\n        </ErrorBoundary>\n      </Modal>\n    </ErrorBoundary>\n  );\n});\n\ninterface IImageViewerContentProps extends CommonProps {\n  onClose: () => void;\n\n  children: React.ReactElement<IImageProps>; // | Array<React.ReactElement<IImageProps>>;\n}\n\nconst ImageViewerContent = forwardRef<HTMLDivElement, IImageViewerContentProps>(({\n    onClose, children, ...rest }: IImageViewerContentProps, ref) => {\n  // This is a good spot to generate some kind of list, if more than 1 image is provided.\n  let nextSrc = '';\n  Children.forEach(children, element => {\n    if (!isValidElement(element)) return;\n\n    const { src } = element.props;\n    nextSrc = src;\n  });\n  const nextTitle = nextSrc.includes('/') ? nextSrc.substring(nextSrc.lastIndexOf('/') + 1) : nextSrc;\n\n  return (\n    <>\n      <Modal.Header {...rest} ref={ref}>\n        <Modal.Title>{nextTitle}</Modal.Title>\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a title={nextTitle} download={nextTitle} href={nextSrc} className='btn btn-transparent close-button download-button'>\n          <Icon icon='download' variant='light' size='2x' />\n        </a>\n        <ModalHeaderCloseButton onClose={onClose} />\n      </Modal.Header>\n      <Modal.Body>\n        {children}\n      </Modal.Body>\n    </>\n  );\n});\n\nexport default ImageViewer;\n","import { createContext } from 'react';\n\nexport interface ICookingModeContext {\n  cookingMode: boolean;\n  setCookingMode: (active: boolean) => void;\n}\n\nconst CookingModeContext = createContext<ICookingModeContext | null>(null);\n\nexport default CookingModeContext;\n","// Coded by Joris (https://github.com/jorisre/react-screen-wake-lock)\n\nimport { useCallback, useRef, useState } from 'react';\n\nexport interface IWakeLockOptions {\n  onError?: (error: Error) => void;\n  onRequest?: () => void;\n  onRelease?: EventListener;\n}\n\ntype WakeLockType = 'screen';\n\nexport const useWakeLock = ({\n  onError,\n  onRequest,\n  onRelease,\n}: IWakeLockOptions | undefined = {}) => {\n  const [released, setReleased] = useState<boolean | undefined>();\n  const wakeLock = useRef<WakeLockSentinel | null>(null);\n\n  // https://caniuse.com/mdn-api_wakelock\n  const isSupported = typeof window !== 'undefined' && 'wakeLock' in navigator;\n\n  const request = useCallback(\n    async (type: WakeLockType = 'screen') => {\n      const isWakeLockAlreadyDefined = wakeLock.current != null;\n      if (!isSupported) {\n        // eslint-disable-next-line no-console\n        console.warn('Calling the \"request\" function has no effect, Wake Lock Screen API isn\\'t supported.');\n        return;\n      }\n      if (isWakeLockAlreadyDefined) {\n        // eslint-disable-next-line no-console\n        console.warn('Calling \"request\" multiple times without \"release\" has no effect.');\n        return;\n      }\n\n      try {\n        wakeLock.current = await navigator.wakeLock.request(type);\n\n        wakeLock.current.onrelease = (e: Event) => {\n          // Default to `true` - `released` API is experimental: https://caniuse.com/mdn-api_wakelocksentinel_released\n          setReleased((wakeLock.current && wakeLock.current.released) ?? true);\n          if (onRelease) {\n            onRelease(e);\n          }\n          wakeLock.current = null;\n        };\n\n        onRequest?.();\n        setReleased((wakeLock.current && wakeLock.current.released) ?? false);\n      } catch (error) {\n        if (onError) {\n          onError(error as Error);\n        } else {\n          // eslint-disable-next-line no-console\n          console.error((error as Error)?.message);\n        }\n      }\n    },\n    [isSupported, onRequest, onError, onRelease]\n  );\n\n  const release = useCallback(async () => {\n    const isWakeLockUndefined = wakeLock.current == null;\n    if (!isSupported) {\n      // eslint-disable-next-line no-console\n      console.warn('Calling the \"release\" function has no effect, Wake Lock Screen API isn\\'t supported.');\n      return;\n    }\n    if (isWakeLockUndefined) {\n      // eslint-disable-next-line no-console\n      console.warn('Calling `release` before `request` has no effect.');\n      return;\n    }\n\n    if (wakeLock.current) {\n      await wakeLock.current.release();\n    }\n  }, [isSupported]);\n\n  return {\n    isSupported: isSupported,\n    request:     request,\n    released:    released,\n    release:     release,\n    type:        (wakeLock.current && wakeLock.current.type) || undefined,\n  };\n};\n","import { useCallback, useContext } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/recipe_header.css';\n\nimport Icon from '../../common/components/Icon';\nimport CookingModeContext from '../context/CookingModeContext';\nimport { useWakeLock } from '../../common/hooks/useWakeLock';\nimport Button from '../../common/components/Button';\n\nconst messages = defineMessages({\n  activate_cooking_mode_tooltip: {\n    id: 'recipe.activate_cooking_mode_tooltip',\n    description: 'Tooltip displayed when hovering the activate cooking mode button',\n    defaultMessage: 'Keep display awake.',\n  },\n  deactivate_cooking_mode_tooltip: {\n    id: 'recipe.deactivate_cooking_mode_tooltip',\n    description: 'Tooltip displayed when hovering the deactivate cooking mode button',\n    defaultMessage: 'Release the display wake lock.',\n  },\n});\n\nconst CookingModeButton: React.FC = () => {\n  const { formatMessage } = useIntl();\n\n  const { isSupported } = useWakeLock();\n  const cookingModeContext = useContext(CookingModeContext);\n  const isCookingMode = cookingModeContext?.cookingMode ?? false;\n\n  const handleClick = useCallback(() => {\n    cookingModeContext?.setCookingMode(!isCookingMode);\n  }, [cookingModeContext?.setCookingMode, isCookingMode]);\n\n  if (!isSupported) return null;\n\n  return (\n    <Button id='cooking-mode-toggle' variant={isCookingMode ? 'primary' : 'outline-primary'} onClick={handleClick} tooltip={formatMessage(isCookingMode ? messages.deactivate_cooking_mode_tooltip : messages.activate_cooking_mode_tooltip)}>\n      <Icon icon='stopwatch' variant={isCookingMode ? 'filled' : 'light'} />\n    </Button>\n  );\n};\n\nexport default CookingModeButton;\n","import { useCallback, useMemo, useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/recipe_header.css';\n\nimport { getRoutePath, optionallyFormatMessage } from '../../common/utility';\nimport Icon from '../../common/components/Icon';\nimport Chip from '../../common/components/Chip';\nimport Ratings from '../../rating/components/Ratings';\nimport P from '../../common/components/P';\nimport { Recipe } from '../store/RecipeTypes';\nimport Modal from '../../common/components/Modal';\nimport WidthHeightRatio from '../../common/components/WidthHeightRatio';\nimport Image from '../../common/components/Image';\nimport ImageViewer from '../../common/components/ImageViewer';\nimport CookingModeButton from './CookingModeButton';\nimport Button from '../../common/components/Button';\nimport NavButton from '../../common/components/NavButton';\n\nexport interface IRecipeHeaderProps {\n  recipe:       Recipe | undefined;\n  userIsAuthor: boolean;\n\n  onEditRecipe: () => void;\n  deleteRecipe: () => void;\n  // onAddToMenuClick: () => void;\n}\n\nconst messages = defineMessages({\n  edit_tooltip: {\n    id: 'recipe.edit_tooltip',\n    description: 'Tooltip displayed when hovering the edit recipe icon button',\n    defaultMessage: 'Edit this recipe',\n  },\n  delete_tooltip: {\n    id: 'recipe.delete_tooltip',\n    description: 'Tooltip displayed when hovering the delete recipe icon button',\n    defaultMessage: 'Delete this recipe',\n  },\n  print_tooltip: {\n    id: 'recipe.print_tooltip',\n    description: 'Tooltip displayed when hovering the print icon button',\n    defaultMessage: 'Print this recipe',\n  },\n  recipe_comments: {\n    id: 'recipe.comments',\n    description: 'Button to comments',\n    defaultMessage: 'Comments',\n  },\n  prep_time: {\n    id: 'recipe.prep_time',\n    description: 'Preparation time',\n    defaultMessage: 'Prep time',\n  },\n  cooking_time: {\n    id: 'recipe.cooking_time',\n    description: 'Cooking time',\n    defaultMessage: 'Cooking time',\n  },\n  minutes: {\n    id: 'recipe.minutes',\n    description: 'minutes',\n    defaultMessage: 'minutes',\n  },\n  source: {\n    id: 'recipe.source',\n    description: 'Source of the recipe',\n    defaultMessage: 'Source',\n  },\n  created_by: {\n    id: 'recipe.created_by',\n    description: 'Created by',\n    defaultMessage: 'Created by',\n  },\n  last_updated: {\n    id: 'recipe.last_updated',\n    description: 'Last Updated',\n    defaultMessage: 'Last Updated',\n  },\n  confirm_delete_title: {\n    id: 'recipe.confirm_delete_title',\n    description: 'Confirm deletion - dialog title',\n    defaultMessage: 'Confirm deletion',\n  },\n  confirm_delete_message: {\n    id: 'recipe.confirm_delete',\n    description: 'Are you sure you want to delete this recipe?',\n    defaultMessage: 'Are you sure you want to delete this recipe?',\n  },\n  confirm_delete_accept: {\n    id: 'recipe.confirm_delete_accept',\n    description: 'Confirm deletion - Accept button title',\n    defaultMessage: 'Delete',\n  },\n});\n\nconst RecipeHeader: React.FC<IRecipeHeaderProps> = ({\n    recipe, userIsAuthor, onEditRecipe, deleteRecipe }: IRecipeHeaderProps) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const handleEditClick    = useCallback(() => { onEditRecipe(); }, [onEditRecipe]);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState<boolean>(false);\n  const handleDeleteClick  = useCallback(() => { setShowDeleteConfirm(true); }, []);\n  const handleDeleteAccept = useCallback(() => { deleteRecipe(); }, [deleteRecipe]);\n  const handleDeleteClose  = useCallback(() => { setShowDeleteConfirm(false); }, []);\n\n  const editLink = userIsAuthor ? (\n    <NavButton\n        id='edit-recipe-button'\n        variant = 'outline-primary'\n        tooltip={formatMessage(messages.edit_tooltip)}\n        to={getRoutePath(`/recipe/edit/${recipe?.slug}`)}\n        onClick={handleEditClick}\n        size='sm'>\n      <Icon icon='pencil' />\n    </NavButton>\n  ) : null;\n\n  const deleteLink = userIsAuthor ? (\n    <Button id='trash-recipe-button' variant='outline-danger' size='sm' onClick={handleDeleteClick} tooltip={formatMessage(messages.delete_tooltip)}>\n      <Icon icon='trash' />\n    </Button>\n  ) : null;\n\n  const source = useMemo(() => {\n    if (recipe?.source) {\n      let hostname = '';\n      if (recipe?.source && recipe.source.match(/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/g)) {\n        // Get Host name of a URL\n        const a = document.createElement('a');\n        a.href = recipe.source;\n        hostname = a.hostname;\n      }\n\n      return (\n        <div>\n          {`${formatMessage(messages.source)}: `}\n          {hostname.length > 0 && (\n            <>\n              <a href={recipe.source} target='_blank' rel='noreferrer' className='print-hidden'>{hostname}</a>\n              <a href={recipe.source} target='_blank' rel='noreferrer' className='print-only'>{recipe.source}</a>\n            </>\n          )}\n          {hostname.length === 0 && recipe.source}\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }, [recipe?.source]);\n\n  const printButton = (\n    <Button id='print-recipe-button' variant='outline-primary' onClick={window.print} tooltip={formatMessage(messages.print_tooltip)}>\n      <Icon icon='printer' />\n    </Button>\n  );\n\n  const optionButtons = (\n    <div className='options print-hidden'>\n      <div className='options-wrapper'>\n        {userIsAuthor && (\n          <>\n            {editLink}\n            {deleteLink}\n          </>\n        )}\n        {/*\n          <Button variant='outline-primary' tooltip='Add receipt to menu' onClick={onAddToMenuClick}>\n            <Icon icon='calendar' />\n          </Button>\n        */}\n        <CookingModeButton />\n        {printButton}\n      </div>\n    </div>\n  );\n\n  const chips = recipe != null ? (\n    <>\n      <div className='recipe-header-chips'>\n        {recipe.prepTime != null && recipe.prepTime > 0 && (\n          <Chip variant='secondary'>\n            <Icon icon='clock' />\n            {`${formatMessage(messages.prep_time)}: `}\n            {recipe.prepTime}\n            {` ${formatMessage(messages.minutes)}`}\n          </Chip>\n        )}\n        {recipe.cookTime != null && recipe.cookTime > 0 && (\n          <Chip variant='secondary'>\n            <Icon icon='clock' />\n            {`${formatMessage(messages.cooking_time)}: `}\n            {recipe.cookTime}\n            {` ${formatMessage(messages.minutes)}`}\n          </Chip>\n        )}\n        {recipe.course != null && recipe.course.title != null && recipe.course.title.length > 0 && (\n          <Chip variant='secondary'>\n            <Icon icon='bar-chart' />\n            {optionallyFormatMessage(intl, 'course.', recipe.course.title)}\n          </Chip>\n        )}\n        {recipe.cuisine != null && recipe.cuisine.title != null && recipe.cuisine.title.length > 0 && (\n          <Chip variant='secondary'>\n            <Icon icon='globe' variant='light' />\n            {optionallyFormatMessage(intl, 'cuisine.', recipe.cuisine.title)}\n          </Chip>\n        )}\n      </div>\n      <div className='recipe-header-chips'>\n        <Chip variant='secondary'>\n          <Icon icon='calendar' />\n          {recipe?.updateDate && new Date(recipe.updateDate).toLocaleDateString(intl.locale)}\n        </Chip>\n        <Chip variant='secondary'>\n          <Icon icon='person' />\n          {recipe?.username ?? ''}\n        </Chip>\n      </div>\n      {recipe.tags != null && recipe.tags.length > 0 && (\n        <div className='recipe-header-chips'>\n          {recipe.tags.map(t => (\n            <Chip key={String(t.title)} variant='secondary'>\n              {optionallyFormatMessage(intl, 'tag.', t.title)}\n            </Chip>\n          ))}\n        </div>\n      )}\n    </>\n  ) : null;\n\n  return (\n    <>\n      <article className='recipe-header'>\n        <h1 className='d-block d-xl-none'>{recipe?.title}</h1>\n\n        <Row className='flex-row-reverse justify-content-center'>\n          {recipe != null && recipe.photo && (\n            <>\n              <Col xl={6} lg={12} className='img-wrapper print-hidden'>\n                <WidthHeightRatio height={66.67} width={100}>\n                  <ImageViewer>\n                    <Image\n                        src = {recipe.photo}\n                        alt = ''\n                        className='img-responsive print-hidden' />\n                  </ImageViewer>\n                </WidthHeightRatio>\n                {optionButtons}\n              </Col>\n              <Col sm={7} xs={12} className='col-sm-push-5 print-only'>\n                <WidthHeightRatio height={66.67} width={100} className='print-only print-image'>\n                  <ImageViewer>\n                    <Image\n                        src = {recipe.photoThumbnail ?? recipe.photo}\n                        alt = '' />\n                  </ImageViewer>\n                </WidthHeightRatio>\n              </Col>\n            </>\n          )}\n          {recipe != null && !recipe.photo && (\n            optionButtons\n          )}\n\n          <Col xl={6} lg={12} className='info-wrapper'>\n            <h1 className='d-none d-xl-block'>{recipe?.title}</h1>\n            <P>{recipe?.info}</P>\n            <Ratings stars={recipe?.rating ?? 0} />\n            {chips}\n            {source}\n          </Col>\n        </Row>\n      </article>\n\n      <Modal\n          show        = {showDeleteConfirm}\n          title       = {formatMessage(messages.confirm_delete_title)}\n          acceptTitle = {formatMessage(messages.confirm_delete_accept)}\n          acceptButtonProps = {{ variant: 'danger' }}\n          onAccept    = {handleDeleteAccept}\n          onClose     = {handleDeleteClose}\n          className   = 'delete'>\n        {formatMessage(messages.confirm_delete_message)}\n      </Modal>\n    </>\n  );\n};\n\nexport default RecipeHeader;\n","import { defineMessages, useIntl } from 'react-intl';\nimport classNames from 'classnames';\n\nimport '../css/directions.css';\n\nimport { IngredientGroup } from '../store/RecipeTypes';\nimport P from '../../common/components/P';\nimport { PendingState, ReducerMeta } from '../../common/store/GenericReducerType';\nimport Loading from '../../common/components/Loading';\nimport HeaderLink from '../../common/components/HeaderLink';\nimport Directions from './Directions';\n\nconst messages = defineMessages({\n  directions: {\n    id: 'recipe.directions',\n    description: 'Directions',\n    defaultMessage: 'Directions',\n  },\n  no_directions: {\n    id: 'recipe.directions.no_directions',\n    description: 'No directions provided message',\n    defaultMessage: '(This recipe has no directions.)',\n  },\n});\n\nexport interface IDirectionsPanelProps {\n  directions: string;\n  recipeMeta: ReducerMeta;\n  ingredients: Array<IngredientGroup>;\n}\n\nconst DirectionsPanel: React.FC<IDirectionsPanelProps> = ({\n    directions: directionsString, recipeMeta, ingredients }: IDirectionsPanelProps) => {\n  const { formatMessage } = useIntl();\n\n  const pending = recipeMeta.pending;\n  const hasNoData = pending === PendingState.COMPLETED\n      && directionsString.trim().length <= 1; // Ignore single fake char.\n\n  const isMultiDirections = directionsString.includes(':\\n');\n\n  return (\n    <article className={classNames('directions-panel', { 'multi-directions': isMultiDirections })}>\n      <h2 id='directions-heading'>\n        {formatMessage(messages.directions)}\n        <HeaderLink linkFor='directions-heading' />\n      </h2>\n      {pending === PendingState.LOADING && directionsString === '' && <Loading />}\n      {hasNoData && (\n        <P className='placeholder'>{formatMessage(messages.no_directions)}</P>\n      )}\n      {!hasNoData && (\n        <div className='direction-groups'>\n          <Directions directions={directionsString} ingredients={ingredients} />\n        </div>\n      )}\n    </article>\n  );\n};\n\nexport default DirectionsPanel;\n","import { Col, Row } from 'react-bootstrap';\n\nimport '../css/recipe.css';\n\nimport { Recipe } from '../store/RecipeTypes';\nimport { ReducerMeta } from '../../common/store/GenericReducerType';\nimport IngredientsPanelContainer from '../containers/IngredientsPanelContainer';\nimport RecipeHeader from './RecipeHeader';\nimport DirectionsPanel from './DirectionsPanel';\n\ninterface IRecipeSchemeProps {\n  recipe:       Recipe | undefined;\n  recipeMeta:   ReducerMeta;\n  userId:       number | undefined;\n\n  onEditRecipe: () => void;\n  deleteRecipe: () => void;\n\n  // lists: Array<any>;\n  // onAddToMenuClick: () => void;\n}\n\nconst RecipeScheme: React.FC<IRecipeSchemeProps> = ({ recipe, recipeMeta, userId, onEditRecipe, deleteRecipe }: IRecipeSchemeProps) => (\n  <div className='recipe-details'>\n    <RecipeHeader\n        recipe = {recipe}\n        userIsAuthor = {userId != null && userId === recipe?.author}\n        onEditRecipe = {onEditRecipe}\n        // onAddToMenuClick={props.onAddToMenuClick}\n        deleteRecipe = {deleteRecipe} />\n\n    <hr />\n\n    <Row>\n      <Col xl={4} lg={12}>\n        <IngredientsPanelContainer\n            recipe     = {recipe}\n            recipeMeta = {recipeMeta}\n            userId     = {userId}\n            />\n      </Col>\n      <hr className='d-block d-xl-none' />\n      <Col xl={8} lg={12}>\n        <DirectionsPanel\n            directions  = {recipe?.directions ?? ''}\n            recipeMeta  = {recipeMeta}\n            ingredients = {recipe?.ingredientGroups ?? []} />\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default RecipeScheme;\n","import { useCallback, useMemo, useState } from 'react';\n\nimport CookingModeContext, { ICookingModeContext } from './CookingModeContext';\n\n/** {@link CookingModeContextProvider} Props. */\ninterface ICookingModeContextProviderProps {\n  /** App container that should have access to the providers. */\n  children?: React.ReactNode | React.ReactElement;\n}\n\n/**\n * {@link CookingModeContext} Provider.\n *\n * @param props - {@link ICookingModeContextProviderProps}.\n */\nconst CookingModeContextProvider: React.FC<ICookingModeContextProviderProps> = ({\n    children }: ICookingModeContextProviderProps) => {\n  const [isCookingMode, setIsCookingMode] = useState<boolean>(false);\n\n  const updateCookingMode = useCallback((active: boolean) => { setIsCookingMode(active); }, []);\n\n  const value: ICookingModeContext = useMemo(() => ({\n    cookingMode:    isCookingMode,\n    setCookingMode: updateCookingMode,\n  }), [isCookingMode]);\n\n  return (\n    <CookingModeContext.Provider value={value}>\n      {children}\n    </CookingModeContext.Provider>\n   );\n};\n\nexport default CookingModeContextProvider;\n","// Coded by Gilad Peleg (https://github.com/pgilad/react-page-visibility)\n\nconst hasDocument: boolean = typeof document !== 'undefined';\nconst vendorEvents = [\n  {\n    hidden: 'hidden',\n    event: 'visibilitychange',\n    state: 'visibilityState',\n  },\n  {\n    hidden: 'webkitHidden',\n    event: 'webkitvisibilitychange',\n    state: 'webkitVisibilityState',\n  },\n  {\n    hidden: 'mozHidden',\n    event: 'mozvisibilitychange',\n    state: 'mozVisibilityState',\n  },\n  {\n    hidden: 'msHidden',\n    event: 'msvisibilitychange',\n    state: 'msVisibilityState',\n  },\n  {\n    hidden: 'oHidden',\n    event: 'ovisibilitychange',\n    state: 'oVisibilityState',\n  },\n];\n\nexport const isSupported: boolean = hasDocument && Boolean(document.addEventListener);\n\nexport const visibility = (() => {\n  if (!isSupported) {\n    return null;\n  }\n  return vendorEvents.find(e => e.hidden in document) ?? null;\n})();\n\nexport const getHandlerArgs = () => {\n  if (!visibility) {\n    return [true, 'visible'];\n  }\n  const { hidden, state } = visibility;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return [!(document as any)[hidden] as boolean, (document as any)[state] as string];\n};\n","// Coded by Gilad Peleg (https://github.com/pgilad/react-page-visibility)\n\nimport { useEffect, useState } from 'react';\n\nimport { getHandlerArgs, isSupported, visibility } from './utils';\n\nconst isSupportedLocal = isSupported && visibility;\n\nconst usePageVisibility = () => {\n  const [initiallyVisible] = getHandlerArgs();\n\n  const [isVisible, setIsVisible] = useState(initiallyVisible);\n\n  useEffect(() => {\n    if (isSupportedLocal && visibility) {\n      const handler = () => {\n        const [currentlyVisible] = getHandlerArgs();\n\n        setIsVisible(currentlyVisible);\n      };\n\n      document.addEventListener(visibility.event, handler);\n    }\n\n    return () => {\n      if (isSupportedLocal && visibility) {\n        const handler = () => {\n          const [currentlyVisible] = getHandlerArgs();\n\n          setIsVisible(currentlyVisible);\n        };\n\n        document.removeEventListener(visibility.event, handler);\n      }\n    };\n  }, []);\n\n  return isVisible;\n};\n\nexport default usePageVisibility;\n","import { useCallback, useContext, useEffect, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport '../css/recipe_header.css';\n\nimport { useWakeLock } from '../../common/hooks/useWakeLock';\nimport usePageVisibility from '../../common/components/pageVisibility/usePageVisibility';\n\nimport Toast from '../../common/components/Toast';\nimport Modal from '../../common/components/Modal';\nimport CookingModeContext from '../context/CookingModeContext';\n\nconst messages = defineMessages({\n  activated_cooking_mode_toast: {\n    id: 'recipe.activated_cooking_mode_toast',\n    description: 'Toast displayed when activating the cooking mode button',\n    defaultMessage: 'Your display will stay awake now.\\nHappy cooking!',\n  },\n  still_cooking_modal_title: {\n    id: 'recipe.still_cooking_modal_title',\n    description: 'Title of the modal to ask to continue keeping the display awake.',\n    defaultMessage: 'Still cooking?',\n  },\n  still_cooking_modal_text: {\n    id: 'recipe.still_cooking_modal_text',\n    description: 'Body text of the modal to ask to continue keeping the display awake.',\n    defaultMessage: 'Do you want to continue keeping the display awake?',\n  },\n  still_cooking_modal_yes: {\n    id: 'recipe.still_cooking_modal_yes',\n    description: 'Yes button.',\n    defaultMessage: 'Yes',\n  },\n  still_cooking_modal_no: {\n    id: 'recipe.still_cooking_modal_no',\n    description: 'no button.',\n    defaultMessage: 'No',\n  },\n});\n\nconst CookingModeHandler: React.FC = () => {\n  const { formatMessage } = useIntl();\n\n  const cookingModeContext = useContext(CookingModeContext);\n  const isCookingMode = cookingModeContext?.cookingMode ?? false;\n\n  let timer: NodeJS.Timeout | undefined;\n\n  const [showCookingModeToast, setShowCookingModeToast] = useState<boolean>(false);\n  const [askIfStillActive, setAskIfStillActive] = useState<boolean>(false);\n\n  const { isSupported, request, release, released } = useWakeLock();\n\n  const isPageVisible = usePageVisibility();\n  useEffect(() => {\n    if (!isSupported || !isCookingMode) return;\n\n    if (!isPageVisible) {\n      if (released === false) {\n        release();\n      }\n    } else {\n      request();\n    }\n  }, [isPageVisible]);\n\n  useEffect(() => {\n    if (!isCookingMode) {\n      clearTimer();\n      if (released === false) {\n        release();\n      }\n    } else if (isSupported) {\n      request()\n        .then(() => {\n          renewTimer();\n          setTimeout(() => {\n            setShowCookingModeToast(true);\n          }, 1);\n        });\n    }\n  }, [isCookingMode]);\n\n  // componentWillUnmount\n  useEffect(() => () => {\n    clearTimer(false);\n    if (released === false) {\n      release();\n    }\n  }, []);\n\n  const pauseLock = () => {\n    release();\n    setAskIfStillActive(true);\n  };\n\n  const renewTimer = () => {\n    clearTimer();\n    timer = setTimeout(() => {\n      pauseLock();\n    }, 1000 * 60 * 30);\n  };\n\n  const clearTimer = (resetState = true) => {\n    if (resetState) {\n      setShowCookingModeToast(false);\n      setAskIfStillActive(false);\n    }\n    if (timer != null) {\n      clearTimeout(timer);\n    }\n  };\n\n  const handleStillActive = useCallback(() => {\n    request()\n      .then(() => {\n        renewTimer();\n      });\n  }, [request, renewTimer]);\n\n  const handleNotActiveAnymore = useCallback((autoClose: boolean) => {\n    if (!autoClose) {\n      cookingModeContext?.setCookingMode(false);\n    }\n  }, [cookingModeContext?.setCookingMode]);\n\n  return (\n    <>\n      <Toast\n          show = {isCookingMode && showCookingModeToast}\n          autoHide = {10000}\n          anchorOrigin = {{ horizontal: 'center', vertical: 'bottom' }}\n          onClose = {() => setShowCookingModeToast(false)}>\n        {formatMessage(messages.activated_cooking_mode_toast)}\n      </Toast>\n\n      <Modal\n          show = {askIfStillActive}\n          title = {formatMessage(messages.still_cooking_modal_title)}\n          acceptTitle = {formatMessage(messages.still_cooking_modal_yes)}\n          closeTitle = {formatMessage(messages.still_cooking_modal_no)}\n          onAccept = {handleStillActive}\n          onClose = {handleNotActiveAnymore}>\n        {formatMessage(messages.still_cooking_modal_text)}\n      </Modal>\n    </>\n  );\n};\n\nexport default CookingModeHandler;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router';\n\nimport '../css/recipe.css';\n\nimport Loading from '../../common/components/Loading';\nimport RecipeScheme from '../components/RecipeScheme';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport * as RecipeActions from '../store/RecipeActions';\nimport * as RecipeFormActions from '../../recipe_form/store/actions';\n// import MenuItemModal from '../../menu/components/modals/MenuItemModal';\n// import * as MenuItemActions from '../../menu/actions/MenuItemActions';\n// import { fetchRecipeList } from '../../menu/actions/RecipeListActions';\n// import { menuItemValidation } from '../../menu/actions/validation';\nimport { RootState } from '../../app/Store';\nimport { Recipe } from '../store/RecipeTypes';\nimport { getRoutePath } from '../../common/utility';\nimport useCrash from '../../common/hooks/useCrash';\nimport CookingModeContextProvider from '../context/CookingModeContextProvider';\nimport CookingModeHandler from '../components/CookingModeHandler';\n\nconst RecipeContainer: React.FC = () => {\n  const dispatch = useDispatch();\n  const nav = useNavigate();\n  const crash = useCrash();\n\n  const userId = useSelector((state: RootState) => state.account.item?.id);\n  const recipeState = useSelector((state: RootState) => state.recipe);\n  const recipe      = recipeState.item;\n  const recipeMeta  = recipeState.meta;\n  const prevRecipe  = useRef<Recipe | undefined>();\n\n  // const [showItemModal, setShowItemModal] = useState<boolean>(false);\n  const [isDeleting, setIsDeleting] = useState<boolean>(false);\n\n  const handlePreloadRecipe = useCallback(() => {\n    if (recipe == null) { crash('Invalid state: recipe may not be null'); return; }\n    dispatch(RecipeFormActions.preload(recipe));\n  }, [recipe, dispatch]);\n\n  // const menuItemSave = useCallback(() => { /* dispatch(MenuItemActions.save() */ }, [dispatch]);\n  const deleteRecipe = useCallback(() => {\n    if (recipe == null) { crash('Invalid state: recipe may not be null'); return; }\n    setIsDeleting(true);\n    dispatch(RecipeActions.deleteRecipe(recipe.id, recipe.slug));\n  }, [recipe, dispatch]);\n\n  // Handle deletion\n  useEffect(() => {\n    if (prevRecipe.current == null) {\n      prevRecipe.current = recipe;\n    } else if (isDeleting && prevRecipe.current != null && recipe == null) {\n      nav(getRoutePath('/browser'));\n    }\n  }, [recipe]);\n\n  if (recipe != null) {\n    return (\n      <CookingModeContextProvider>\n        {/* TODO Menu\n        <MenuItemModal\n            id={0}\n            show={showItemModal}\n            onHide={() => setShowItemModal(false)}\n            recipe={recipe.id}\n            title={recipe.title}\n            onSave={menuItemSave}\n            fetchRecipeList={fetchRecipeList}\n            validation={menuItemValidation} /> */}\n        <RecipeScheme\n            recipe       = {recipe}\n            recipeMeta   = {recipeMeta}\n            userId       = {userId}\n\n            onEditRecipe = {handlePreloadRecipe}\n            deleteRecipe = {deleteRecipe} />\n        <CookingModeHandler />\n      </CookingModeContextProvider>\n    );\n  } else {\n    return (<Loading message='Loading' />);\n  }\n};\n\nexport default RecipeContainer;\n","import { useEffect, useMemo } from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport * as _ from 'lodash-es';\n\nimport { RootState } from '../../app/Store';\nimport { useDispatch, useSelector } from '../../common/store/redux';\nimport Ratings from '../../rating/containers/Ratings';\nimport PageWrapper from '../../common/components/PageWrapper';\nimport RecipeFooter from '../components/RecipeFooter';\nimport { PendingState } from '../../common/store/GenericReducerType';\nimport { getResourcePath } from '../../common/utility';\nimport * as RecipeActions from '../store/RecipeActions';\nimport RecipeContainer from './RecipeContainer';\n\nconst RecipePage: React.FC = () => {\n  const params = useParams();\n  const nav = useNavigate();\n  const dispatch = useDispatch();\n\n  const recipeState  = useSelector((state: RootState) => state.recipe);\n  const recipeMeta  = recipeState.meta;\n\n  const paramsRecipe = params.recipe;\n  // Load Recipe\n  useEffect(() => {\n    if (paramsRecipe) {\n      dispatch(RecipeActions.load(paramsRecipe));\n    }\n  }, [paramsRecipe]);\n\n  // If recipe not found, redirect to NotFound-Page\n  useEffect(() => {\n    if (_.get(recipeMeta.error, 'status') === 404) {\n      nav(getResourcePath('/NotFound'));\n    }\n  }, [recipeMeta.error]);\n\n  // componentWillUnmount\n  useEffect(() => () => {\n    dispatch(RecipeActions.reset());\n  }, []);\n\n  const ratings = useMemo(() => <Ratings />, [recipeState.item?.id, recipeState.meta.pending]);\n  const footer  = useMemo(() => <RecipeFooter recipe={recipeState.item} />, [recipeState.item?.id, recipeState.item?.author]);\n\n  return (\n    <PageWrapper title={recipeState.item?.title}>\n      <RecipeContainer />\n      {recipeState.meta.pending === PendingState.COMPLETED && ratings}\n      {recipeState.meta.pending === PendingState.COMPLETED && footer}\n    </PageWrapper>\n  );\n};\n\nexport default RecipePage;\n"],"names":["getRecipeImage","recipe","photoThumbnail","images","getResourcePath","concat","Math","floor","random","length","_ref","data","onOpenRecipe","IMAGE_PLACEHOLDER","useMemo","getRecipeImagePlaceholder","recipes","map","link","getRoutePath","slug","_jsx","Col","children","Card","className","classNames","_jsxs","Link","to","onClick","variant","src","alt","placeholder","as","Tooltip","id","tooltip","title","placement","Ratings","stars","rating","info","Row","xs","sm","lg","loadMiniBrowse","filter","dispatch","_objectSpread","toBasicAction","MINI_BROWSE_STORE","ACTION","request","get","serverURLs","then","res","_res$body$results","payload","body","results","toRecipeList","catch","err","handleError","messages","defineMessages","shuffleSuggestionsButton","description","defaultMessage","buildUrlFilter","count","filters","searchParams","URLSearchParams","append","toString","_params$recipe","heading","formatMessage","useIntl","useDispatch","location","useLocation","params","useParams","miniBrowseItems","useSelector","state","browse","browserMini","items","differentMiniBrowseItems","itm","recipeSlug","useEffect","MiniBrowseActions","handleShuffleClick","useCallback","handleOpenRecipe","rec","RecipeActions","_Fragment","Button","Icon","icon","ListRecipes","forwardRef","ref","tooltipPlacement","rest","_objectWithoutProperties","_excluded","ConditionalWrapper","condition","Boolean","render","childr","BootstrapButton","undefined","message","CircularProgress","accept","close","ModalHeaderCloseButton","onClose","type","size","Modal","_ref2","show","acceptTitle","closeTitle","onAccept","noCloseButton","_ref2$size","acceptButtonProps","_excluded2","handleClose","handleAccept","hasButton","BootstrapModal","backdrop","centered","onHide","keyboard","ErrorBoundary","verbose","printStack","NavButton","load","listId","GROCERY_LIST_STORE","groceryList","toGroceryList","create","_asyncToGenerator","_regeneratorRuntime","mark","_callee","item","wrap","_context","prev","next","abrupt","post","send","handleFormError","stop","_x","_x2","apply","arguments","update","_callee2","_context2","patch","_x3","_x4","_x5","remove","delete","format","i","formatter","quantity","measurement","join","bulkAdd","_ref3","_callee3","list","checkedIngredients","checkedSubRecipe","allItems","_context3","ingredientGroups","flatMap","ig","ingredients","subrecipes","sr","GroceryListActionTypes","toGroceryListItem","_x6","_x7","_x8","_x9","reset","Star","num","onChange","star_alt","handleClick","isHalfFilled","ariaLabel","stars_alt","starss","starsList","Array","from","_","RatingTimestamp","locale","updateDate","Date","getTime","toLocaleString","pubDate","RatingCommentComment","markup","comment","split","forEach","p","index","push","P","delete_button","confirm_delete_message","onDelete","intl","hash","hashId","replace","_useState","useState","_useState2","_slicedToArray","showDeleteConfirm","setShowDeleteConfirm","handleDeleteClick","ratingId","handleDeleteAccept","handleDeleteClose","ratingContainerId","PageScroller","uriFragmentId","userName","style","alignItems","_ratings$map","ratings","userId","pending","removeRating","no_comments","ratingsList","RatingComment","PendingState","addRating","onAddRatingSuccess","new_rating_title","rating_placeholder","rating_label","rating_comment_placeholder","rating_comment_label","submit","initialValues","handleSubmit","form","newRating","ReduxForm","onSubmit","subscription","renderSubmit","Form","ReFormStatus","onSubmitSuccess","InitialValuesResetter","Field","name","validate","requiredValidator","validateFields","fprops","input","value","ReInput","rows","label","maxLength","required","FormSpy","values","submitting","_ref4","disabled","userRole","showNewRating","onShowNewRating","new_rating_button","HeaderLink","linkFor","UserRole","includes","setShowNewRating","handleAddRatingSuccess","RatingsHeader","NewRating","RatingComments","add","RATING_STORE","author","toRating","RATINGS_STORE","account","ratingsState","recipeRating","recSlug","RatingsActions","removeRatingCallback","ReduxHelper","RatingsWrapper","role","meta","getFilters","course","course__slug","cuisine","cuisine__slug","Object","keys","miniBrowseMeta","hasConnection","error","MiniBrowse","ingredients_for_servings","servings","servings_input_tooltip","servings_update_button","_recipe$customServing","_recipe$customServing2","recipeMeta","updateServings","customServings","hasNoIngredients","min","max","autoComplete","parse","onFocus","onBlur","Select","errors","formatValidation","dirtySinceLastSubmit","submitError","namee","event","initializeCheckboxes","cbs","cb","initializeInredientGroupsCheckboxes","igs","AddToGroceryListForm","_ref5","lists","onAddList","submitRef","crash","useCrash","child_recipe_id","_ref6","_callee4","_form$ingredients","addSubrecipes","addIngredientGroups","upd","_context4","s","parseInt","substring","indexOf","igSlug","addIgIngredients","Set","find","igg","igIngredients","arr","_ref7","ListRow","ToggleAllCheckbox","SubRecipes","subRecipes","selectable","IngredientGroups","groups","hasSubrecipes","new_text","new_list_title","_ref8","_useState3","_useState4","addedNewList","setAddedNewList","prevListIds","useRef","handleAddListClick","newListTitle","suffixes","l","startsWith","Number","isNaN","sort","a","b","suffix","current","newList","_prevListIds$current","change","ReSelect","readOnly","_ref9","_useState5","_useState6","setValue","handleChange","_name","newValue","registeredFields","getRegisteredFields","ingredientGroupsCbs","f","subrecipesCbs","_toConsumableArray","cbKey","Checkbox","onSaveSuccess","measurementContext","useContext","MeasurementContext","formatMeasurementCb","formatMeasurement","GroceryListActions","createList","groceryLists","GroceryListsActions","bulkAddPending","handleEditSubmit","_submitRef$current","click","_ingredients$flatMap","allIngredients","allSubrecipes","bulkAddData","addIngredients","ii","handleSubmitSuccess","handleModalClose","autoClose","add_groceries","add_groceries_success_toast","isAuthenticated","showGroceriesModal","setShowGroceriesModal","handleAddGroceries","handleGroceriesModalClose","showGroceriesSuccessToast","setShowGroceriesSuccessToast","handleAddToGroceryListSuccess","handleCloseAddGroceryListToast","isDemoMode","AddToGroceryListModal","Toast","anchorOrigin","horizontal","vertical","no_ingredients","IngredientsHeader","Loading","withHeaderLink","IngredientFooter","_recipe$slug","_useSearchParams","useSearchParams","_useSearchParams2","setSearchParams","handleUpdateServings","String","locationServings","serv","servNumber","parseFloat","IngredientsPanel","ImageViewer","openModal","setOpenModal","handleOpenModal","handleCloseModal","fullscreen","ImageViewerContent","nextSrc","Children","element","isValidElement","props","nextTitle","lastIndexOf","download","href","createContext","useWakeLock","onError","onRequest","onRelease","released","setReleased","wakeLock","isSupported","window","navigator","isWakeLockAlreadyDefined","_args","console","warn","sent","onrelease","e","t0","release","isWakeLockUndefined","activate_cooking_mode_tooltip","deactivate_cooking_mode_tooltip","_cookingModeContext$c","cookingModeContext","CookingModeContext","isCookingMode","cookingMode","setCookingMode","edit_tooltip","delete_tooltip","print_tooltip","recipe_comments","prep_time","cooking_time","minutes","source","created_by","last_updated","confirm_delete_title","confirm_delete_accept","_recipe$username","_recipe$photoThumbnai","_recipe$rating","userIsAuthor","onEditRecipe","deleteRecipe","handleEditClick","editLink","deleteLink","hostname","match","document","createElement","target","rel","printButton","print","optionButtons","CookingModeButton","chips","prepTime","Chip","cookTime","optionallyFormatMessage","toLocaleDateString","username","tags","t","photo","xl","WidthHeightRatio","height","width","Image","directions","no_directions","directionsString","hasNoData","trim","isMultiDirections","Directions","_recipe$directions","_recipe$ingredientGro","RecipeHeader","IngredientsPanelContainer","DirectionsPanel","setIsCookingMode","updateCookingMode","active","hasDocument","vendorEvents","hidden","addEventListener","visibility","_vendorEvents$find","getHandlerArgs","isSupportedLocal","_getHandlerArgs","initiallyVisible","isVisible","setIsVisible","_getHandlerArgs3","currentlyVisible","removeEventListener","_getHandlerArgs5","activated_cooking_mode_toast","still_cooking_modal_title","still_cooking_modal_text","still_cooking_modal_yes","still_cooking_modal_no","timer","showCookingModeToast","setShowCookingModeToast","askIfStillActive","setAskIfStillActive","_useWakeLock","isPageVisible","usePageVisibility","renewTimer","setTimeout","clearTimer","clearTimeout","handleStillActive","handleNotActiveAnymore","autoHide","nav","useNavigate","_state$account$item","recipeState","prevRecipe","isDeleting","setIsDeleting","handlePreloadRecipe","RecipeFormActions","CookingModeContextProvider","RecipeScheme","CookingModeHandler","_recipeState$item","_recipeState$item2","_recipeState$item3","_recipeState$item4","paramsRecipe","footer","RecipeFooter","PageWrapper","RecipeContainer"],"sourceRoot":""}